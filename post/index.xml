<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on 浮游笔记</title>
		<link>https://fffou.com/post/</link>
		<description>Recent content in Posts on 浮游笔记</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>zh-hans</language>
		<copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
		<lastBuildDate>Sat, 25 Jul 2020 00:00:00 +0000</lastBuildDate>
		<atom:link href="https://fffou.com/post/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>nginx location配置中的root、alias用法区别之域名二级目录绑定其他网页目录</title>
			<link>https://fffou.com/post/2020-07-25/</link>
			<pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/2020-07-25/</guid>
			<description>这两天搭建了两个同类型的网站，我这里就说网站a和网站b吧，这里也假设他们的目录对应为/home/wwwroot/a、/home/wwwroot/a。后面想了一下为了维护方便，决定把b的网站目录绑定到a域名的二级目录，即：a.com/b/。
这里可能有些朋友要问，为什么不直接把b目录移动到a的目录之下。我没有这么做是因为b的网页文件是一个配套的程序生成的，而我移动文件，需要把配套的程序和配置文件一起移动到a目录之下，这样等于把源程序、配置文件、以及其他目录公开暴露无疑，虽然可以通过通过配置nginx的方式屏蔽下载源文件及屏蔽访问指定的目录，但还是略显麻烦。
所以在无奈之下，必须尝试原先设想的的思路是否可行，下面我就记录一步一步修改配置文件的过程，
原来的网页配置文件：
 server { listen 80; #listen [::]:80; server_name a.com ; index index.html index.htm index.php default.html default.htm default.php; root /home/wwwroot/a; }  添加设想的配置1：
 server { listen 80; #listen [::]:80; server_name a.com ; index index.html index.htm index.php default.html default.htm default.php; root /home/wwwroot/a; location /b { root /home/wwwroot/b; } }  配置生效后，直接访问a.com/b，页面直接显示404。
紧接着参考了笛声博客的《Nginx的location规则迷之匹配》这篇文章后，考虑到可能是location的优先级问题，直接在location处添加=提升优先级到最高，修改配置文件为：
 server { listen 80; #listen [::]:80; server_name a.com ; index index.html index.htm index.php default.html default.</description>
			<content type="html"><![CDATA[<p>这两天搭建了两个同类型的网站，我这里就说网站a和网站b吧，这里也假设他们的目录对应为/home/wwwroot/a、/home/wwwroot/a。后面想了一下为了维护方便，决定把b的网站目录绑定到a域名的二级目录，即：a.com/b/。</p>

<p>这里可能有些朋友要问，为什么不直接把b目录移动到a的目录之下。我没有这么做是因为b的网页文件是一个配套的程序生成的，而我移动文件，需要把配套的程序和配置文件一起移动到a目录之下，这样等于把源程序、配置文件、以及其他目录公开暴露无疑，虽然可以通过通过配置nginx的方式屏蔽下载源文件及屏蔽访问指定的目录，但还是略显麻烦。</p>

<p>所以在无奈之下，必须尝试原先设想的的思路是否可行，下面我就记录一步一步修改配置文件的过程，</p>

<p>原来的网页配置文件：</p>

<pre><code>  server
     {
         listen 80;
         #listen [::]:80;
         server_name a.com ;
         index index.html index.htm index.php default.html default.htm default.php;
         root  /home/wwwroot/a;
     }  
</code></pre>

<p>添加设想的配置1：</p>

<pre><code>  server
     {
         listen 80;
         #listen [::]:80;
         server_name a.com ;
         index index.html index.htm index.php default.html default.htm default.php;
         root  /home/wwwroot/a;

         location  /b  {
            root /home/wwwroot/b;  
           }
     }  
</code></pre>

<p>配置生效后，直接访问a.com/b，页面直接显示404。</p>

<p>紧接着参考了<a href="https://link.fffou.com/go/Nginx-location-config/">笛声博客的《Nginx的location规则迷之匹配》</a>这篇文章后，考虑到可能是location的优先级问题，直接在location处添加=提升优先级到最高，修改配置文件为：</p>

<pre><code>  server
     {
         listen 80;
         #listen [::]:80;
         server_name a.com ;
         index index.html index.htm index.php default.html default.htm default.php;
         root  /home/wwwroot/a;

         location = /b  {
            root /home/wwwroot/b;  
           }
     }  
</code></pre>

<p>配置生效后，访问a.com/b直接显示404，域名后面添加横杆后，即：a.com/b/，成功把域名的二级目录绑定到其他网页目录。</p>

<p>紧接着在配置文件中尝试alias替换root：</p>

<pre><code>  server
     {
         listen 80;
         #listen [::]:80;
         server_name a.com ;
         index index.html index.htm index.php default.html default.htm default.php;
         root  /home/wwwroot/a;

         location  /b  {
            alias /home/wwwroot/b;  
           }
     } 
</code></pre>

<p>配置生效后，打开a.com/b ：正常，打开a.com/b/ ：正常。</p>

<p>现在通过表格对比一下nginx location配置中的root、alias在域名二级目录绑定其他网页目录的优缺点及用法区别：</p>

<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">alias</th>
<th align="center">root</th>
</tr>
</thead>

<tbody>
<tr>
<td align="center">优点</td>
<td align="center">不用提升优先级，没有root第二个缺点</td>
<td align="center">暂不清楚</td>
</tr>

<tr>
<td align="center">缺点</td>
<td align="center">暂不清楚</td>
<td align="center">1.root需提升在location中的优先级  2.域名二级目录后面加<code>/</code>才能打开</td>
</tr>

<tr>
<td align="center">用法</td>
<td align="center">用在location{}之内</td>
<td align="center">用在location{}之内</td>
</tr>

<tr>
<td align="center">区别</td>
<td align="center">用在location{}之内不可单独使用</td>
<td align="center">用在location{}之内可单独使用，如用在server{}之内</td>
</tr>
</tbody>
</table>
]]></content>
		</item>
		
		<item>
			<title>为hugo主题hermit归档页面增加分页功能</title>
			<link>https://fffou.com/post/2020-05-14/</link>
			<pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/2020-05-14/</guid>
			<description>站点程序从动态切换到静态已经很久了，而我用的静态程序是hugo，不得不说hugo各方面都比较不错的，就是很难找到称心如意的主题。
今天某个博友问我文章归档页面是怎么样实现页面分页的，才想起去年通过搜索引擎找了好多主题，好不容易才找到这个hugo主题hermit，因为觉得归档页的页面很简洁，所以直接把主题的归档页面当作了站点首页，期间遇到主题在新版本的hugo中存在小问题 ，把hugo退回到0.56.3版本。
直到后面遇到实在不能忍受的问题，就是这款主题归档页面竟然没有分页功能！要知道我这个人是比较追求稳定的，万一哪天文章多起来了，光是归档页面估计都能拉好几个屏幕那么长，这是我不能接受的。得想办法修改主题以实现这个功能，但是我不怎么会修改hugo主题，后面还是一咬牙，仔细看了看hugo官方文档，紧接着再翻看了十几二十个带翻页功能的hugo主题，终于看出了实现归档页面分页功能的可能：那就是为什么不通过查看别的hugo主题，文章列表分页功能是怎么实现的，想办法移植到这款主题的归档页面。
事实证明我的想法是对的，后面通过左拼右凑，还真实现了hermit主题归档页面的分页功能。期间也给其他没有归档分页功能的hugo主题弄上了分页功能，但是跟hermit主题实现分页功能在代码上有一点差异，所以本文标题才特意指定hermit，其他hugo主题也可以参考本文，对有差异的地方自行修改实现。
这里就以hugo主题hermit为例，记录增加归档页面的分页功能的实现步骤：
找到归档页面的源码部分，添加分页代码 hermit主题的归档页面源码在layouts/_default/list.html文件中:
如下代码：
 {{ define &amp;quot;header&amp;quot; }} {{ partialCached &amp;quot;header.html&amp;quot; . }} {{ end }} {{ define &amp;quot;main&amp;quot; }} &amp;lt;main class=&amp;quot;site-main section-inner thin animated fadeIn faster&amp;quot;&amp;gt; &amp;lt;h1&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt; {{- if .Content }} &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; {{ .Content }} &amp;lt;/div&amp;gt; {{- end }} {{- range .Data.Pages.GroupByDate &amp;quot;2006&amp;quot; }} &amp;lt;div class=&amp;quot;posts-group&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;post-year&amp;quot; id=&amp;quot;{{ .Key }}&amp;quot;&amp;gt;{{ .Key }}&amp;lt;/div&amp;gt; &amp;lt;ul class=&amp;quot;posts-list&amp;quot;&amp;gt; {{- range .Pages }} &amp;lt;li class=&amp;quot;post-item&amp;quot;&amp;gt; &amp;lt;a href=&amp;quot;{{.</description>
			<content type="html"><![CDATA[

<p>站点程序从动态切换到静态已经很久了，而我用的静态程序是hugo，不得不说hugo各方面都比较不错的，就是很难找到称心如意的主题。</p>

<p>今天某个博友问我文章归档页面是怎么样实现页面分页的，才想起去年通过搜索引擎找了好多主题，好不容易才找到这个hugo主题hermit，因为觉得归档页的页面很简洁，所以直接把主题的归档页面当作了站点首页，期间遇到主题在新版本的hugo中存在<a href="../191214/">小问题</a> ，把hugo退回到0.56.3版本。</p>

<p>直到后面遇到实在不能忍受的问题，就是这款主题归档页面竟然没有分页功能！要知道我这个人是比较追求稳定的，万一哪天文章多起来了，光是归档页面估计都能拉好几个屏幕那么长，这是我不能接受的。得想办法修改主题以实现这个功能，但是我不怎么会修改hugo主题，后面还是一咬牙，仔细看了看hugo官方文档，紧接着再翻看了十几二十个带翻页功能的hugo主题，终于看出了实现归档页面分页功能的可能：那就是为什么不通过查看别的hugo主题，文章列表分页功能是怎么实现的，想办法移植到这款主题的归档页面。</p>

<p>事实证明我的想法是对的，后面通过左拼右凑，还真实现了hermit主题归档页面的分页功能。期间也给其他没有归档分页功能的hugo主题弄上了分页功能，但是跟hermit主题实现分页功能在代码上有一点差异，所以本文标题才特意指定hermit，其他hugo主题也可以参考本文，对有差异的地方自行修改实现。</p>

<p>这里就以hugo主题hermit为例，记录增加归档页面的分页功能的实现步骤：</p>

<h3 id="找到归档页面的源码部分-添加分页代码">找到归档页面的源码部分，添加分页代码</h3>

<p>hermit主题的归档页面源码在<code>layouts/_default/list.html</code>文件中:</p>

<p>如下代码：</p>

<pre><code> {{ define &quot;header&quot; }}
 {{ partialCached &quot;header.html&quot; . }}
 {{ end }}

 {{ define &quot;main&quot; }}
    &lt;main class=&quot;site-main section-inner thin animated fadeIn faster&quot;&gt;
        &lt;h1&gt;{{ .Title }}&lt;/h1&gt;
        {{- if .Content }}
        &lt;div class=&quot;content&quot;&gt;
            {{ .Content }}
        &lt;/div&gt;
        {{- end }}
        {{- range .Data.Pages.GroupByDate &quot;2006&quot; }}
        &lt;div class=&quot;posts-group&quot;&gt;
            &lt;div class=&quot;post-year&quot; id=&quot;{{ .Key }}&quot;&gt;{{ .Key }}&lt;/div&gt;
            &lt;ul class=&quot;posts-list&quot;&gt;
                {{- range .Pages }}
                &lt;li class=&quot;post-item&quot;&gt;
                    &lt;a href=&quot;{{.Permalink}}&quot;&gt;
                        &lt;span class=&quot;post-title&quot;&gt;{{.Title}}&lt;/span&gt;
                        &lt;span class=&quot;post-day&quot;&gt;{{ .Date.Format .Site.Params.dateformShort }}&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                {{- end }}
             &lt;/ul&gt;
         &lt;/div&gt;
        {{- end }}
     &lt;/main&gt;
 {{ end }}

 {{ define &quot;footer&quot; }}
 {{ partialCached &quot;footer.html&quot; . }}
 {{ end }}
</code></pre>

<p>修改以下代码：</p>

<pre><code> {{- range .Data.Pages.GroupByDate &quot;2006&quot; }}  
</code></pre>

<p>为</p>

<pre><code> {{- range (.Paginate .Pages).Pages.GroupByDate &quot;2006&quot; }}  
</code></pre>

<p>那么修改后的代码就是：</p>

<pre><code> {{ define &quot;header&quot; }}
 {{ partialCached &quot;header.html&quot; . }}
 {{ end }}

 {{ define &quot;main&quot; }}
    &lt;main class=&quot;site-main section-inner thin animated fadeIn faster&quot;&gt;
        &lt;h1&gt;{{ .Title }}&lt;/h1&gt;
        {{- if .Content }}
        &lt;div class=&quot;content&quot;&gt;
            {{ .Content }}
        &lt;/div&gt;
        {{- end }}
        {{- range (.Paginate .Pages).Pages.GroupByDate &quot;2006&quot; }}
        &lt;div class=&quot;posts-group&quot;&gt;
            &lt;div class=&quot;post-year&quot; id=&quot;{{ .Key }}&quot;&gt;{{ .Key }}&lt;/div&gt;
            &lt;ul class=&quot;posts-list&quot;&gt;
                {{- range .Pages }}
                &lt;li class=&quot;post-item&quot;&gt;
                        &lt;a href=&quot;{{.Permalink}}&quot;&gt;
                        &lt;span class=&quot;post-title&quot;&gt;{{.Title}}&lt;/span&gt;
                        &lt;span class=&quot;post-day&quot;&gt;{{ .Date.Format .Site.Params.dateformShort }}&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                {{- end }}
            &lt;/ul&gt;
        &lt;/div&gt;
        {{- end }}

     &lt;/main&gt;
 {{ end }}

 {{ define &quot;footer&quot; }}
 {{ partialCached &quot;footer.html&quot; . }}
 {{ end }}
</code></pre>

<p>这时候hugo主题hermit归档页面已经实现分页功能，而我实现的原理就是在hermit这个主题的归档页面中，把展示文章列表的代码部分，也就是上面那行代码，在页面元素中增加了分页，实现了分页展示功能。其他hugo主题跟hermit主题相比，在修改归档页面增加分页功能这一步中可能有一点差异，而我所说的差异就这一步的代码差异，需要自己去尝试修改。</p>

<h3 id="为归档页面增加底部分页按钮">为归档页面增加底部分页按钮</h3>

<p>做完上面那一步，大家会发现归档页面的文章已经变少了，说明归档页面分页功能已经实现，所有文章列表被分成了几个页面。我们怎么查看其他分出来的页面呢？又怎么切换到上一页或下一页呢？难道在地址栏手动改动页面地址进行页面切换？当然不是，这一步就是为已经具备分页功能的归档页面增加底部页面切换按钮。</p>

<p>继续查看归档页面的代码：</p>

<pre><code> {{ define &quot;header&quot; }}
 {{ partialCached &quot;header.html&quot; . }}
 {{ end }}

 {{ define &quot;main&quot; }}
    &lt;main class=&quot;site-main section-inner thin animated fadeIn faster&quot;&gt;
        &lt;h1&gt;{{ .Title }}&lt;/h1&gt;
        {{- if .Content }}
        &lt;div class=&quot;content&quot;&gt;
            {{ .Content }}
        &lt;/div&gt;
        {{- end }}
        {{- range (.Paginate .Pages).Pages.GroupByDate &quot;2006&quot; }}
        &lt;div class=&quot;posts-group&quot;&gt;
            &lt;div class=&quot;post-year&quot; id=&quot;{{ .Key }}&quot;&gt;{{ .Key }}&lt;/div&gt;
            &lt;ul class=&quot;posts-list&quot;&gt;
                {{- range .Pages }}
                &lt;li class=&quot;post-item&quot;&gt;
                        &lt;a href=&quot;{{.Permalink}}&quot;&gt;
                        &lt;span class=&quot;post-title&quot;&gt;{{.Title}}&lt;/span&gt;
                        &lt;span class=&quot;post-day&quot;&gt;{{ .Date.Format .Site.Params.dateformShort }}&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                {{- end }}
            &lt;/ul&gt;
        &lt;/div&gt;
        {{- end }}

     &lt;/main&gt;
 {{ end }}

 {{ define &quot;footer&quot; }}
 {{ partialCached &quot;footer.html&quot; . }}
 {{ end }}  
</code></pre>

<p>增加以下代码到合适的部分，也就是文章列表的下面：</p>

<pre><code> {{ partial &quot;pagination.html&quot; . }}  
</code></pre>

<p>那么修改后的代码就是这样：</p>

<pre><code> {{ define &quot;header&quot; }}
 {{ partialCached &quot;header.html&quot; . }}
 {{ end }}

 {{ define &quot;main&quot; }}
    &lt;main class=&quot;site-main section-inner thin animated fadeIn faster&quot;&gt;
        &lt;h1&gt;{{ .Title }}&lt;/h1&gt;
        {{- if .Content }}
        &lt;div class=&quot;content&quot;&gt;
            {{ .Content }}
        &lt;/div&gt;
        {{- end }}
        {{- range (.Paginate .Pages).Pages.GroupByDate &quot;2006&quot; }}
        &lt;div class=&quot;posts-group&quot;&gt;
            &lt;div class=&quot;post-year&quot; id=&quot;{{ .Key }}&quot;&gt;{{ .Key }}&lt;/div&gt;
            &lt;ul class=&quot;posts-list&quot;&gt;
                {{- range .Pages }}
                &lt;li class=&quot;post-item&quot;&gt;
                        &lt;a href=&quot;{{.Permalink}}&quot;&gt;
                        &lt;span class=&quot;post-title&quot;&gt;{{.Title}}&lt;/span&gt;
                        &lt;span class=&quot;post-day&quot;&gt;{{ .Date.Format .Site.Params.dateformShort }}&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                {{- end }}
            &lt;/ul&gt;
        &lt;/div&gt;
        {{- end }}
        {{ partial &quot;pagination.html&quot; . }}
     &lt;/main&gt;
 {{ end }}

 {{ define &quot;footer&quot; }}
 {{ partialCached &quot;footer.html&quot; . }}
 {{ end }}  
</code></pre>

<p>上面通过引用了<code>layouts/partials</code>目录下的 <code>pagination.html</code>配置文件，以实现在这个归档页面底部添加可以切换分页的分页按钮功能，那么下面将有两种分页按钮供大家选择，选择自己喜欢的就行了：</p>

<h4 id="精简型分页按钮">精简型分页按钮</h4>

<p>下图就是精简型分页按钮：</p>

<p><img src="https://src.fffou.com/file/ffcode/img/2020-05-14-1.png" alt="精简型分页按钮" title="精简型分页按钮" /></p>

<p>那么怎么实现精简型分页按钮方式呢？首先进入<code>layouts/partials</code>目录新建<code>pagination.html</code>文件，添加以下代码：</p>

<pre><code> {{ if or (.Paginator.HasPrev) (.Paginator.HasNext) }}
 &lt;div class=&quot;pagination&quot;&gt;
     {{- if .Paginator.HasPrev }}
     &lt;a class=&quot;pagination__item pagination__item--prev btn&quot; href=&quot;{{ .Paginator.Prev.URL }}&quot;&gt;«&lt;/a&gt;
     {{- end }}
     &lt;span class=&quot;pagination__item pagination__item--current&quot;&gt;{{ .Paginator.PageNumber }}/{{ .Paginator.TotalPages }}&lt;/span&gt;
     {{- if .Paginator.HasNext }}
     &lt;a class=&quot;pagination__item pagination__item--next btn&quot; href=&quot;{{ .Paginator.Next.URL }}&quot;&gt;»&lt;/a&gt;
     {{- end }}
 &lt;/div&gt;
 {{ end }}  
</code></pre>

<p>然后在对应的css样式文件中添加以下样式：</p>

<pre><code> .pagination {
     margin-top: 20px
 }

 .pagination__item {
    display: inline-block;
    padding: 10px 15px;
     font-weight: 700;
     color: #000;
     background: #c6c6c7
 }

 .pagination__item:hover, .pagination__item--current {
    color: #fff;
    background: #535e75
 }  
</code></pre>

<h4 id="数字型分页按钮">数字型分页按钮</h4>

<p>下图就是数字型分页按钮：</p>

<p><img src="https://src.fffou.com/file/ffcode/img/2020-05-14-2.png" alt="数字型分页按钮" title="数字型分页按钮" /></p>

<p>上面已经实现精简型分页按钮方式，那么又怎么实现数字型分页按钮方式呢？首先进入<code>layouts/partials</code>目录新建<code>pagination.html</code>文件，添加以下代码：</p>

<pre><code> {{ $pag := $.Paginator }}
 {{ if gt $pag.TotalPages 1 }}
 &lt;ul class=&quot;pagination&quot;&gt;
     {{ with $pag.First }}
     &lt;!-- &lt;li class=&quot;page-item {{ if not $pag.HasPrev }}disabled{{ end }}&quot;&gt;
         &lt;span class=&quot;page-link&quot;&gt;
             &lt;a href=&quot;{{ .URL }}&quot; aria-label=&quot;First&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&amp;laquo;&amp;laquo;&lt;/span&gt;&lt;/a&gt;
         &lt;/span&gt;
     &lt;/li&gt; --&gt;
     {{ end }}
     &lt;!-- &lt;li class=&quot;page-item {{ if not $pag.HasPrev }}disabled{{ end }}&quot;&gt;
         &lt;span class=&quot;page-link&quot;&gt;
             &lt;a href=&quot;{{ if $pag.HasPrev }}{{ $pag.Prev.URL }}{{ end }}&quot; aria-label=&quot;Previous&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&amp;laquo;&lt;/span&gt;&lt;/a&gt;
         &lt;/span&gt;
     &lt;/li&gt; --&gt;
     {{ $.Scratch.Set &quot;__paginator.ellipsed&quot; false }}
     {{ range $pag.Pagers }}
     {{ $right := sub .TotalPages .PageNumber }}
     {{ $showNumber := or (le .PageNumber 1) (eq $right 0) }}
     {{ $showNumber := or $showNumber (and (gt .PageNumber (sub $pag.PageNumber 3)) (lt .PageNumber (add $pag.PageNumber 3)))  }}
     {{ if $showNumber }}
         {{ $.Scratch.Set &quot;__paginator.ellipsed&quot; false }}
         {{ $.Scratch.Set &quot;__paginator.shouldEllipse&quot; false }}
     {{ else }}
         {{ $.Scratch.Set &quot;__paginator.shouldEllipse&quot; (not ($.Scratch.Get &quot;__paginator.ellipsed&quot;) ) }}
         {{ $.Scratch.Set &quot;__paginator.ellipsed&quot; true }}
     {{ end }}
     {{ if $showNumber }}
     &lt;li class=&quot;page-item {{ if eq . $pag }}active{{ end }}&quot;&gt;
         &lt;span class=&quot;page-link&quot;&gt;
             &lt;a href=&quot;{{ .URL }}&quot;&gt;{{ .PageNumber }}&lt;/a&gt;&lt;/li&gt;
         &lt;/span&gt;
     {{ else if ($.Scratch.Get &quot;__paginator.shouldEllipse&quot;) }}
     &lt;li class=&quot;page-item &quot;&gt;&lt;span class=&quot;page-link&quot; aria-hidden=&quot;true&quot;&gt;&amp;hellip;&lt;/span&gt;&lt;/li&gt;
     {{ end }}
     {{ end }}
     &lt;!-- &lt;li class=&quot;page-item {{ if not $pag.HasNext }}disabled{{ end }}&quot;&gt;
         &lt;span class=&quot;page-link&quot;&gt;
             &lt;a href=&quot;{{ if $pag.HasNext }}{{ $pag.Next.URL }}{{ end }}&quot; aria-label=&quot;Next&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&amp;raquo;&lt;/span&gt;&lt;/a&gt;
         &lt;/span&gt;
     &lt;/li&gt; --&gt;
     &lt;!-- {{ with $pag.Last }}
     &lt;li class=&quot;page-item {{ if not $pag.HasNext }}disabled{{ end }}&quot;&gt;
         &lt;span class=&quot;page-link&quot;&gt;
         &lt;a href=&quot;{{ .URL }}&quot; aria-label=&quot;Last&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;&amp;raquo;&amp;raquo;&lt;/span&gt;&lt;/a&gt;
     &lt;/span&gt;
     &lt;/li&gt;
     {{ end }} --&gt;
 &lt;/ul&gt;
 {{ end }}  
</code></pre>

<p>然后在对应的css样式文件中添加以下样式:</p>

<pre><code> .pagination {
     display: flex;
     flex-direction: row;
     justify-content: center;
     list-style: none;
     white-space: nowrap;
     width: 100%;
     padding-top: 2em
 }

 .pagination a {
     -webkit-font-smoothing: antialiased;
     font-size: 12px;
     color: #bfbfbf;
     letter-spacing: .1em;
     font-weight: 700;
     padding: 5px;
     text-decoration: none;
     transition: .3s
 }

 .pagination li {
     padding-bottom: 3px;
     margin: 0 20px;
     box-sizing: border-box;
     position: relative;
     display: inline
 }

 .pagination li.disabled {
     display: none
 }

 .pagination li:hover a {
     color: #000
 }

 .dark-theme .pagination li:hover a {
     color: #fff
 }

 .pagination li:before,.pagination li:after {
     position: absolute;
     content: &quot;&quot;;
     width: 0;
     height: 3px;
     background: #000;
     transition: .3s;
     bottom: 0
 }

 .dark-theme .pagination li:before,.dark-theme .pagination li:after {
     background: #fff
 }

 .pagination li:before .active,.pagination li:after .active {
     width: 100%
 }

 .pagination li:before {
     left: 50%
 }

 .pagination li:after {
     right: 50%
 }

 .pagination li:hover:before,.pagination li:hover:after {
     width: 50%
 }

 .pagination li.active a {
     color: #000
 }

 .dark-theme .pagination li.active a {
     color: #fff
 }

 .pagination li.active:before,.pagination li.active:after {
     width: 60%
 }/*!Color themes for Google Code Prettify | MIT License | github.com/jmblog/color-themes-for-google-code-prettify*/.prettyprint {
     background: #2d2d2d;
     font-family: Menlo,Bitstream Vera Sans Mono,DejaVu Sans Mono,Monaco,Consolas,monospace;
     border: 0!important
 }  
</code></pre>
]]></content>
		</item>
		
		<item>
			<title>利用vps配合aria2以及AriaNg搭建自己的离线下载服务器</title>
			<link>https://fffou.com/post/2020-02-10/</link>
			<pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/2020-02-10/</guid>
			<description>博客所使用的vps已经用了有两年了，而博客还是静态的，vps内存占用也就比较低，还有少的可怜的访客，每个月跑的流量还不到vps规定流量上限的零头，这样看来vps还可以搭建其他服务玩玩。
因为经常需要下载国外的资源，每次下载都比较慢，所以首先想到是通过搭建离线下载服务器来中转文件，以加快下载速度。
看了一下网上现成的脚本，首先看到小z的CCAA的Docker部署，奈何这个CCAA整合了AriaNg + Aria2 + FileBrowser ，而我服务器已经安装了Filebrowser，自己有小小的洁癖，不喜欢重复安装Filebrowser，也不怎么喜欢这样部署Docker，确切地说我更喜欢用一台vps专们用来跑Docker服务。
既然不用Docker部署，就只能考虑手动安装，但是网上很多现成的手动安装教程，我安装了几次都不能成功，后面自己换了一些思路，折腾了好久才成功，为了方便下次折腾，特意记录下这篇文章。
准备 准备三个域名：域名A、域名B、域名C
我这里环境：Debian、军哥的LNMP一键包
安装步骤 1.安装Aria2
 apt-get update apt-get upgrade apt-get install aria2  2.测试Aria2是否安装成功：
 aria2 -v  出现下列内容表示安装成功：
 aria2 version 1.34.0 Copyright (C) 2006, 2017 Tatsuhiro Tsujikawa This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.</description>
			<content type="html"><![CDATA[

<p>博客所使用的vps已经用了有两年了，而博客还是静态的，vps内存占用也就比较低，还有少的可怜的访客，每个月跑的流量还不到vps规定流量上限的零头，这样看来vps还可以搭建其他服务玩玩。</p>

<p>因为经常需要下载国外的资源，每次下载都比较慢，所以首先想到是通过搭建离线下载服务器来中转文件，以加快下载速度。</p>

<p>看了一下网上现成的脚本，首先看到<code>小z</code>的<code>CCAA</code>的Docker部署，奈何这个<code>CCAA</code>整合了AriaNg + Aria2 + FileBrowser ，而我服务器已经安装了Filebrowser，自己有小小的洁癖，不喜欢重复安装Filebrowser，也不怎么喜欢这样部署Docker，确切地说我更喜欢用一台vps专们用来跑Docker服务。</p>

<p>既然不用Docker部署，就只能考虑手动安装，但是网上很多现成的手动安装教程，我安装了几次都不能成功，后面自己换了一些思路，折腾了好久才成功，为了方便下次折腾，特意记录下这篇文章。</p>

<h3 id="准备">准备</h3>

<p>准备三个域名：域名A、域名B、域名C</p>

<p>我这里环境：Debian、军哥的LNMP一键包</p>

<h3 id="安装步骤">安装步骤</h3>

<p>1.安装Aria2</p>

<pre><code> apt-get update  

 apt-get upgrade  

 apt-get install aria2
</code></pre>

<p>2.测试Aria2是否安装成功：</p>

<pre><code> aria2 -v  
</code></pre>

<p>出现下列内容表示安装成功：</p>

<pre><code> aria2 version 1.34.0
 Copyright (C) 2006, 2017 Tatsuhiro Tsujikawa

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 ** Configuration **
 Enabled Features: Async DNS, BitTorrent, Firefox3 Cookie, GZip, HTTPS, Message Digest, Metalink, XML-RPC, SFTP
 Hash Algorithms: sha-1, sha-224, sha-256, sha-384, sha-512, md5, adler32
 Libraries: zlib/1.2.11 libxml2/2.9.4 sqlite3/3.27.2 GnuTLS/3.6.6 nettle GMP/6.1.2 c-ares/1.14.0 libssh2/1.8.0
 Compiler: gcc 8.3.0
 built by  x86_64-pc-linux-gnu
 on        Feb 28 2019 15:36:13
 System: Linux 4.19.0-5-amd64 #1 SMP Debian 4.19.37-5+deb10u2 (2019-08-08) x86_64

 Report bugs to https://github.com/aria2/aria2/issues
 Visit https://aria2.github.io/  
</code></pre>

<p>3.为域名A、域名B、域名C新建主机配置</p>

<p>这里阐述一下域名A、域名B、域名C的作用:</p>

<pre><code> 域名A用作：Aria2的Webui界面
 域名B用作：反代Aria2的RPC监听端口
 域名C的作用：Aria2下载好的文件，展示在网页，方便下载 
 简单的说就是我们访问Aria2的网页界面的时候需要用到域名A，然后在Aria2网页界面设置下载配置时候需要填写域名B，而下载好的文件，我们可以直接在浏览器打开域名C的页面进行下载  
</code></pre>

<p>现在明白了域名A、域名B、域名C的作用和用途，下面就先开始着手三个域名的配置。分别新建域名A、域名B、域名C对应的主机生成对应域名证书，并设置强制跳转80到443。LNMP一键包很简单的，我这里就懒得去写了。下面进入三个域名详细配置：</p>

<h4 id="域名a配置aria2的webui-ariang">域名A配置Aria2的Webui：AriaNg</h4>

<p>进入域名A的网页目录：</p>

<pre><code> cd /home/wwwroot/域名A  
</code></pre>

<p>去<a href="https://link.fffou.com/go/AriaNg/">AriaNg的github下载页</a>下载AriaNg：</p>

<pre><code> 以下脚本是示例：

 ###下载AriaNg：
 wget AriaNg-xxx.zip

 ###解压AriaNg： 
 unzip AriaNg-xxx.zip  

 ###进入AriaNg目录：  
 cd AriaNg-xxx

 ###复制全部文件到域名A网页根目录：     
 mv *  ../

 ###返回域名A网页根目录，并删除AriaNg目录、AriaNg下载的zip文件    
 cd ../      
 rm -rf AriaNg-xxx.zip AriaNg-xxx  
</code></pre>

<h4 id="配置aria2">配置Aria2</h4>

<p>在aria目录下建立两个文件 aria2.conf aria2.session，我这里为了方便直接新建在root目录了</p>

<p>创建aria2目录并新建aria2.conf文件：</p>

<pre><code> cd /root &amp;&amp; mkdir aria2 &amp;&amp; cd aria2 &amp;&amp; vi aria2.conf  
</code></pre>

<p><code>注意</code>:另外你需要自己手动创建一个空的aria2.session文件</p>

<p>在<code>aria2.conf</code>文件中写入下面的配置：</p>

<pre><code> ## '#'开头为注释内容, 选项都有相应的注释说明, 根据需要修改 ##
 ## 被注释的选项填写的是默认值, 建议在需要修改时再取消注释  ##

 ## 文件保存相关 ##

 # 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置
 dir=/root/Downloads
 # 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M
 #disk-cache=32M
 # 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc
 # 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc
 # falloc和trunc则需要文件系统和内核支持
 # NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项
 #file-allocation=none
 # 断点续传
 continue=true

 ## 下载连接相关 ##

 # 最大同时下载任务数, 运行时可修改, 默认:5
 #max-concurrent-downloads=5
 # 同一服务器连接数, 添加时可指定, 默认:1
 max-connection-per-server=5
 # 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M
 # 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载
 min-split-size=10M
 # 单个任务最大线程数, 添加时可指定, 默认:5
 #split=5
 # 整体下载速度限制, 运行时可修改, 默认:0
 #max-overall-download-limit=0
 # 单个任务下载速度限制, 默认:0
 #max-download-limit=0
 # 整体上传速度限制, 运行时可修改, 默认:0
 #max-overall-upload-limit=0
 # 单个任务上传速度限制, 默认:0
 #max-upload-limit=0
 # 禁用IPv6, 默认:false
 #disable-ipv6=true
 # 连接超时时间, 默认:60
 #timeout=60
 # 最大重试次数, 设置为0表示不限制重试次数, 默认:5
 #max-tries=5
 # 设置重试等待的秒数, 默认:0
 #retry-wait=0

 ## 进度保存相关 ##

 # 从会话文件中读取下载任务
 input-file=/root/aria2/aria2.session
 # 在Aria2退出时保存`错误/未完成`的下载任务到会话文件
 save-session=/root/aria2/aria2.session
 # 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0
 #save-session-interval=60

 ## RPC相关设置 ##

 # 启用RPC, 默认:false
 enable-rpc=true
 # 允许所有来源, 默认:false
 rpc-allow-origin-all=true
 # 允许非外部访问, 默认:false
 rpc-listen-all=true
 # 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同
 #event-poll=select
 # RPC监听端口, 端口被占用时可以修改, 默认:6800
 #rpc-listen-port=6800
 # 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项
 rpc-secret=你的密码
 # 是否启用 RPC 服务的 SSL/TLS 加密,
 # 启用加密后 RPC 服务需要使用 https 或者 wss 协议连接
 #rpc-secure=true
 # 在 RPC 服务中启用 SSL/TLS 加密时的证书文件,
 # 使用 PEM 格式时，您必须通过 --rpc-private-key 指定私钥
 #rpc-certificate=/path/to/certificate.pem
 # 在 RPC 服务中启用 SSL/TLS 加密时的私钥文件
 #rpc-private-key=/path/to/certificate.key

 ## BT/PT下载相关 ##

 # 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true
 #follow-torrent=true
 # BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999
 listen-port=51413
 # 单个种子最大连接数, 默认:55
 #bt-max-peers=55
 # 打开DHT功能, PT需要禁用, 默认:true
 enable-dht=false
 # 打开IPv6 DHT功能, PT需要禁用
 #enable-dht6=false
 # DHT网络监听端口, 默认:6881-6999
 #dht-listen-port=6881-6999
 # 本地节点查找, PT需要禁用, 默认:false
 #bt-enable-lpd=false
 # 种子交换, PT需要禁用, 默认:true
 enable-peer-exchange=false
 # 每个种子限速, 对少种的PT很有用, 默认:50K
 #bt-request-peer-speed-limit=50K
 # 客户端伪装, PT需要
 peer-id-prefix=-TR2770-
 user-agent=Transmission/2.77
 # 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0
 seed-ratio=0
 # 强制保存会话, 即使任务已经完成, 默认:false
 # 较新的版本开启后会在任务完成后依然保留.aria2文件
 #force-save=false
 # BT校验相关, 默认:true
 #bt-hash-check-seed=true
 # 继续之前的BT任务时, 无需再次校验, 默认:false
 bt-seed-unverified=true
 # 保存磁力链接元数据为种子文件(.torrent文件), 默认:false
 bt-save-metadata=true  
</code></pre>

<p>以下6项需要修改：</p>

<pre><code> 1.rpc-secret=你的密码，把‘你的密码’改为你的密码即可
 2.dir=/root/Downloads 将路径改为你的下载目录
 3.input-file=/root/aria2/aria2.session改为你的aria2.session路经
 4.save-session=/root/aria2/aria2.session改为你的aria2.session路经
 5.#rpc-secure=true 去掉#
 6.#rpc-certificate=/path/to/certificate.pem 去掉#
   #rpc-private-key=/path/to/certificate.key 去掉#
 并把rpc-certificate、rpc-private-key的证书和密钥设置为域名A证书和密钥所在的目录地址  
</code></pre>

<h4 id="配置aria2为系统服务并开机启动">配置Aria2为系统服务并开机启动：</h4>

<pre><code> cat &lt;&lt; EOF &gt; /lib/systemd/system/aria2.service  
</code></pre>

<p>输入下面的配置：</p>

<pre><code> [Unit]
 Description=Aria2 Client Service
 After=network.target

 [Service]
 Type=simple
 Restart=always
 RestartSec=5s
 ExecStart=/usr/bin/aria2c --conf-path=/root/aria2/aria2.conf –D

 [Install]
 WantedBy=multi-user.target  
</code></pre>

<p>开机启动Aria2：</p>

<pre><code> systemctl enable aria2  
</code></pre>

<p>启用Aria2：</p>

<pre><code> systemctl start aria2  
</code></pre>

<h4 id="域名b配置-反代aria2的rpc监听端口">域名B配置：反代Aria2的RPC监听端口</h4>

<p>修改域名B的网页conf配置文件：</p>

<pre><code> vi /usr/local/nginx/conf/vhost/域名B.conf  
</code></pre>

<p>添加反代配置，注意看下面注释的部分：</p>

<pre><code> server
     {
         listen 80;
         #listen [::]:80;
         server_name 域名B ;
         rewrite ^(.*)$ https://$host$1 permanent;

     }

 server
     {
         listen 443 ssl http2;
         #listen [::]:443 ssl http2;
         server_name 域名B ;
         index index.html index.htm index.php default.html default.htm default.php;

         ssl_certificate /usr/local/nginx/conf/ssl/域名B/fullchain.cer;
         ssl_certificate_key /usr/local/nginx/conf/ssl/域名B/域名B.key;
         ssl_session_timeout 5m;
         ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
         ssl_prefer_server_ciphers on;
         ssl_ciphers &quot;TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5&quot;;
         ssl_session_cache builtin:1000 shared:SSL:10m;
         # openssl dhparam -out /usr/local/nginx/conf/ssl/dhparam.pem 2048
         ssl_dhparam /usr/local/nginx/conf/ssl/dhparam.pem;

         include rewrite/none.conf;
         #error_page   404   /404.html;

         include enable-php.conf;

 # 这是注释的部分，我们需要添加这里的配置文件  
 location ^~ /jsonrpc {
 proxy_set_header X-Real-IP $remote_addr;
 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 proxy_set_header Host $http_host;
 proxy_set_header X-NginX-Proxy true;
 proxy_http_version 1.1;
 proxy_set_header Connection &quot;&quot;;
 proxy_pass_header X-Transmission-Session-Id;
 add_header Front-End-Https on;

 proxy_pass https://127.0.0.1:6800/jsonrpc;
 }


     }  
</code></pre>

<h4 id="让下载目录的文件通过域名c的网页方式展示出来">让下载目录的文件通过域名C的网页方式展示出来</h4>

<p>编辑域名C的网页conf配置文件，开启nginx的文件展示功能：</p>

<pre><code> vi /usr/local/nginx/conf/vhost/域名C.conf  
</code></pre>

<p>注意修改下面注释的部分：</p>

<pre><code> server
     {
         listen 80;
         #listen [::]:80;
         server_name 域名C ;
         rewrite ^(.*)$ https://$host$1 permanent;
     }

 server
     {
         listen 443 ssl http2;
         #listen [::]:443 ssl http2;
         server_name 域名C ;
         index index.html index.htm index.php default.html default.htm default.php;

         ssl_certificate /usr/local/nginx/conf/ssl/域名C/fullchain.cer;
         ssl_certificate_key /usr/local/nginx/conf/ssl/域名C/域名C.key;
         ssl_session_timeout 5m;
         ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
         ssl_prefer_server_ciphers on;
         ssl_ciphers &quot;TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5&quot;;
         ssl_session_cache builtin:1000 shared:SSL:10m;
         # openssl dhparam -out /usr/local/nginx/conf/ssl/dhparam.pem 2048
         ssl_dhparam /usr/local/nginx/conf/ssl/dhparam.pem;

         include rewrite/none.conf;
         #error_page   404   /404.html;

         include enable-php.conf;

 # 这是注释部分，我们需要添加这里的配置文件
 location / {   
         root /root/Downloads;  # 修改为你配置文件中的下载目录
         autoindex on;                            
         autoindex_exact_size off;            
         autoindex_localtime on;       
 }

     }
</code></pre>

<h4 id="重启nginx使配置生效">重启Nginx使配置生效</h4>

<pre><code> service nginx restart 或者 lnmp restart  
</code></pre>

<p>4.进入Aria2的网页界面Ariang配置Aria2：</p>

<p>浏览器打开域名A，点击 <code>AriaNg 设置</code>,选定右侧的<code>RPC (域名A:443)</code>，在<code>Aria2 RPC 地址</code>的第一个空格输入 <code>域名B</code>，第二空格输入端口：<code>443</code>,第三个空格不做改动。<br />
<code>Aria2 RPC 协议</code>设置为 <code>https</code>,<code>Aria2 RPC Http 请求方法</code>设置为<code>POST</code>,在<code>Aria2 RPC 密钥</code>处输入你设定的密码。</p>

<p>设置完后右上角会出现<code>配置已经修改, 请重新加载页面使其生效.</code>弹窗，点击<code>重新加载 AriaNg</code>,成功连接aria2服务，开始体验自己搭建的离线下载服务。</p>
]]></content>
		</item>
		
		<item>
			<title>Nginx利用filebrowser管理vps中的文件</title>
			<link>https://fffou.com/post/20010501/</link>
			<pubDate>Sun, 05 Jan 2020 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/20010501/</guid>
			<description>站点环境用的是LNMP一键包，并没有像大家一样用宝塔、AMH之类的面板程序，一来是因为vps配置较低，二来用一键包个人认为比较安全，但是遇到需要管理vps中的文件的时候就比较麻烦。不过还好，可以配合filebrowser管理vps的文件。
filebrowser 功能介绍 filebrowser是用Go语言开发的文件管理器，不需要第三方地依赖，除了配合Nginx、Apache、Caddy等Web服务器使用外，也可单独作为Web文件管理器使用，功能上支持简单的音视频播放，分享文件方面提供永久链接或临时链接（按时、分、秒）进行分享，并支持在下载页面展示当前下载页面的二维码，非常实用。站长我喜欢用filebrowser编辑一些配置文件，避免了了SSH终端用vi编辑文件的痛苦。
安装filebrowser 前面说了filebrowser的功能，现在是分享搭建filebrowser的步骤，我用的linux环境是Debian 64位系统，所以这里以Debian 64位系统作为本文的系统基础，大家可做做参考。
1.切换到home目录
 cd /home  2.SSh连接vps，访问filebrowse托管平台github的releases 页面，下载对应系统版本的filebrowser文件，并解压文件。
 wget https://github.com/filebrowser/filebrowser/releases/download/v2.0.16/linux-amd64-filebrowser.tar.gz tar -xzvf linux-amd64-filebrowser.tar.gz  3.赋予filebrowser运行权限
 chmod +x ./filebrowser  4.指定端口运行一遍filebrowser，这样filebrowser就会在同目录下生成同名配置文件filebrowser.db。因为Nginx占用了80、433端口，所以这里我指定了其他端口，你可以按照自己的需求指定自己的端口，本文以25557端口为例
 ./filebrowser -p 25557 -a 0.0.0.0  5.访问filebrowser，并更改默认的密码，默认账户密码皆为admin
 http://ip:25557  6.终止filebrowser运行
 CTRL+C  7.设置filebrowser为系统服务
 cat &amp;lt;&amp;lt; EOF &amp;gt; /lib/systemd/system/filebrowser.service  8.接着输入下列配置
 [Unit] Description=Filebrowser Client Service After=network.target [Service] Type=simple Restart=always RestartSec=5s ExecStart=/home/filebrowser -p 25557 -a 0.0.0.0 ExecReload=/home/filebrowser reload -p 25557 -a 0.</description>
			<content type="html"><![CDATA[

<p>站点环境用的是LNMP一键包，并没有像大家一样用宝塔、AMH之类的面板程序，一来是因为vps配置较低，二来用一键包个人认为比较安全，但是遇到需要管理vps中的文件的时候就比较麻烦。不过还好，可以配合filebrowser管理vps的文件。</p>

<h2 id="filebrowser-功能介绍">filebrowser 功能介绍</h2>

<p>filebrowser是用Go语言开发的文件管理器，不需要第三方地依赖，除了配合Nginx、Apache、Caddy等Web服务器使用外，也可单独作为Web文件管理器使用，功能上支持简单的音视频播放，分享文件方面提供永久链接或临时链接（按时、分、秒）进行分享，并支持在下载页面展示当前下载页面的二维码，非常实用。站长我喜欢用filebrowser编辑一些配置文件，避免了了SSH终端用vi编辑文件的痛苦。</p>

<h2 id="安装filebrowser">安装filebrowser</h2>

<p>前面说了filebrowser的功能，现在是分享搭建filebrowser的步骤，我用的linux环境是Debian 64位系统，所以这里以Debian  64位系统作为本文的系统基础，大家可做做参考。</p>

<p>1.切换到home目录</p>

<pre><code> cd /home  
</code></pre>

<p>2.SSh连接vps，访问filebrowse托管平台github的<a href="https://link.fffou.com/go/filebrowser-github/">releases</a> 页面，下载对应系统版本的filebrowser文件，并解压文件。</p>

<pre><code>  wget https://github.com/filebrowser/filebrowser/releases/download/v2.0.16/linux-amd64-filebrowser.tar.gz   

  tar -xzvf linux-amd64-filebrowser.tar.gz  
</code></pre>

<p>3.赋予filebrowser运行权限</p>

<pre><code> chmod +x ./filebrowser  
</code></pre>

<p>4.指定端口运行一遍filebrowser，这样filebrowser就会在同目录下生成同名配置文件<code>filebrowser.db</code>。因为Nginx占用了80、433端口，所以这里我指定了其他端口，你可以按照自己的需求指定自己的端口，本文以25557端口为例</p>

<pre><code> ./filebrowser -p 25557 -a 0.0.0.0  
</code></pre>

<p>5.访问filebrowser，并更改默认的密码，默认账户密码皆为admin</p>

<pre><code> http://ip:25557  
</code></pre>

<p>6.终止filebrowser运行</p>

<pre><code> CTRL+C  
</code></pre>

<p>7.设置filebrowser为系统服务</p>

<pre><code> cat &lt;&lt; EOF &gt; /lib/systemd/system/filebrowser.service  
</code></pre>

<p>8.接着输入下列配置</p>

<pre><code> [Unit]  
 Description=Filebrowser Client Service  
 After=network.target  

 [Service]  
 Type=simple  
 Restart=always  
 RestartSec=5s  
 ExecStart=/home/filebrowser -p 25557 -a 0.0.0.0   
 ExecReload=/home/filebrowser reload -p 25557 -a 0.0.0.0  

 [Install]  
 WantedBy=multi-user.target  
 EOF  
</code></pre>

<p>9.开机启动filebrowser</p>

<pre><code> systemctl enable filebrowser  
</code></pre>

<p>10.启用filebrowser</p>

<pre><code> systemctl start filebrowser
</code></pre>

<h2 id="设置通过域名并启用ssl访问filebrowser">设置通过域名并启用SSL访问filebrowser</h2>

<p>通过的上面的步骤，已经安装filebrowser并设置为系统服务运行，通过ip+端口访问filebrowser并不美观，也不安全，建议启用域名并上SSL访问filebrowser，这里通过LNMP一键包反代实现。</p>

<h3 id="lnmp一键包反代方式实现ssl访问filebrowser">LNMP一键包反代方式实现SSL访问filebrowser</h3>

<p>如果你用的LNMP一键包，就简单许多，直接通过 <code>lnmp vhost add</code> 方式新建站点并启用证书，然后编辑站点对应的<code>conf</code> 配置文件，我这里以xxx.com示例：</p>

<pre><code> vi /usr/local/nginx/conf/vhost/xxx.com.conf  
</code></pre>

<p>把下面的部分：</p>

<pre><code> server  
{                                                               
    listen 80;                                                 
    server_name xxx.com;
    .....   
    }    

server
{
    listen 443 ssl http2;
    #listen [::]:443 ssl http2;
    server_name XXX.com;
    index index.html index.htm index.php default.html default.htm default.php;
    root  /home/wwwroot/XXX.com;

    .....
}
</code></pre>

<p>改为</p>

<pre><code> server  
{                                                               
    listen 80;                                                 
    server_name xxx.com;
    rewrite ^(.*)$ https://$host$1 permanent; 
    }    

server
{
    listen 443 ssl http2;
    #listen [::]:443 ssl http2;
    server_name XXX.com;

    .....

location / {
            proxy_pass http://localhost:27775;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }


}  
</code></pre>

<blockquote>
<p>特别强调：上面的网页配置文件上面的网页配置文件<code>conf</code>中，一定要删除下列列出的部分，否则filebrowser会一直卡在首页界面并无限循环。因为不删除这部分，filebrowser无法正常加载css、js等文件，页面当然就无法正常加载了</p>
</blockquote>

<pre><code>    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
    {
        expires      30d;
    }

    location ~ .*\.(js|css)?$
    {
        expires      12h;
    }

    location ~ /.well-known {
        allow all;
    }

    location ~ /\.
    {
        deny all;
    }
</code></pre>

<p>重启Nginx生效</p>

<pre><code>  lnmp restart  
</code></pre>

<h3 id="nginx反代方式">Nginx反代方式</h3>

<p>Nginx反代方式跟LNMP基本类似，因为LNMP一键包本质上还是Nginx环境，配置文件如下：</p>

<pre><code> server {
   listen       80;
   server_name XXX.com;
   rewrite ^ https://$http_host$request_uri? permanent;   
 }


 server {
   listen 443;
   root /XXX/XXX.com;
   server_name XXX.com; 
   ssl on;
   ssl_certificate /XXX.com.bundle.crt;  #证书路径
   ssl_certificate_key /XXX.com.key;  #密钥路径
   ssl_session_timeout 5m;
   ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; 
   ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
   ssl_prefer_server_ciphers on;
 location / {
     proxy_pass http://localhost:27775;
    }
 }  
</code></pre>

<p>重启nginx</p>

<pre><code> service nginx restart  
</code></pre>

<h2 id="filebrowser首页目录设置">filebrowser首页目录设置</h2>

<p><code>设置</code>&mdash;&mdash;<code>用户管理</code>&mdash;&mdash;用户名右边的编辑按钮&mdash;&mdash;<code>目录范围</code></p>

<p>可设置下面的常见目录：</p>

<pre><code> /home ##用户文件夹
 /     ##根目录
 .     ##filebrowser展示为当前目录，即filebrowser所在的目录
 /home/wwwwroot     ##LNMP的网页存放目录
 /home/wwwlogs/     ##LNMP的网页日志目录
</code></pre>
]]></content>
		</item>
		
		<item>
			<title>军哥LNMP一键包启用Brotli压缩</title>
			<link>https://fffou.com/post/19123101/</link>
			<pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/19123101/</guid>
			<description>最近网上看了许多文章，说是在压缩算法上面Brotli比gzipy更具压缩效率，进而让网页打开的速度更快。我看在眼里，很是心动，奈何人懒，一直拖到前段时间才用上，也因为懒，这篇文章直到今天才写。Brotli具有以下优势：
 针对常见的 Web 资源内容，Brotli 的性能相比 Gzip 提高了 17-25%； 当 Brotli 压缩级别为 1 时，压缩率比 Gzip 压缩等级为 9（最高）时还要高； 在处理不同 HTML 文档时，Brotli 依然能够提供非常高的压缩率。
  有必要利用Brotli优化站点 我的站点放在了国外，访问速度相比国内站点本就不占优势，特别上到了晚上，线路炸的让人一言难尽。所以希望在自己的能力范围内，能优化就尽量优化，这样能让网站的访问速度更上一层楼，尽可能的提高访客的浏览体验。
看过我我前面文章的朋友应该还记得，我写的那篇 《LNMP升级Nginx和Openssl到最新版》 那篇文章，本人以为可以如法炮制，果断从Brotli的github项目中下载源码，并在LNMP的编译参数中像那篇文章一样加上 –with-openssl=/root/lnmp1.6/src/brotli-master 编译参数，就可以把Brotli编译到nginx中，但是后面怎么弄都启用不了Brotli。又通过 nginx -V查看了编译好的nginx编译参数，发现Brotli模板并没有编译到nginx的二进制文件里头。
编译Brotli并开启Brotli的方法 后面翻看了许多文章，看到了其中一种nginx通过挂接模板编译的方式，果断尝试，一次编译成功。今天写此文章，用作笔记。因为我用的是军哥的LNMP一键包，这里就以这个一键包去写。下面是方法和步骤：
1.定位到LNMP源码目录
 cd /root/lnmp1.6/src/  2.通过git从github拉取Brotli源码
 git clone https://github.com/google/ngx_brotli.git  3.切换到Brotli目录
 cd ngx_brotli  4.初始化子模版
 git submodule update --init  5.编辑lnmp.conf配置文件
 vi /root/lnmp1.6/lnmp.conf  6.添加需要编译的Brotli模板
 Nginx_Modules_Options=&#39;--add-module=/root/lnmp1.6/src/ngx_brotli&#39;  7.重新编译nginx
 cd /root/lnmp1.</description>
			<content type="html"><![CDATA[

<p>最近网上看了许多文章，说是在压缩算法上面Brotli比gzipy更具压缩效率，进而让网页打开的速度更快。我看在眼里，很是心动，奈何人懒，一直拖到前段时间才用上，也因为懒，这篇文章直到今天才写。Brotli具有以下优势：</p>

<ul>
<li>针对常见的 Web 资源内容，Brotli 的性能相比 Gzip 提高了 17-25%；</li>
<li>当 Brotli 压缩级别为 1 时，压缩率比 Gzip 压缩等级为 9（最高）时还要高；</li>
<li>在处理不同 HTML 文档时，Brotli 依然能够提供非常高的压缩率。<br />

<br /></li>
</ul>

<h3 id="有必要利用brotli优化站点">有必要利用Brotli优化站点</h3>

<p>我的站点放在了国外，访问速度相比国内站点本就不占优势，特别上到了晚上，线路炸的让人一言难尽。所以希望在自己的能力范围内，能优化就尽量优化，这样能让网站的访问速度更上一层楼，尽可能的提高访客的浏览体验。</p>

<p>看过我我前面文章的朋友应该还记得，我写的那篇 <a href="../1991801/">《LNMP升级Nginx和Openssl到最新版》</a> 那篇文章，本人以为可以如法炮制，果断从Brotli的github项目中下载源码，并在LNMP的编译参数中像那篇文章一样加上 <code>–with-openssl=/root/lnmp1.6/src/brotli-master</code> 编译参数，就可以把Brotli编译到nginx中，但是后面怎么弄都启用不了Brotli。又通过 <code>nginx -V</code>查看了编译好的nginx编译参数，发现Brotli模板并没有编译到nginx的二进制文件里头。</p>

<h3 id="编译brotli并开启brotli的方法">编译Brotli并开启Brotli的方法</h3>

<p>后面翻看了许多文章，看到了其中一种nginx通过挂接模板编译的方式，果断尝试，一次编译成功。今天写此文章，用作笔记。因为我用的是军哥的LNMP一键包，这里就以这个一键包去写。下面是方法和步骤：</p>

<p>1.定位到LNMP源码目录</p>

<pre><code>  cd /root/lnmp1.6/src/
</code></pre>

<p>2.通过git从github拉取Brotli源码</p>

<pre><code>  git clone https://github.com/google/ngx_brotli.git
</code></pre>

<p>3.切换到Brotli目录</p>

<pre><code>  cd ngx_brotli
</code></pre>

<p>4.初始化子模版</p>

<pre><code>  git submodule update --init
</code></pre>

<p>5.编辑lnmp.conf配置文件</p>

<pre><code>   vi /root/lnmp1.6/lnmp.conf
</code></pre>

<p>6.添加需要编译的Brotli模板</p>

<pre><code>   Nginx_Modules_Options='--add-module=/root/lnmp1.6/src/ngx_brotli'  
</code></pre>

<p>7.重新编译nginx</p>

<pre><code>    cd /root/lnmp1.6  

   ./upgrade.sh nginx  
</code></pre>

<p>编译好后，输入 <code>nginx -V</code> 查看Brotli模板是否编译成功。出现下图，即成功将Brotli模板成功编译进nginx二进制文件。</p>

<p><img src="https://src.fffou.com/file/ffcode/img/19123101.png" alt="Brotli模板成功编译进nginx二进制文件" title="Brotli模板成功编译进nginx二进制文件" /></p>

<p>8.编辑nginx.conf文件</p>

<pre><code>   vi /usr/local/nginx/conf/nginx.conf
</code></pre>

<p>9.打开了nginx.conf文件后会看到events{}、http{}、server{}三个项，往<code>http{}</code>项添加Brotli配置</p>

<pre><code>    brotli on;
    brotli_comp_level 6;
    brotli_min_length 512;
    brotli_types text/plain text/javascript text/css text/xml text/x-component application/javascript application/x-javascript application/xml application/json application/xhtml+xml application/rss+xml application/atom+xml application/x-font-ttf application/vnd.ms-fontobject image/svg+xml image/x-icon font/opentype;
    brotli_static always;

    #limit_conn_zone $binary_remote_addr zone=perip:10m;
    ##If enable limit_conn_zone,add &quot;limit_conn perip 10;&quot; to server section.
</code></pre>

<p>10.重启nginx服务</p>

<pre><code>    /usr/local/nginx/sbin/  -s reload
</code></pre>

<p>11.清除网页缓存，重新打开网页，<code>F12</code> 打开 <code>开发者工具</code>,切换到 <code>Network</code>&mdash;<code>Ctrl+F5</code>&mdash;点击选择页面地址&mdash;选择右边栏目的<code>Headers</code>，<code>Headers</code>栏目下方的<code>Response Headers</code> 中出现有 <code>content-encoding: br</code> 表示开启Brotli成功。如下图：</p>

<p><img src="https://src.fffou.com/file/ffcode/img/19123102.png" alt="content-encoding: br 表示开启Brotli成功" title="content-encoding: br 表示开启Brotli成功" /></p>

<p> </p>
]]></content>
		</item>
		
		<item>
			<title>静态博客Hugo两个奇怪的问题</title>
			<link>https://fffou.com/post/191214/</link>
			<pubDate>Sat, 14 Dec 2019 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/191214/</guid>
			<description>想想当初为了小巧方便，在wordpress和typecho中我选择了后者，后面懒得维护我又从动态博客转到了静态博客，而静态博客之间我又做了许多选择，最后稳定停留在了用Go语言的静态博客纸小墨，因为这个程序作者很久没维护，出于长久考虑，后面从纸小墨切换到hugo，总算稳定下了。
现在算算这个站点重新归来并用上Hugo也有四个余月了，总体上说，得益于Hugo是静态博客，并且是Go语言写的，在nginx的加持下，在生成文章速度和稳定性方面我是非常满意的，但是用了这么久Hugo，我也遇到了一些问题，其中又以这两个问题比较奇怪，特意详细描述这两个问题：
还”没到时间“的文章不会生成 上个月某天凌晨一点我写了一篇文章，并上传到了主机。因为文章我是用crontab指定某个时间自动生成的，想到还没到生成文章的时间，我就手动用命令生成文章，紧接着到网站首页查看效果，但是网页首页没有看到那篇文章，遂以为网页缓存的问题，又把浏览器的的缓存清空，再次刷新也没看到那篇文章。
没办法，只好本地搭建Hugo环境，把文章导入文章目录进行测试。考虑到可能是主题问题，就把主题切换了，没用。再想到可能是文章对应的文件后缀错误，看了一下后缀是md没错。接着考虑文章标题、时间、分类以及标签格错误了，后面都逐一检查，都没问题，再次尝试生成文章，但首页还是这样。突然想难道文章没显示在首页文章列表，之所以有这样的想法，是因为以前用了一些Hugo主题，有些文章并不会显示在首页的文章列表中的，便尝试输入文章的对应的url ： xxx.xx/post/xxxx/，依旧没看到那篇文章。
就在我焦头烂额的时候，鬼使神差的我把文章的撰写时间改为昨天的，重新生成文章，在首页竟然看到了这篇文章。这下让我惊讶不小，难道这个时间很诡异？没办法，好多东西就需要时间来证明的，所以过了几天，我再次把那篇文章改为“那天的错误时间”，竟然可以生成文章了。现在仔细想想，难道Hugo用的时间不是我本地的时间，也就是我所属的东八区时区的时间?那么Hugo程序内部所认为的时间是哪个时区的时间，另一方面，还是Hugo作者把自己所在时区的时间写到了Hugo里面，才让Hugo与我本地时间产生了时间差？所以Hugo认为时间还没到，才没有生成那篇文章？
Hugo版本展示归档页面问题 Hugo主题没有多少，我是选了又选，最后才选择了这款主题。这款主题的首页是一个展示页面，我不喜欢这款主题的主页，我更希望的是访客进入站点直接呈现文章列表，这样会显得更加简洁、直观，所以我把归档页面替换了原来的主页，这样主页就变成了文章列表，而原来的主题归档界面不支持分页，所以又翻看了Hugo的DOC文档，为首页的文章列表加上了分页支持。
经过本地反复测没问题后，就把主题上传到主机，并重新生成页面。但是刷新缓存后，站点上的主页跟本地是不一样的，具体的差别是：本地的主页是直接呈现文章列表，而主机上的是呈现文章所在的目录（ps：我的文章放到post目录），点击目录才呈现文章列表。后面反复测试后后发现：
 Hugo的0.56.3以上版本在会出现归档页面显示文件夹的问题，而0.56.3及以下版本就没问题，能直接列出文章列表。  本地Hugo环境用的0.56.3版本，所以首页显示文章列表，而主机上Hugo使用的0.60.0版本，所以主页是显示不一样的效果。是没办法，动手能力不强，在好的主题或解决这个问题的能力出现之前，只好一直用着Hugo的 0.56.3 的版本吧。
下面两图是本地Hugo环境下和主机上主页显示效果的对比，大家可以看一下：
这是Hugo 0.56.3及以下版本显示的主页效果：
这是Hugo 0.56.3以上版本显示的主页效果：</description>
			<content type="html"><![CDATA[

<p>想想当初为了小巧方便，在wordpress和typecho中我选择了后者，后面懒得维护我又从动态博客转到了静态博客，而静态博客之间我又做了许多选择，最后稳定停留在了用Go语言的静态博客纸小墨，因为这个程序作者很久没维护，出于长久考虑，后面从纸小墨切换到hugo，总算稳定下了。</p>

<p>现在算算这个站点重新归来并用上Hugo也有四个余月了，总体上说，得益于Hugo是静态博客，并且是Go语言写的，在nginx的加持下，在生成文章速度和稳定性方面我是非常满意的，但是用了这么久Hugo，我也遇到了一些问题，其中又以这两个问题比较奇怪，特意详细描述这两个问题：</p>

<h3 id="还-没到时间-的文章不会生成">还”没到时间“的文章不会生成</h3>

<p>上个月某天凌晨一点我写了一篇文章，并上传到了主机。因为文章我是用crontab指定某个时间自动生成的，想到还没到生成文章的时间，我就手动用命令生成文章，紧接着到网站首页查看效果，但是网页首页没有看到那篇文章，遂以为网页缓存的问题，又把浏览器的的缓存清空，再次刷新也没看到那篇文章。</p>

<p>没办法，只好本地搭建Hugo环境，把文章导入文章目录进行测试。考虑到可能是主题问题，就把主题切换了，没用。再想到可能是文章对应的文件后缀错误，看了一下后缀是md没错。接着考虑文章标题、时间、分类以及标签格错误了，后面都逐一检查，都没问题，再次尝试生成文章，但首页还是这样。突然想难道文章没显示在首页文章列表，之所以有这样的想法，是因为以前用了一些Hugo主题，有些文章并不会显示在首页的文章列表中的，便尝试输入文章的对应的url ：  xxx.xx/post/xxxx/，依旧没看到那篇文章。</p>

<p>就在我焦头烂额的时候，鬼使神差的我把文章的撰写时间改为昨天的，重新生成文章，在首页竟然看到了这篇文章。这下让我惊讶不小，难道这个时间很诡异？没办法，好多东西就需要时间来证明的，所以过了几天，我再次把那篇文章改为“那天的错误时间”，竟然可以生成文章了。现在仔细想想，难道Hugo用的时间不是我本地的时间，也就是我所属的东八区时区的时间?那么Hugo程序内部所认为的时间是哪个时区的时间，另一方面，还是Hugo作者把自己所在时区的时间写到了Hugo里面，才让Hugo与我本地时间产生了时间差？所以Hugo认为时间还没到，才没有生成那篇文章？</p>

<h3 id="hugo版本展示归档页面问题">Hugo版本展示归档页面问题</h3>

<p>Hugo主题没有多少，我是选了又选，最后才选择了这款主题。这款主题的首页是一个展示页面，我不喜欢这款主题的主页，我更希望的是访客进入站点直接呈现文章列表，这样会显得更加简洁、直观，所以我把归档页面替换了原来的主页，这样主页就变成了文章列表，而原来的主题归档界面不支持分页，所以又翻看了Hugo的DOC文档，为首页的文章列表加上了分页支持。</p>

<p>经过本地反复测没问题后，就把主题上传到主机，并重新生成页面。但是刷新缓存后，站点上的主页跟本地是不一样的，具体的差别是：本地的主页是直接呈现文章列表，而主机上的是呈现文章所在的目录（ps：我的文章放到post目录），点击目录才呈现文章列表。后面反复测试后后发现：</p>

<pre><code>      Hugo的0.56.3以上版本在会出现归档页面显示文件夹的问题，而0.56.3及以下版本就没问题，能直接列出文章列表。
</code></pre>

<p>本地Hugo环境用的0.56.3版本，所以首页显示文章列表，而主机上Hugo使用的0.60.0版本，所以主页是显示不一样的效果。是没办法，动手能力不强，在好的主题或解决这个问题的能力出现之前，只好一直用着Hugo的 <code>0.56.3</code> 的版本吧。</p>

<p>下面两图是本地Hugo环境下和主机上主页显示效果的对比，大家可以看一下：</p>

<p>这是Hugo 0.56.3及以下版本显示的主页效果：</p>

<p><img src="https://src.fffou.com/file/ffcode/img/19121401.png" alt="Hugo 0.56.3及以下版本显示的主页" title="Hugo 0.56.3及以下版本显示的主页" /></p>

<p>这是Hugo 0.56.3以上版本显示的主页效果：</p>

<p><img src="https://src.fffou.com/file/ffcode/img/19121402.png" alt="Hugo 0.56.3以上版本显示的主页" title="Hugo 0.56.3以上版本显示的主页" /></p>
]]></content>
		</item>
		
		<item>
			<title>越来越没性价比的黑色星期五</title>
			<link>https://fffou.com/post/19120401/</link>
			<pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/19120401/</guid>
			<description>转眼间黑五有过去了，每年的黑五都会受到大量的关注，当然的，今年的黑五一样不会例外。关注归关注，商家的活动也很重要，然而今年商家的活动却越来越不给力。
不那么性价比的主机 就拿主机vps来说，今年黑五的价格看不到性价比的地方，也看不到购买的欲望，更没有传家宝的冲动。相比国内的双十一，性价比差距进一步拉大，所谓期望越大，换来的失望就越大，没办法，谁让我们等了一年的黑五，却等来这样让人扫兴的场面，难免让人失望。 稍微性价比的　 可以考虑使用的域名邮箱 虽然今年的黑五，没什么性价比的主机vps，但今年黑五的mxroute域名邮箱，性价比还是可以的，域名绑定数量不限，需要域名邮箱的可以考虑。我没有买，因为站点回复邮件用yandex免费的域名邮箱就够了。
免费best域名 这次黑五除了mxroute这个比较性价比的域名邮箱之外，还看到OVH和Dynadot这两个商家提供免费一年的best域名，我是在最后几个小时，才决定弄一个best域名，准备以后用作各种测试用用，不得不说这次黑五的best域名还挺香的。
当然的，这次黑五说实话真的没什么比较出色和性价比的产品，有些产品在黑五的价格甚至相比平时都没多大优势，可能是商家的成本越来越高，以至于所谓的黑五都敷衍了事，所以估计以后黑五更难有让大家觉得性价比的产品，大家且行且珍惜吧，该续费的就续费吧，该入手的不要犹豫果断入手，不要失去了传家宝才后悔。</description>
			<content type="html"><![CDATA[

<p>转眼间黑五有过去了，每年的黑五都会受到大量的关注，当然的，今年的黑五一样不会例外。关注归关注，商家的活动也很重要，然而今年商家的活动却越来越不给力。</p>

<h3 id="不那么性价比的主机">不那么性价比的主机</h3>

<p>就拿主机vps来说，今年黑五的价格看不到性价比的地方，也看不到购买的欲望，更没有传家宝的冲动。相比国内的双十一，性价比差距进一步拉大，所谓期望越大，换来的失望就越大，没办法，谁让我们等了一年的黑五，却等来这样让人扫兴的场面，难免让人失望。
　</p>

<h2 id="稍微性价比的">稍微性价比的　</h2>

<h3 id="可以考虑使用的域名邮箱">可以考虑使用的域名邮箱</h3>

<p>虽然今年的黑五，没什么性价比的主机vps，但今年黑五的mxroute域名邮箱，性价比还是可以的，域名绑定数量不限，需要域名邮箱的可以考虑。我没有买，因为站点回复邮件用yandex免费的域名邮箱就够了。</p>

<h3 id="免费best域名">免费best域名</h3>

<p>这次黑五除了mxroute这个比较性价比的域名邮箱之外，还看到OVH和Dynadot这两个商家提供免费一年的best域名，我是在最后几个小时，才决定弄一个best域名，准备以后用作各种测试用用，不得不说这次黑五的best域名还挺香的。</p>

<p>当然的，这次黑五说实话真的没什么比较出色和性价比的产品，有些产品在黑五的价格甚至相比平时都没多大优势，可能是商家的成本越来越高，以至于所谓的黑五都敷衍了事，所以估计以后黑五更难有让大家觉得性价比的产品，大家且行且珍惜吧，该续费的就续费吧，该入手的不要犹豫果断入手，不要失去了传家宝才后悔。</p>
]]></content>
		</item>
		
		<item>
			<title>如何判断头条搜索的蜘蛛是否真实</title>
			<link>https://fffou.com/post/19112601/</link>
			<pubDate>Mon, 25 Nov 2019 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/19112601/</guid>
			<description>&lt;p&gt;前段时间今日头条推出自己的搜索引擎产品：&lt;code&gt;头条搜索&lt;/code&gt;  ，用了一下各方面还是不错，但是并没有放在心上，一是因为只有手机页面，域名还比较长，懒得输入；二是有些功能还不算完善；三是因为不确定这个搜索产品会不会被头条中途腰斩。后面又稍微关注了一下，是因为一部分小站被头条的爬虫给爬死了，让一部分站长苦不堪言，在网上发了一些牢骚。后面也就没怎么关注了，终其原因是没有看到头条搜索的爬虫官网和文档说明，网上能找到的信息屈指可数。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>前段时间今日头条推出自己的搜索引擎产品：<code>头条搜索</code>  ，用了一下各方面还是不错，但是并没有放在心上，一是因为只有手机页面，域名还比较长，懒得输入；二是有些功能还不算完善；三是因为不确定这个搜索产品会不会被头条中途腰斩。后面又稍微关注了一下，是因为一部分小站被头条的爬虫给爬死了，让一部分站长苦不堪言，在网上发了一些牢骚。后面也就没怎么关注了，终其原因是没有看到头条搜索的爬虫官网和文档说明，网上能找到的信息屈指可数。</p>

<p><audio id="audio" controls="" preload="none"> <source id="mp3" src="https://src.fffou.com/file/ffcode/music/19112601.m4a"> </audio></p>

<h3 id="头条搜索">头条搜索</h3>

<p>不过前几天在坛子里面看到有人说头条搜索站长平台内测，同时看到今日头条客户端内测版在首页重点突出搜索这个功能。看样子头条想在搜索方面找到新的突破点，按照头条现在的体量，足够获取作为站长们新的关注点。头条搜索的出现，多多少少为站长提供了新的机遇，也为搜索市场带来了新的竞争，这是好事。</p>

<h3 id="怎么区分头条搜索的爬虫">怎么区分头条搜索的爬虫？</h3>

<p>翻看了旧的网站日志，头条搜索的爬虫最早爬取我站点的时间是八月份，这跟我我重新回归本站的时间基本相符。那时候抓取我站点的两个“头条”爬虫主要是 <code>Bytespider</code> 和 <code>Toutiaospider</code> 两个蜘蛛，其中又以 <code>Toutiaospider</code> 最为频繁，我一度以为 <code>Toutiaospider</code><br />
 就是头条的蜘蛛，网上咨询过他人、也找过其他资料，得到的都是含糊其辞的答案。</p>

<p>现在在头条搜索站长平台屈指可数的文档中找到答案，头条承认的搜索蜘蛛是首字母为大写的 <code>Bytespider</code>,
根据头条搜索的文档可知头条的蜘蛛ip段有6个，具体是下列表格中的内容：</p>

<pre><code> 110.249.201.0/24 
 110.249.202.0/24 
 111.225.148.0/24 
 111.225.149.0/24 
 220.243.135.0/24 
 220.243.136.0/24
</code></pre>

<h3 id="怎么判断蜘蛛是否伪造">怎么判断蜘蛛是否伪造？</h3>

<p>站长通过nslookup测试了头条提供的ip段范围内的ip，皆可返回带*.crawl.bytedance.com的返回值。也就是说，当你网页日志中出现了头条搜索的爬虫，而你又无法判断是否是真实的爬虫，这个时候就可以通过ip对比上述的ip段，是否在所属的ip段范围之内，或通过nslookup查看返回值，以进行判断是不是真实爬虫。</p>

<h3 id="toutiaospider是不是头条搜索的爬虫">Toutiaospider是不是头条搜索的爬虫？</h3>

<p>前面站长说了，头条搜索文档中表明了 <code>Bytespider</code> 为头条的爬虫，找遍网络也没看到 <code>toutiaospider</code>是不是头条的爬虫，只有少数的帖子将这个爬虫臆测为头条搜索的爬虫。根据网上帖子提供的ip对比，ip并不在官方文档提供的ip段之范围之内，nslookup查询也没有返回*.crawl.bytedance.com这个类型的值，基本可以判断这个不是头条搜索的爬虫，可根据自己的需要进行屏蔽。</p>

<p>有些读者不喜欢细看全文，所以最后再强调一遍，避免错过最为重要的结论：</p>

<pre><code> Toutiaospider 不是头条搜索的爬虫， 以大写开头的 Bytespider 才是头条搜索的爬虫
</code></pre>]]></content>
		</item>
		
		<item>
			<title>魅族升级flyme8解决卡logo</title>
			<link>https://fffou.com/post/19092401/</link>
			<pubDate>Tue, 24 Sep 2019 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/19092401/</guid>
			<description>&lt;p&gt;前段时间魅族进行flyme8的内测，我就顺势报了名。后面就一直没怎么关注，直到今天刷it新闻看到魅族为多款机型推送体验版更新。瞄了几眼新系统的特性，好像很多令人兴奋的更新，刚好新闻内容里面提供了下载链接，博主就毫不犹豫的把刷机包下载下来。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>前段时间魅族进行flyme8的内测，我就顺势报了名。后面就一直没怎么关注，直到今天刷it新闻看到魅族为多款机型推送体验版更新。瞄了几眼新系统的特性，好像很多令人兴奋的更新，刚好新闻内容里面提供了下载链接，博主就毫不犹豫的把刷机包下载下来。</p>

<p><audio id="audio" controls="" preload="none">
<source id="mp3" src="https://src.fffou.com/file/ffcode/music/19092401.m4a">
</audio></p>

<h3 id="变砖经历">变砖经历</h3>

<p>下载后，直接更名为update.zip，复制文件到手机sdcard根目录。可能平时刷机刷多了，有点老油田，也没备份文件，直接就在关机后，按住关机键和音量键+，进入rec模式直接更新了系统。</p>

<p>更新完后直接进入魅族的开机加载页面，一直转圈圈，转啊转，不停地转。我没什么耐心，平时刷机知道刷好机后，开机到设置向导需要相当长的一段时间，就把手机丢到一边，自己玩电脑，让它到一边转去。</p>

<p>玩了半个小时电脑，发现还在转圈圈，一想糟了，莫非变砖了。果断去网上搜索，网上也有同样的例子，不过那个人是重新启动就好了，我也照着去把手机重启了后面还是转圈。于是怀疑刷机没刷到，又重新刷了一遍，确认没刷错了，这次心大了，索性把手机丢到一边，自己出去吃饭了。</p>

<h3 id="只可以从手机传文件到电脑-不可以从电脑传文件到手机">只可以从手机传文件到电脑，不可以从电脑传文件到手机？？？</h3>

<p>等到中午回来，发现手机还是这样，这下心就慌了，就想着怎么救砖。刚好看到rec有连接电脑传输文件，觉得这次刷机失败应该是flyme8的问题，就打着刷低版本系统救砖的打算，于是又从魅族官网下载了flyme7的版本下来，rec链接电脑，因为rec模式下刷机只能识别update.zip文件刷机，于是把下载的flyme7刷机包更改为update.zip，然后把手机里面的update.zip删掉，删掉后把电脑的update.zip复制到手机，悲剧的事情发生了，复制不进去，同时手机提示电脑不能往手机写入文件。</p>

<p>这下悲催了，面临的问题有三个，一是手机刷机后卡logo进不去系统，二是魅族手机rec模式下不能从电脑复制文件到手机，三是手机里面的唯一一个刷机包都给我删除了。难道我要去售后了？</p>

<h3 id="尝试各种招式救砖">尝试各种招式救砖</h3>

<p>虽然还在一年的保修期内，但是会不会被一口咬定是人为原因，要自己花钱修？？？心有不甘，想了想还是从adb和fastboot这方面着手，看有没有救砖的可能。</p>

<p>于是手机重启到fastboot模式，连接电脑并在命令行输入：<code>adb shell</code>  ，但是刚显示手机端口就断开了，试了几次都这样。从以往的经历告诉我，这种adb都连不上的情况，就别指望通过 <code>adb push</code>  文件到手机了。于是就打 <code>fastboot</code> 的主意，后面弄了半天，各种提示错误，按照提示在网上搜索相关问题，顺着别人解答的问题，知道了并下载了mfastboot了工具，以为有了一线生机，折腾许久也以失败告终。</p>

<p>心有不甘下，重新去论坛的flyme8专页去看了详细的帖子，不得不服气的是，帖子竟然说了要清除数据。看来我的问题是出在没有清除数据这里，到了这里我是有一点愤怒的，因为刷机包下载页面没有任何的刷机说明和注意事项。因为以前刷机我是用第三方rec的，一直都有三清的习惯。这次魅族手机刷机用的官方的rec，为什么用官方的rec？因为根本没第三方的rec，而我出于谨慎和相信魅族官方的情况下（ps：刷机包页面没说要清除数据），刷机没有去清除数据。</p>

<p>知道了问题的根源，就要去解决问题。但是现在我很矛盾，因为手机卡logo进不去系统，手机里的刷机包也被我删除了，电脑也不能传文件到手机。既然不能刷机了，那还能清除数据啊，我就死马当活马医吧，于是在rec模式下，把手机清除数据了，重启后在logo的地方转了几圈竟然进入系统了，真好。</p>

<p>用了flyme8数小时，总体体验比7进步许多，运行也更流畅，界面也跟惊艳，真香。不过说了那么久，有两个问题需要用魅族手机的用户注意的：</p>

<pre><code> 魅族rec的传输文件模式，只可以从手机传文件到电脑，不可以反反着来

 刷机需要清除数据在刷机的，忘了清除数据，可尝试刷机后再常识清除数据，看能不不能进入系统
</code></pre>]]></content>
		</item>
		
		<item>
			<title>LNMP升级Nginx和Openssl到最新版</title>
			<link>https://fffou.com/post/1991801/</link>
			<pubDate>Wed, 18 Sep 2019 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/1991801/</guid>
			<description>&lt;p&gt;好吧，强迫症又犯了。是该折腾点什么，但是站点是静态站点，能折腾的地方没有动态站点的多，就想着把服务器的LNMP一键包的底层升级一下，于是查看了Nginx和Openssl的版本&amp;hellip;&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>好吧，强迫症又犯了。是该折腾点什么，但是站点是静态站点，能折腾的地方没有动态站点的多，就想着把服务器的LNMP一键包的底层升级一下，于是查看了Nginx和Openssl的版本&hellip;</p>

<p><audio id="audio" controls="" preload="none">
<source id="mp3" src="https://src.fffou.com/file/ffcode/music/1991801.m4a">
</audio></p>

<p>查看Nginx和Openssl版本号：</p>

<pre><code>  /usr/local/nginx/sbin/nginx -V    
</code></pre>

<p>再去Nginx官网和Openssl官网看了一下，版本上有一些差距。Nginx更是同时发布了两个更新：<code>Nginx 于近日同时为稳定版和主线版两个分支发布了更新，分别是 Nginx-1.16.1 和 Nginx-1.17.3。主要修复了在 HTTP/2 中的安全漏洞 (CVE-2019-9511, CVE-2019-9513, CVE-2019-9516)。</code>对于强迫症的我，怎么能忍受。奈何自己是半吊子水平，参照网上的文章，慢慢摸索下，终于把Nginx和Openssl升级到最新版。</p>

<p>博主用的是LNMP一键包，这里就以军哥LNMP一键包为安装环境，将Nginx和Openssl升级到最新版进行讲解，使用LNMP的站长们都可以参考一下。</p>

<p>通过ssh登录到vps，手动进入你LNMP目录下的src目录（这里以我的安装目录为例）：</p>

<pre><code> cd ~/lnmp1.6/src  
</code></pre>

<p>下载并解压 OpenSSL1.1.1d</p>

<pre><code> wget --no-check-certificate https://www.openssl.org/source/openssl-1.1.1d.tar.gz &amp;&amp; tar -xzvf openssl-1.1.1d.tar.gz &amp;&amp; rm -rf openssl-1.1.1d.tar.gz  
</code></pre>

<p>修改 include 目录中的 upgrade_nginx.sh 文件</p>

<pre><code> vi ~/lnmp1.6/include/upgrade_nginx.sh
</code></pre>

<p>修改下面这段代码：</p>

<pre><code> if [[ &quot;${Nginx_Ver_Com}&quot; == &quot;0&quot; ||  &quot;${Nginx_Ver_Com}&quot; == &quot;1&quot; ]]; then
    ./configure --user=www --group=www --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_spdy_module --with-http_gzip_static_module --with-ipv6 --with-http_sub_module ${Nginx_With_Openssl} ${Nginx_Module_Lua} ${NginxMAOpt} ${Nginx_Modules_Options}
else
    ./configure --user=www --group=www --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_v2_module --with-http_gzip_static_module --with-http_sub_module --with-stream --with-stream_ssl_module ${Nginx_With_Openssl} ${Nginx_Module_Lua} ${NginxMAOpt} ${Nginx_Modules_Options}
fi  
</code></pre>

<p>将<code>else</code>之后的<code>${Nginx_With_Openssl}</code>改成<code>&ndash;with-openssl=/root/lnmp1.6/src/openssl-1.1.1d</code> 即可。修改完成后，<code>ESC</code>键输入<code>:wq</code>保存并退出。</p>

<p>接下来给予<code>upgrade_nginx.sh</code>文件执行权限。</p>

<pre><code>  chmod +x upgrade_nginx.sh
</code></pre>

<p>升级 Nginx</p>

<pre><code> cd ~/lnmp1.6
 ./upgrade.sh nginx  
</code></pre>

<p>这里会弹出一个提示，要求输入升级的 Nginx 版本号。</p>

<p><img src="https://src.fffou.com/file/ffcode/img/1991801.png" alt="Nginx输入版本号" /></p>

<p>当前我的 Nginx 版本为<code>1.4.1</code>，官方主线版本最新版本为<code>1.17.3</code>，直接输入新的版本号 <code>1.17.3</code>按回车键确定，接下来就是等待其自动编译安装完成。</p>

<p>编译完成后，检查一下<code>Openssl</code>和<code>Nginx</code>版本号对不对的上</p>

<pre><code>  nginx -V
</code></pre>

<p>重启LNMP运行环境：</p>

<pre><code> lnmp restart
</code></pre>]]></content>
		</item>
		
		<item>
			<title>win通过ssh访问virtualbox虚拟中的debian</title>
			<link>https://fffou.com/post/199171/</link>
			<pubDate>Tue, 17 Sep 2019 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/199171/</guid>
			<description>&lt;p&gt;本来想通过virtualbox虚拟机安装linux，以进行一些操作的。但是安装好系统后发现通过ssh工具怎么都连接不上虚拟机的linux，通过putty工具连接linux总是提示Access Denied，后面才知道连接virtualbox中的linux需要进行一些操作才能正常连接。本篇文章是总结笔记，这里以的linux以debian做例子。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>本来想通过virtualbox虚拟机安装linux，以进行一些操作的。但是安装好系统后发现通过ssh工具怎么都连接不上虚拟机的linux，通过putty工具连接linux总是提示Access Denied，后面才知道连接virtualbox中的linux需要进行一些操作才能正常连接。本篇文章是总结笔记，这里以的linux以debian做例子。</p>

<p><audio id="audio" controls="" preload="none">
<source id="mp3" src="https://src.fffou.com/file/ffcode/music/199171.m4a">
</audio></p>

<p>1.下载virtualbox并安装好debian后，以root用户进入系统后，先把vim-tiny卸载，并更换为vim。这里告诉大家为什么要更换，这是因为后面编辑配置文件需要用到vi指令，但是系统自带的vim-tiny的工具键盘输入的内容要么失效要么其他乱七八糟的东西，很让人头疼。</p>

<h3 id="卸载vim-tiny并更换系统vi工具为vim">卸载vim-tiny并更换系统vi工具为vim:</h3>

<pre><code> apt-get remove vim-common  

 apt-get install vim  
</code></pre>

<p>2.编辑ssh文件</p>

<pre><code> vi /etc/ssh/sshd_config   
</code></pre>

<p>找到里边的<code>#PermitRootLogin</code>选项，将<code>no</code>改为<code>yes</code>，并去掉前面的<code>#</code>，保存。</p>

<p>输入<code>shutdown now</code> 关机。</p>

<p>3.回到virtualbox主界面，点击虚拟机系统右侧栏上方的<code>设置</code>选定左边栏的<code>网络</code>，切换到<code>网卡1</code>，网络连接方式选择为<code>网络地址转换(NAT)</code>,然后点击<code>高级(d)</code>展开菜单，选择<code>端口转发(p)</code>，按照linux的ssh端口设置相应的转发。</p>

<p><img src="https://src.fffou.com/file/ffcode/img/1991701.png" alt="端口转发" /></p>

<p>4.开启虚拟机的系统，并进入。用ssh连接，成功。</p>

<p><img src="https://src.fffou.com/file/ffcode/img/1991702.png" alt="putty登陆连接虚拟机debian界面" /></p>

<p><br><br></p>

<p>成功通过ssh登录虚拟机的linux</p>

<p><img src="https://src.fffou.com/file/ffcode/img/1991703.png" alt="putty登陆成功连接虚拟机debian界面" /></p>]]></content>
		</item>
		
		<item>
			<title>不用任何插件实现chrome内核浏览器切换到指定的ua</title>
			<link>https://fffou.com/post/199161/</link>
			<pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/199161/</guid>
			<description>&lt;p&gt;今天测试站点，需要测试指定的ua访问站点，本来想到用插件实现。后面想想还是算了，因为发现解决这个问题，只需要新建一个脚本文件就可以了，就不用下载第三方插件了。。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>今天测试站点，需要测试指定的ua访问站点，本来想到用插件实现。后面想想还是算了，因为发现解决这个问题，只需要新建一个脚本文件就可以了，就不用下载第三方插件了。。</p>

<p><audio id="audio" controls="" preload="none">
<source id="mp3" src="https://src.fffou.com/file/ffcode/music/199161.m4a">
</audio></p>

<p>定位到chrome安装目录，新建一个bat文件，输入以下代码格式：</p>

<pre><code> @echo off
 start chrome.exe --user-agent=&quot;你所指定的ua&quot;EXIT
</code></pre>

<p>保存退出，确保bat脚本文件跟chrome.exe同一目录，运行脚本，就可以切换到指定的ua访问站点。</p>]]></content>
		</item>
		
		<item>
			<title>安卓通过iptables屏蔽ip</title>
			<link>https://fffou.com/post/199501/</link>
			<pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/199501/</guid>
			<description>&lt;p&gt;现在的手机的可玩性是越来越完善了，各种小功能。当然，功能完善了，广告也就跟上去了。广告也变得越来越人性化，位置摆放的合合理理，该关心你的时候就弹出通知问候你，你买完手机就热情的推荐你买手机壳。跟别人聊会天，说要去某城，各种应用推荐我某城的吃喝玩乐。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>现在的手机的可玩性是越来越完善了，各种小功能。当然，功能完善了，广告也就跟上去了。广告也变得越来越人性化，位置摆放的合合理理，该关心你的时候就弹出通知问候你，你买完手机就热情的推荐你买手机壳。跟别人聊会天，说要去某城，各种应用推荐我某城的吃喝玩乐。</p>

<p><audio id="audio" controls="" preload="none">
<source id="mp3" src="https://src.fffou.com/file/ffcode/music/199501.mp3">
</audio></p>

<p>人性化也就算了，毕竟大数据，个人无能为力，就当是被一群大爷伺候着。不过广告还是得整整，虽然年纪大了，人也变懒了，毕竟我经不起各种诱惑、各种优惠、甚至各种点开后与之不沾边的福利。</p>

<p>安卓手机能root的就root，别管保不保修，只要不是root带来的硬件问题，售后该修还是要修。系统能刷国际版就刷国际版，毕竟待遇差距摆在那里。不能刷国外系统就把系统多余应用删删，把有广告的系统应用替换。其他删了会卡开机屏幕的就别删了，就用电脑或手机嗅探抓包，把广告域名全部添加到hosts文件，管他什么手机，广告走光光。</p>

<p>系统干净许多，爽爽的用了手机大半天。突然又推送广告，怀疑hosts文件没生效，又把百度添加进去，不能访问，证明hosts文件是生效的，那就证明现在的软件学聪明了，知道你们会用hosts屏蔽广告，你又不能禁用它的联网权限，因为网络应用脱离网络屁都不是，不信你让淘宝京东脱离网络试试。</p>

<h3 id="干掉这些ip">干掉这些ip</h3>

<p>这些软件的广告通知都走ip推送，一般人还屏蔽不了。不过通过ip推送的广告通知的缺点就是：这些ip是比较固定的，数量也不会太多。这时候我们的针对方案就是，找到这些ip并屏蔽掉。</p>

<p>准备工具：</p>

<ul>
<li>安卓设备一部</li>
<li>设备已经root</li>
<li>软件：termux</li>
<li>文件管理器</li>
</ul>

<p>手机root后，通过电脑或手机抓包工具抓取这些推送的ip，记录下来。去手机应用商店下载并安装termux，文件管理器获取超级权限，进入iptables所在的系统目录<code>/system/bin</code>,把iptables复制到termux安装目录<code>/data/data/com.termux/files/home</code>中。然后打开termux并取得超级权限，输入以下命令：</p>

<pre><code>### 提高到最高权限
su
### 按下面格式输入ip，每行一个ip
iptables -I INPUT -s 你获取的ip -j DROP
</code></pre>]]></content>
		</item>
		
		<item>
			<title>安卓主流手机输入法对各双拼方案支持与兼容情况总结</title>
			<link>https://fffou.com/post/1982901/</link>
			<pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/1982901/</guid>
			<description>&lt;p&gt;前个星期去朋友家玩，看到他操作电脑打字，击键少且输入挺快，以为是五笔输入法，问之，后面他告诉我这是用的双拼输入，并提示我如果有拼音基础很容易入门，突然就把我的兴趣提前来了。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>前个星期去朋友家玩，看到他操作电脑打字，击键少且输入挺快，以为是五笔输入法，问之，后面他告诉我这是用的双拼输入，并提示我如果有拼音基础很容易入门，突然就把我的兴趣提前来了。</p>

<p>回到家以后，就搜索了关于双拼的一些知识，这里不做详细解释，有兴趣的朋友可以自己找找其中相关知识。综合考虑后，博主就选择了其中的双拼方案：小鹤双拼方案，感觉还行，就想着找一款好用的双拼输入法，趁着三分热度，把各主流手机输入法装了一遍，以用来测试支持的双拼方案和效果。都是粗略总结，大家看看就好。</p>

<p><audio id="audio" controls="" preload="none">
<source id="mp3" src="https://src.fffou.com/file/ffcode/music/1982901.m4a">
</audio></p>

<h3 id="以下表格-各安卓手机输入法对各种双拼方案支持度">以下表格，各安卓手机输入法对各种双拼方案支持度</h3>

<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">微软双拼</th>
<th align="center">拼音加加</th>
<th align="center">智能abc</th>
<th align="center">紫光拼音</th>
<th align="center">自然码</th>
<th align="center">小鹤双拼</th>
<th align="center">搜狗双拼</th>
<th align="center">国标双拼</th>
<th align="center">自定义方案</th>
</tr>
</thead>

<tbody>
<tr>
<td align="center">QQ输入法</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">×</td>
</tr>

<tr>
<td align="center">讯飞输入法</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">×</td>
<td align="center">×</td>
</tr>

<tr>
<td align="center">谷歌输入法</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">×</td>
</tr>

<tr>
<td align="center">百度输入法</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">√</td>
</tr>

<tr>
<td align="center">搜狗输入法</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">×</td>
</tr>

<tr>
<td align="center">手心输入法</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">×</td>
<td align="center">√</td>
</tr>

<tr>
<td align="center">触宝输入法</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">×</td>
<td align="center">×</td>
</tr>

<tr>
<td align="center">Go输入法</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">×</td>
</tr>

<tr>
<td align="center">必应输入法</td>
<td align="center">√</td>
<td align="center">√</td>
<td align="center">×</td>
<td align="center">√</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">√</td>
<td align="center">×</td>
<td align="center">√</td>
</tr>

<tr>
<td align="center">猎豹输入法</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">×</td>
<td align="center">×</td>
</tr>
</tbody>
</table>

<h3 id="各双拼方案官方支持情况">各双拼方案官方支持情况：</h3>

<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">官方所属</th>
<th align="center">官方维护状态</th>
<th align="center">有无官网及可访问性</th>
<th align="center">页面状态</th>
<th align="center">第三方输入法支持程度</th>
<th align="center">官方软件及文档支持</th>
</tr>
</thead>

<tbody>
<tr>
<td align="center">微软双拼</td>
<td align="center">微软公司</td>
<td align="center">活跃维护</td>
<td align="center">有，可访问</td>
<td align="center">官网为微软拼音</td>
<td align="center">优秀</td>
<td align="center">PC官方输入法支持，手机输入法放弃维护</td>
</tr>

<tr>
<td align="center">拼音加加</td>
<td align="center">拼音加加</td>
<td align="center">停止维护</td>
<td align="center">有，可访问</td>
<td align="center">页面状态停留在几年前</td>
<td align="center">优秀</td>
<td align="center">放弃客户端维护</td>
</tr>

<tr>
<td align="center">智能abc</td>
<td align="center">北大朱守涛</td>
<td align="center">停止维护</td>
<td align="center">无</td>
<td align="center">无</td>
<td align="center">良</td>
<td align="center">放弃客户端维护</td>
</tr>

<tr>
<td align="center">紫光拼音</td>
<td align="center">清华紫光</td>
<td align="center">维护，不是很活跃</td>
<td align="center">有，可访问</td>
<td align="center">能进入，不i活跃</td>
<td align="center">优秀</td>
<td align="center">PC客户端缓慢维护</td>
</tr>

<tr>
<td align="center">小鹤双拼</td>
<td align="center">何海峰</td>
<td align="center">活跃维护</td>
<td align="center">有，可访问</td>
<td align="center">维护活跃，学习交流氛围活跃，官方PC软件手机软件维护很全，文档齐全</td>
<td align="center">良</td>
<td align="center">多平台客户端维护活跃，第三方输入法插件及官方文档齐全</td>
</tr>

<tr>
<td align="center">搜狗双拼</td>
<td align="center">搜狗公司</td>
<td align="center">活跃维护</td>
<td align="center">有，可访问</td>
<td align="center">官网为搜狗拼音</td>
<td align="center">及格</td>
<td align="center">集成官方各平台拼音输入法</td>
</tr>

<tr>
<td align="center">自然码</td>
<td align="center">自然码</td>
<td align="center">停止维护</td>
<td align="center">有，不可访问</td>
<td align="center">页面已经不能进入</td>
<td align="center">良</td>
<td align="center">不可访问，连文档和形码都丢失了</td>
</tr>

<tr>
<td align="center">国标双拼</td>
<td align="center">国家</td>
<td align="center">只制订了标准</td>
<td align="center">无</td>
<td align="center">无</td>
<td align="center">差</td>
<td align="center">无</td>
</tr>

<tr>
<td align="center">自定义方案</td>
<td align="center">社区</td>
<td align="center">社区维护</td>
<td align="center">无</td>
<td align="center">无</td>
<td align="center">一般</td>
<td align="center">社区维护</td>
</tr>
</tbody>
</table>

<h3 id="各主流双拼方案适配第三方输入法数量排名情况">各主流双拼方案适配第三方输入法数量排名情况：</h3>

<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">微软双拼</th>
<th align="center">拼音加加</th>
<th align="center">智能abc</th>
<th align="center">紫光拼音</th>
<th align="center">自然码</th>
<th align="center">小鹤双拼</th>
<th align="center">搜狗双拼</th>
<th align="center">国标双拼</th>
<th align="center">自定义方案</th>
</tr>
</thead>

<tbody>
<tr>
<td align="center">支持主流输入法排名</td>
<td align="center">1</td>
<td align="center">1</td>
<td align="center">2</td>
<td align="center">1</td>
<td align="center">2</td>
<td align="center">2</td>
<td align="center">3</td>
<td align="center">5</td>
<td align="center">4</td>
</tr>
</tbody>
</table>

<p>通过上述总结，如果看重官方维护，需要完整的文档和支持，请选择：<code>微软双拼</code>、<code>紫光双拼</code>、<code>小鹤双拼</code>、<code>搜狗双拼</code>这四个
双拼方案。如果看重插件拓展性、需要音形盲打输入，请选择：<code>小鹤双拼</code>这个方案。</p>]]></content>
		</item>
		
		<item>
			<title>chrome开启https和www显示</title>
			<link>https://fffou.com/post/1981701/</link>
			<pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/1981701/</guid>
			<description>&lt;p&gt;群里的网友说最新的chrome默认不显示https和www信息，我看了一下还真的是。按照谷歌chrome的一贯套路，有些关闭的、或是隐藏的功能可以通过&lt;code&gt;chrome://flags/&lt;/code&gt;重新开启起来,后面找了一下，还真找到可以设置的项。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>群里的网友说最新的chrome默认不显示https和www信息，我看了一下还真的是。按照谷歌chrome的一贯套路，有些关闭的、或是隐藏的功能可以通过<code>chrome://flags/</code>重新开启起来,后面找了一下，还真找到可以设置的项。</p>

<p><audio id="audio" controls="" preload="none">
<source id="mp3" src="https://src.fffou.com/file/ffcode/music/1981701.m4a">
</audio></p>

<p>设置方法：直接进入chrome输入下面的地址<code>chrome://flags/#omnibox-ui-hide-steady-state-url-trivial-subdomains</code>设置为<code>Disabled</code></p>

<p>更多谷歌chrome的<code>chrome://flags/</code>设置可以通过以前的文章：<a href="https://fffou.com/post/194151/">Chrome手机版调校方案</a>一文详细查看</p>]]></content>
		</item>
		
		<item>
			<title>国内主流爬虫大全</title>
			<link>https://fffou.com/post/1981702/</link>
			<pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/1981702/</guid>
			<description>&lt;p&gt;这几天重新整理站点的时候，发现站点没有设置robots.txt，于是重新设置了搜索引擎的抓取规则，并理出国内主流的爬虫数据。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>这几天重新整理站点的时候，发现站点没有设置robots.txt，于是重新设置了搜索引擎的抓取规则，并理出国内主流的爬虫数据。</p>

<p><audio id="audio" controls="" preload="none">
<source id="mp3" src="https://src.fffou.com/file/ffcode/music/1981702.m4a">
</audio></p>

<p>百度系爬虫：</p>

<pre><code> Baiduspider-image 
 Baiduspider
 Baiduspider-news
 Baiduspider-video
</code></pre>

<p>搜狗系爬虫：</p>

<pre><code> Sogou web spider
 sogou spider
 Sogou spider2
 Sogou News Spider
 Sogou Orion spider
 Sogou blog
 Sogou inst spider
</code></pre>

<p>360系爬虫：</p>

<pre><code> HaosouSpider 
 360Spider
</code></pre>

<p>必应系爬虫：</p>

<pre><code> Bingbot
 MSNBot
</code></pre>

<p>中国搜索爬虫：</p>

<pre><code> chinasospider
</code></pre>

<p>阿里系爬虫：</p>

<pre><code> yisouspider
 smspider 
 EtaoSpider
</code></pre>

<p>搜搜爬虫：</p>

<pre><code> Sosospider
</code></pre>

<p>有道爬虫：</p>

<pre><code> YoudaoBot
 OutfoxBot
</code></pre>

<p>雅虎爬虫：</p>

<pre><code> Yahoo!  Slurp
</code></pre>

<p>宜搜爬虫：</p>

<pre><code> EasouSpider
</code></pre>

<p>即刻爬虫：</p>

<pre><code> JikeSpider
</code></pre>

<p>豌豆荚爬虫：</p>

<pre><code> wandoujia Spider 
</code></pre>

<p>头条爬虫：</p>

<pre><code> ByteSpider
</code></pre>

<p>惠惠爬虫：</p>

<pre><code> HuihuiSpider 
</code></pre>

<p>购物党爬虫：</p>

<pre><code> GwdangSpider 
</code></pre>

<p>我查查爬虫：</p>

<pre><code> WochachaSpider
</code></pre>]]></content>
		</item>
		
		<item>
			<title>Chrome手机版调校方案</title>
			<link>https://fffou.com/post/194151/</link>
			<pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/194151/</guid>
			<description>&lt;p&gt;手机chrome浏览器挺好用，也挺干净。安装好后调教调教就挺好用。下面是收集的一些调教方案。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>手机chrome浏览器挺好用，也挺干净。安装好后调教调教就挺好用。下面是收集的一些调教方案。</p>

<p><audio id="audio" controls="" preload="none">
<source id="mp3" src="https://src.fffou.com/file/ffcode/music/194151.mp3">
</audio></p>

<h3 id="关闭资讯">关闭资讯</h3>

<p>chrome://flags/#enable-ntp-remote-suggestions</p>

<h3 id="开启底部工具栏-需要重启两次">开启底部工具栏，需要重启两次</h3>

<p>chrome://flags/#enable-chrome-duet</p>

<h3 id="打开主页功能-可以自定义主页">打开主页功能，可以自定义主页</h3>

<p>chrome://flags/#force-enable-home-page-button</p>

<h3 id="网站地址建议-建议开启">网站地址建议，建议开启</h3>

<p>chrome://flags/#enable-site-exploration-ui</p>

<h3 id="长按chrome网页中的超链接-文本或图片-出现传统文本菜单-建议开启">长按Chrome网页中的超链接、文本或图片，出现传统文本菜单，建议开启</h3>

<p>chrome://flags/#enable-custom-context-menu</p>

<h3 id="最近书签-建议禁用">最近书签，建议禁用</h3>

<p>chrome://flags/#enable-ntp-bookmark-suggestions</p>

<h3 id="显示之前下载的东西-建议关闭">显示之前下载的东西，建议关闭</h3>

<p>chrome://flags/#enable-ntp-asset-download-suggestions</p>

<h3 id="标签页水平切换">标签页水平切换</h3>

<p>chrome://flags/#enable-horizontal-tab-switcher</p>

<h3 id="手势功能">手势功能</h3>

<p>chrome://flags/#enable-gesture-navigation</p>

<h3 id="播放器手操作模式-双击暂停-快进快退等功能">播放器手操作模式，双击暂停、快进快退等功能</h3>

<p>chrome://flags/#enable-modern-media-controls</p>

<h3 id="开启并行下载">开启并行下载</h3>

<p>chrome://flags/#enable-parallel-downloads</p>

<h3 id="阅读模式">阅读模式</h3>

<p>chrome://flags/#reader-mode-heuristics</p>

<h3 id="chrome开启夜间模-仅chrome-canary有效">Chrome开启夜间模(仅Chrome canary有效)</h3>

<p>chrome://flags/enable-android-web-contents-dark-mode</p>

<h3 id="开启手势操作-开发版">开启手势操作(开发版)</h3>

<p>chrome://flags/#overscroll-history-navigation</p>

<h3 id="开启手势操作-普通版本">开启手势操作(普通版本)</h3>

<p>chrome://flags/#enable-gesture-navigation</p>

<h3 id="开启密码导出">开启密码导出</h3>

<p>chrome://flags/#PasswordImport</p>

<h3 id="新版本chrome不显示www和https-设置为禁用">新版本chrome不显示www和https(设置为禁用)</h3>

<p>chrome://flags/#omnibox-ui-hide-steady-state-url-trivial-subdomains</p>

<h3 id="手机chrome查看网页源代码">手机chrome查看网页源代码</h3>

<p>view-source:URL</p>]]></content>
		</item>
		
		<item>
			<title>今年街上看不到什么人</title>
			<link>https://fffou.com/post/19411/</link>
			<pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/19411/</guid>
			<description>&lt;p&gt;现在距离春节已经过去两个月了，也该进入该有的生活节奏。上班的上班，上学的该去上学了。然而已经过完年有一个多月了，现在的周末，街上着实没什么人，真是有点不对劲。
为什么会出现街上没什么人的状况，出现人少的冷清现状呢？&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>现在距离春节已经过去两个月了，也该进入该有的生活节奏。上班的上班，上学的该去上学了。然而已经过完年有一个多月了，现在的周末，街上着实没什么人，真是有点不对劲。
为什么会出现街上没什么人的状况，出现人少的冷清现状呢？</p>

<h3 id="每篇一曲">每篇一曲</h3>

<p>不管路上再阴霾，是大雾、是暴雨、是冰雪，也许鲜血淋漓，也许筋疲力尽，也许旁人无法理解，那就听一首能给你阳光、赐予你积极向上的歌曲，调整情绪继续前行。。。</p>

<p><audio id="audio" controls="" preload="none">
<source id="mp3" src="https://src.fffou.com/file/ffcode/music/19411.mp3">
</audio></p>

<h3 id="题内话">题内话</h3>

<p>从去年的年尾开始，街上的人就开始感觉人变少了，跟身边的人说了一下，他们不以为意。直到年后，大家才后知后觉的发现有点不对劲。人总是反应迟钝，不管什么状况发生，总是会表现在事情上面的。</p>

<h3 id="原因">原因</h3>

<p>不管怎么，现在想了想，也许是这些原因吧；</p>

<p>1.可能现在大环境不景气，周围认识的，失业率高到了70%，没有钱，消费能力必然下降，加之现在宅女宅男又多，
恰逢网购发达时代，现在出去消费大多都是吃喝，很少买其他东西。留在家，还能跟你我一样，当键盘侠啊，码码字。如此多的失业大军，外加物价连涨，普通人恐惧经济危机不远，也就把钱包守得紧紧的，现在出门还得花钱，为什么不留在家呢？</p>

<p>2.也许是小城市本来人口也少，三四线城市本来就是没多少年轻人，老年人都早晚活动。另外就是现在就经济下行，哪还有什么余钱消费哦。据闻数百万人回农村创业，进一步加剧了本地就业人口的减少，造就今年的非常冷清，大环境不好，消费形态进一步转变，再加上消费力降低了。一出门就要花钱，还不如呆家里打农药，互联网消费比起外卖你的消费算是是最廉价的。</p>

<p>3.当然这个也可能是看地区的，样本太小，我的猜测可能不会准确，或是具有代表性。经济下滑这是大家能看到的趋势，工作压力增大，收入来源堪忧，消费形态转变，经济下坡谁出去消费，今年国内经济形势的确有点颓废，看趋势未来物价还会再涨，消费降级是趋势。</p>

<p>4.八零后九零后到了成家的年龄，一旦有了一定的积蓄，老家有了一定的发展，或者说在外打工比起在家创业没多大优势，也就没必要出来了。成家了，有了小孩也就意味着要稳定的生活，基本上也就不会再像年轻时候的闯南闯北。</p>

<h3 id="提升">提升</h3>

<p>现在竞争压力大，特别是今年经济不景气。不管外卖你怎样，首先自己不能乱了手脚。我们必须想法子，各方面提升自己，养精蓄锐，现在时代变化太快，必须加紧跟上时代的脚步。</p>]]></content>
		</item>
		
		<item>
			<title>Chrome类浏览器汉化教程</title>
			<link>https://fffou.com/post/edge/</link>
			<pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/edge/</guid>
			<description>&lt;p&gt;昨天看到it之家，看到了微软基于chroium的浏览器有泄露版的下载。作为软粉，怀着忐忑的心情下了安装包，因为我用的不是win10，因为Edge都是win10下产生的，我担心微软没有做向下兼容的准备。
最终我的顾虑打消了，浏览器在我的win8.1用的好好的。虽然是测试版，但各方面都挺满意，据网友说比chrome还省内存。其实我用了一下，感觉还好，也不知道是不是错觉，对微软的优化能力还是抱有一丝的期待自行的。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>昨天看到it之家，看到了微软基于chroium的浏览器有泄露版的下载。作为软粉，怀着忐忑的心情下了安装包，因为我用的不是win10，因为Edge都是win10下产生的，我担心微软没有做向下兼容的准备。
最终我的顾虑打消了，浏览器在我的win8.1用的好好的。虽然是测试版，但各方面都挺满意，据网友说比chrome还省内存。其实我用了一下，感觉还好，也不知道是不是错觉，对微软的优化能力还是抱有一丝的期待自行的。</p>

<p><audio id="audio" controls="" preload="none"> <source id="mp3" src="https://src.fffou.com/file/ffcode/music/edge.mp3"> </audio></p>

<p>用了一段时间，有一些小优化和小惊喜的地方，因为一些原因我没有深入去看细节，而我所谓的原因就是我把这软件大部分都汉化了。从昨晚泄露安装包，早上六点起来一直汉化到晚上六点，中午饭都没有吃，近乎狂热的工作状态。主要今天累了一天，真的累了，也不知道自己糊里糊涂的说了些什么。那我就放出分享链接吧。</p>

<p><img src="https://src.fffou.com/file/ffcode/img/5c98b7da3131a.png" alt="1.png" /></p>

<p><img src="https://src.fffou.com/file/ffcode/img/5c98b7dad5a20.png" alt="2.png" /></p>

<p><img src="https://src.fffou.com/file/ffcode/img/5c98b7dd99bed.png" alt="4.png" /></p>

<p><img src="https://src.fffou.com/file/ffcode/img/5c98b7de316d3.png" alt="3.png" /></p>

<p><img src="https://src.fffou.com/file/ffcode/img/5c98b7de438a2.png" alt="6.png" /></p>

<p><img src="https://src.fffou.com/file/ffcode/img/5c98b7de69a7f.png" alt="5.png" /></p>

<p><img src="https://src.fffou.com/file/ffcode/img/5c98b7dec90e8.png" alt="7.png" /></p>

<p><img src="https://src.fffou.com/file/ffcode/img/5c98b7df5dde8.png" alt="8.png" /></p>

<h2 id="chrome内核通用汉化教程">Chrome内核通用汉化教程</h2>

<ol>
<li><p>安装chrome类浏览器</p></li>

<li><p>搜索引擎查找并下载Chrome PAK 资源解包打包工具</p></li>

<li><p>定位到浏览器的版本目录（安装目录里面的数字文件夹）下的Locales，找到en-us.pak</p></li>
</ol>

<p>复制en-us.pak到和pak工具同一目录，重命名为zh-CN.pak，为了方便操作，同样从system32目录复制cmd.exe（后面以命令提示符做代替）到pak解包工具相同的目录</p>

<ol>
<li><p>解包：打开命令提示符（cmd.exe）,输入：“pak_tools -c=lang_unpack -f=zh-CN.pak”进行解包，会在相同目录下生成对语言文件的json文件，这里生成的是简体中文的“zh-CN.json”文件</p></li>

<li><p>使用Notepad++对生成的zh-CN.json，以UTF-8编码进行汉化（避免乱码）。</p></li>

<li><p>封包：打开命令提示符，输入“pak_tools -c=lang_repack -f=zh-CN.json”，将从json文件生成汉化后的语言包zh-CN.pak</p></li>

<li><p>复制生成后zh-CN.pak到浏览器安装目录下的Locales，进入浏览器切换到中文。</p></li>
</ol>

<p>另外解包工具还支持chrome资源文件解压和封包：</p>

<pre><code>      解包：pak_tools -c=unpack -f=resources.pak  

      封包：pak_tools -c=repack -f=resources.json  
</code></pre>

<h2 id="edge汉化包">Edge汉化包</h2>

<p>这次汉化的不彻底，时间和精力有限。另外我没有提供Edge的下载，只是封包了语言包和解包工具。大家有兴趣的可尝试下载Edge，并使用Chrome PAK 资源解包打包工具，解压对应的语言文件进行详细汉化。当然的，基于Chrome类的浏览器，都可用这类工具进行汉化。</p>

<p> </p>]]></content>
		</item>
		
		<item>
			<title>域名比价平台收集</title>
			<link>https://fffou.com/post/193161/</link>
			<pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/193161/</guid>
			<description>&lt;p&gt;今年经济不景气，钱包得捂紧一点，所以把不需要的域名做了精简，准备把一些累觉不爱的域名过期丢弃。虽然这段时间把很多域名做了精简，但是一些域名也快到过期了&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>今年经济不景气，钱包得捂紧一点，所以把不需要的域名做了精简，准备把一些累觉不爱的域名过期丢弃。虽然这段时间把很多域名做了精简，但是一些域名也快到过期了</p>

<p>，就避免不了要去续费。域名的价格时时在变化，续费价格也每年会发生变化，为了经济实惠，这就不可避免的需要比价的平台。自己的域名做了续费，把比价平台记录记录以备下次使用。</p>

<h2 id="每篇一曲">每篇一曲</h2>

<p>雨季来了，雨也来了，雨不停的下，下的我怀疑人生。乌沉沉的天，黑的我一天都不能拥有好心情。我不喜欢大雨，更不喜欢干燥闷热的烈日，相反的我喜欢毛毛细雨，既滋润大地，又不让地面太湿，更喜欢雨后的烟霞。对的音乐，衬托合适的心情，就用这首歌，表达我的心情吧。</p>

<p><audio id="audio" controls="" preload="none">
<source id="mp3" src="https://src.fffou.com/file/ffcode/music/193161.mp3">
</audio></p>

<h2 id="域名比价收集">域名比价收集</h2>

<p><a href="https://link.fffou.com/go/tld-list/">https://tld-list.com/</a></p>

<p><a href="https://link.fffou.com/go/domcomp/">www.domcomp.com</a></p>

<p><a href="https://link.fffou.com/go/namebeta/">https://namebeta.com/ </a></p>

<p><a href="https://link.fffou.com/go/nazhumi/">https://www.nazhumi.com/</a></p>

<p><a href="https://link.fffou.com/go/domain265/">https://www.domain265.com/</a></p>

<p><a href="https://link.fffou.com/go/hostucan-search-domain/">https://www.hostucan.cn/search-domain</a></p>

<p><a href="https://link.fffou.com/go/zh-hans.tld-list/">https://zh-hans.tld-list.com/</a></p>

<p><a href="https://link.fffou.com/go/instantdomainsearch/">https://instantdomainsearch.com</a></p>]]></content>
		</item>
		
		<item>
			<title>支付宝已经这样了</title>
			<link>https://fffou.com/post/192201/</link>
			<pubDate>Wed, 20 Feb 2019 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/192201/</guid>
			<description>&lt;p&gt;昨天看到备用的手机号码，已经没多少钱了。所以就用支付宝给那个号码冲了话费，没想到收到下面这样的短信。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>昨天看到备用的手机号码，已经没多少钱了。所以就用支付宝给那个号码冲了话费，没想到收到下面这样的短信。</p>

<p><audio id="audio" controls="" preload="none">
<source id="mp3" src="https://src.fffou.com/file/ffcode/music/192201.mp3">
</audio></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/5c6cd267f2d2a.png" alt="话费红包" /></p>

<p>我以为是支付宝送的充值话费券，就好奇的打开了。打开的页面没有保存，大概是按确定领取的按钮吧，没有任何声明，按照我的理解，可能点击确认了，就可能关联支付宝领取的。没想到出现了下图的情形。</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/5c6cd2690b900.jpg" alt="被注册支付宝" /></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/5c6cd2693f275.jpg" alt="被注册淘宝" /></p>

<p>你没有看错！我既没有输入手机号码，也没有同意注册支付宝和淘宝，我只是点击了领取话费红包，在没有任何提示和声明的情况下，就给我注册了支付宝账号和淘宝账号。支付宝现在变得这样了？</p>]]></content>
		</item>
		
		<item>
			<title>分享惠普装机OEM原盘</title>
			<link>https://fffou.com/post/184181/</link>
			<pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/184181/</guid>
			<description>&lt;p&gt;自打去年年底辞工了以后到现在一直没有上班，打算过完年换新的工作。没想到赖在家里，赖到现在都不想上班，做什么都没动力，博客也长了很长的草，博友的评论也不得及时的回复。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>自打去年年底辞工了以后到现在一直没有上班，打算过完年换新的工作。没想到赖在家里，赖到现在都不想上班，做什么都没动力，博客也长了很长的草，博友的评论也不得及时的回复。</p>

<h2 id="房间发现oem光盘">房间发现OEM光盘</h2>

<p>我的房间也是给我弄的一团糟。昨天终于鼓足了勇气整理了一下房间。不整理不知道，一整理就发现了许多以前吃灰的东西。特别在衣柜的抽屉底下，发现了多年前的惠普的win7 家庭普通版 Oem光盘。特意拿出来分享。。如果你也有hp的笔记本电脑或是品牌机的话，直接安装就可以自动激活。
今天特意上传到了百度盘，供大家分享下载。</p>

<p><a href="https://link.fffou.com/go/hp_oem_iso/">下载链接（密码:29v6）</a></p>

<p>自己顺带把旧本本的win10重新安装win7，发现更加顺畅，本来觉得win10优化的速度还能接受，用回7以后，发现速度有很大的提升，希望这旧本本还能坚挺一段时间。</p>

<h2 id="建新站点的困扰">建新站点的困扰</h2>

<p>前面注册了新的域名，旨在打造全私密的记录生活中的毛病、情绪、收集一些生活中的想法以及指导未来方向的一个站点。这段时间的精力也都花在了这个站点上面。但是搭建好站点后，发现每天的网页日志中，总是有不定时的一些ip想通过我的站点访问轮子网站。后面仔细分析可能之前这个域名的原主人拿这域名做过飞机场或是袋里。也因为这段时间Q的动作也来越频繁，总是担心这个域名会被Q，瞬间对这域名有些心不灰但意有点冷，看来要仔细观望一段时间，必要的情况重新更换域名。</p>]]></content>
		</item>
		
		<item>
			<title>Basic HTML Elements</title>
			<link>https://fffou.com/post/basic-elements/</link>
			<pubDate>Mon, 16 Apr 2018 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/basic-elements/</guid>
			<description>&lt;p&gt;The main purpose of this article is to make sure that all basic HTML Elements are decorated with CSS so as to not miss any possible elements when creating new themes for Hugo.&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>The main purpose of this article is to make sure that all basic HTML Elements are decorated with CSS so as to not miss any possible elements when creating new themes for Hugo.</p>

<h2 id="headings">Headings</h2>

<p>Let&rsquo;s start with all possible headings. The HTML <code>&lt;h1&gt;</code>—<code>&lt;h6&gt;</code> elements represent six levels of section headings. <code>&lt;h1&gt;</code> is the highest section level and <code>&lt;h6&gt;</code> is the lowest.</p>

<h1 id="heading-1">Heading 1</h1>

<h2 id="heading-2">Heading 2</h2>

<h3 id="heading-3">Heading 3</h3>

<h4 id="heading-4">Heading 4</h4>

<h5 id="heading-5">Heading 5</h5>

<h6 id="heading-6">Heading 6</h6>

<hr />

<h2 id="paragraph">Paragraph</h2>

<p>According to the <a href="https://www.w3.org/TR/html5/dom.html#elements">HTML5 specification</a> by <a href="https://www.w3.org/">W3C</a>, <strong>HTML documents consist of a tree of elements and text</strong>. Each element is denoted in the source by a <a href="https://www.w3.org/TR/html5/syntax.html#syntax-start-tags">start tag</a>, such as <code>&lt;body&gt;</code>, and an <a href="https://www.w3.org/TR/html5/syntax.html#syntax-end-tags">end tag</a>, such as <code>&lt;/body&gt;</code>. (<em>Certain start tags and end tags can in certain cases be omitted and are implied by other tags.</em>)</p>

<p>Elements can have attributes, which control how the elements work. For example, hyperlink are formed using the <code>a</code> element and its <code>href</code> attribute.</p>

<h2 id="list-types">List Types</h2>

<h3 id="ordered-list">Ordered List</h3>

<ol>
<li>First item</li>
<li>Second item</li>
<li>Third item</li>
</ol>

<h3 id="unordered-list">Unordered List</h3>

<ul>
<li>List item</li>
<li>Another item</li>
<li>And another item</li>
</ul>

<h3 id="nested-list">Nested list</h3>

<ul>
  <li>First item</li>
  <li>Second item
    <ul>
      <li>Second item First subitem</li>
      <li>Second item second subitem
        <ul>
          <li>Second item Second subitem First sub-subitem</li>
          <li>Second item Second subitem Second sub-subitem</li>
          <li>Second item Second subitem Third sub-subitem</li>
        </ul>
      </li>
      <li>Second item Third subitem
        <ol>
          <li>Second item Third subitem First sub-subitem</li>
          <li>Second item Third subitem Second sub-subitem</li>
          <li>Second item Third subitem Third sub-subitem</li>
        </ol>
    </ul>
  </li>
  <li>Third item</li>
</ul>

<h3 id="definition-list">Definition List</h3>

<p>HTML also supports definition lists.</p>

<dl>
  <dt>Blanco tequila</dt>
  <dd>The purest form of the blue agave spirit...</dd>
  <dt>Reposado tequila</dt>
  <dd>Typically aged in wooden barrels for between two and eleven months...</dd>
</dl>

<h2 id="blockquotes">Blockquotes</h2>

<p>The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a <code>footer</code> or <code>cite</code> element, and optionally with in-line changes such as annotations and abbreviations.</p>

<blockquote>
<p>Quoted text.
This line is part of the same quote.
Also you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p>
</blockquote>

<p>Blockquote with a citation.</p>

<blockquote>
  <p>My goal wasn't to make a ton of money. It was to build good computers. I only started the company when I realized I could be an engineer forever.</p>
  <footer>— <cite>Steve Wozniak</cite></footer>
</blockquote>

<p>According to Mozilla&rsquo;s website, <q cite="https://www.mozilla.org/en-US/about/history/details/">Firefox 1.0 was released in 2004 and became a big success.</q></p>

<h2 id="tables">Tables</h2>

<p>Tables aren&rsquo;t part of the core Markdown spec, but Hugo supports them.</p>

<table>
<thead>
<tr>
<th>ID</th>
<th>Make</th>
<th>Model</th>
<th>Year</th>
</tr>
</thead>

<tbody>
<tr>
<td>1</td>
<td>Honda</td>
<td>Accord</td>
<td>2009</td>
</tr>

<tr>
<td>2</td>
<td>Toyota</td>
<td>Camry</td>
<td>2012</td>
</tr>

<tr>
<td>3</td>
<td>Hyundai</td>
<td>Elantra</td>
<td>2010</td>
</tr>
</tbody>
</table>

<p>Colons can be used to align columns.</p>

<table>
<thead>
<tr>
<th align="left">Tables</th>
<th align="center">Are</th>
<th align="right">Cool</th>
</tr>
</thead>

<tbody>
<tr>
<td align="left">align: left</td>
<td align="center">align: center</td>
<td align="right">align: right</td>
</tr>

<tr>
<td align="left">align: left</td>
<td align="center">align: center</td>
<td align="right">align: right</td>
</tr>

<tr>
<td align="left">align: left</td>
<td align="center">align: center</td>
<td align="right">align: right</td>
</tr>
</tbody>
</table>

<p>You can also use inline Markdown.</p>

<table>
<thead>
<tr>
<th>Inline</th>
<th>Markdown</th>
<th>In</th>
<th>Table</th>
</tr>
</thead>

<tbody>
<tr>
<td><em>italics</em></td>
<td><strong>bold</strong></td>
<td><del>strikethrough</del></td>
<td><code>code</code></td>
</tr>
</tbody>
</table>

<h2 id="code">Code</h2>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;en&#34;</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;UTF-8&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Example HTML5 Document<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>Test<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></div>
<div class="highlight"><pre class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;en&#34;</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;UTF-8&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Example HTML5 Document<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>Test<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></div>

<h2 id="other-stuff-abbr-sub-sup-kbd-etc">Other stuff — abbr, sub, sup, kbd, etc.</h2>

<p><abbr title="Graphics Interchange Format">GIF</abbr> is a bitmap image format.</p>

<p>H<sub>2</sub>O</p>

<p>C<sub>6</sub>H<sub>12</sub>O<sub>6</sub></p>

<p>X<sup>n</sup> + Y<sup>n</sup> = Z<sup>n</sup></p>

<p>Press <kbd>X</kbd> to win. Or press <kbd><kbd>CTRL</kbd>+<kbd>ALT</kbd>+<kbd>F</kbd></kbd> to show FPS counter.</p>

<p><mark>As a unit of information in information theory, the bit has alternatively been called a shannon</mark>, named after Claude Shannon, the founder of field of information theory.</p>]]></content>
		</item>
		
		<item>
			<title>我女儿嫁你可好</title>
			<link>https://fffou.com/post/171031/</link>
			<pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/171031/</guid>
			<description>&lt;p&gt;首先声明这是真实的事情，并非是玩笑的事情。博主所从事的工作是一个比较累的工作，因为天气较热&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>首先声明这是真实的事情，并非是玩笑的事情。博主所从事的工作是一个比较累的工作，因为天气较热</p>

<p>，所以上班和家中空调基本是没停过的，以及平时的生活习惯导致了较为严重的颈椎病，
这就导致了博主每隔一段时间要去所谓的盲人按摩去按按脖子和肩膀，这在博主之前的
 <a href="/post/175141/">透界</a>一文也是说过的。</p>

<p>当时说了这个老板是如何的励志人生，其中博主也做了详尽的述说。当然现在要说的是帮我按按颈椎的一个阿姨，怎么说呢，这个阿姨知道我是同乡后，我每次去店里都会跟我聊聊天，聊聊关于我工作和家里的的事情。</p>

<p>一开始我觉得格外的亲切，随着时间的变久，我开始觉得她对我了解，谈论我的事情有点超乎一些界限的情况，像亲人关切那样，因为和这阿姨也是较为熟悉，也就没多大在意这个问题。</p>

<p>直到今天放假（博主是国庆的三号四号放假），因为吹了一天空调，脖子实在难受，就去了这家店铺。刚把这阿姨叫上，这阿姨就问了一个没头没尾的问题：“小帅哥，你看过我女儿没有？“，”没有啊，阿姨。”我一脸懵逼，然后这阿姨就意味深长的说了句：”我女儿嫁你可好？”。“阿姨，不要开玩笑了！“我吓了一跳 ，全身甚至有一点发麻的感觉，切确的说有点不知所措的茫然，感觉是一开始就给套路了，脑袋有点反应迟钝。</p>

<p>之后，问了这个阿姨一些原因，大概意思是说处于家庭因素以及我是她同乡的考虑，只是想找一个对她女儿好的人家。通过对我一段时间的接触，认为无论从哪一方面我都处于一种优良的状态，是一个脾气良好，有上进心的优良男士，是极佳的人选。好吧，我算是无语了，我的脾性又如何能通过客人性质的情形做出判断，一是我来这只是脖子不舒服，你帮我缓解了，我自然一身轻松，并不会轻易动怒，但到了您老人家的眼中竟然成了一个脾气良好的人；二来多数人谈论 工作方面的事情，当然避重言轻、颇有一番言好不言坏的情形，又如何分辨出我是一个积极向上的良好男士。</p>

<p>当然，我也不是随便的人，我素来坚守宁缺毋滥的原则，对于配偶的还是有自己的一套匹配规则。我很委婉的拒绝了这位阿姨的“好心”，我并不会对这种“天作良机”有任何的兴趣，相反的这可能成了我生活中的笑谈话题，或是对于感情自我嘲讽的一个切入点。我并不想对阿姨的做法有太多个人的判断，毕竟这在我们这个地方很是普遍，父母对于子女幸福要求远高于所谓当下盛行的物质要求，不可置与否，更显得难能可贵。对于为了子女如此真切关心的阿姨，希望她的女儿能找到属于她的命中人，而我也在漂泊，直到遇到有缘人。</p>]]></content>
		</item>
		
		<item>
			<title>你的行为习惯可能会出卖你</title>
			<link>https://fffou.com/post/17981/</link>
			<pubDate>Fri, 08 Sep 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/17981/</guid>
			<description>&lt;p&gt;这段时间博主给颈椎病折磨的欲生欲死，其中的痛苦远非常人能理解，这期间几乎没有碰电脑和玩手机，这也是博主长久未发博文以及和其他博友交流的原因。这个本应该发生在中老年人身上的疾病却发生在博主身上，&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>这段时间博主给颈椎病折磨的欲生欲死，其中的痛苦远非常人能理解，这期间几乎没有碰电脑和玩手机，这也是博主长久未发博文以及和其他博友交流的原因。这个本应该发生在中老年人身上的疾病却发生在博主身上，</p>

<p>实在让人郁闷和无语。之前准备的文章也暂且放置一边，此文的诞生也是源于突如其来的想法。</p>

<h2 id="谨言慎行的必要">谨言慎行的必要</h2>

<p>近来時间，发生了许多事情，博主已经不想提起，这块大陆发生了许多事情，好坏亦是未知。特别是(评论)实名制对于一部分写博的博友产生了较大的影响，我建议他们尽量约束他们的行为和改变他们的习惯。</p>

<p>自古以来，力量是改变一些事实存在的动力，但到力量并不是那么可怕了，可怕却是这股力量如何被驱使，其中被支配的就是其中的思想与观点，所以思想就成为了当下忌惮的问题。许多的人想法并不想在大平台发表，想着在自己的站点发表，觉得就是所谓的自由，熟不知其中存在着一些变数，其中的所谓与变数大家尽可自我意味。</p>

<p>当博主发表些此文时，实名制已经进入要加严密的时期，意味着新时代已经进入了“科学发言”状态，通过一些追寻故事源头的工具更是成为不合理的存在，保全自身的方法就是不要参与其中并保持沉默或是继续阅读以下文篇。</p>

<h2 id="保护隐私之打造全新隐私平台">保护隐私之打造全新隐私平台</h2>

<p>信誓旦旦的讨论保护隐私就像是一次搞笑的交流活动，这在大环境下，可能吗？许多人想大大方方的畅所欲言，实则需要安全与隐秘的交流方式。</p>

<p>其中就拿博客而言，就包括了内容与互动两部分，在互动中我们不可避免的涉及到了网站名称、邮箱、域名三部分，很多人没想过以下的问题:</p>

<p>网站名称是否跟以前的站点有关联。</p>

<p>邮箱是否在讨论敏感内容的时候采用了邮件通知，并且互相交流的邮箱是否都是国内邮箱，这个相对SSL而言，你们的谈论内容已经在大环境下置于真空状态。事后仔细想想是否有必要搭建私有邮件平台。</p>]]></content>
		</item>
		
		<item>
			<title>没故事的时候就多积累墨水</title>
			<link>https://fffou.com/post/177161/</link>
			<pubDate>Sun, 16 Jul 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/177161/</guid>
			<description>&lt;p&gt;之前看到许多博主的网站是用vps搭建的，我呢也是小小的菜鸟一枚，看到他们把vps说的好处说的天花烂坠，然而现在头脑清醒之后觉得认真做站还是虚拟主机来的科学一点。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>之前看到许多博主的网站是用vps搭建的，我呢也是小小的菜鸟一枚，看到他们把vps说的好处说的天花烂坠，然而现在头脑清醒之后觉得认真做站还是虚拟主机来的科学一点。</p>

<p>之前看到老杨写的vps优惠信息，想到可以用作科学上网并学习linux。当晚头脑发热的就下单了，过了几天把linux的相关书本也买了几本回来。现在都过去好长一段时间了，一本都没看完，唯一看了的那一本《鸟哥的linux私房菜》也只是开头的前几十页左右。</p>

<h3 id="麻木是最可怕的精神毒药">麻木是最可怕的精神毒药</h3>

<p>也可能我这人是那种比较不能经受诱惑的那种，做事总是三分热度，最后弄得很多想做的事情无法完成。也或许是受最近天气影响，本人情绪很容易受这些外在因素干扰，加之年中工作甚忙，心情难免偏颇。家里的一些闲杂碎事及其他各种烦恼让本是身心疲惫的我，压得喘不过气来。每逢休息的时候，只想一天躺在床上睡觉、玩手机，麻木的像死鱼一般，准备出门已经接近夜半时刻。</p>

<p>是的，想想两年前自外回来后，身上的干劲消失了。行动再找不到任何可以作为动力的支点，麻木这东西让我的身心接近崩溃边缘，有故事也变得不会表达。</p>

<p>当然，浏览别人博客成了我的爱好，时常穿梭于各个博友的故事之间。现在看看窗外面下着的暴雨，突然明白自外回来的两年后很少走动，闲余时间便像一个全职宅男，这种习惯就叫麻木，而人却害怕改变的是一直培养的习惯，看着这个周末只剩半天，我想我应该多出去走走，改变这种颓废的生活状态，原理麻木。</p>]]></content>
		</item>
		
		<item>
			<title>更新了博客的样式</title>
			<link>https://fffou.com/post/17792/</link>
			<pubDate>Sun, 09 Jul 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/17792/</guid>
			<description>&lt;p&gt;之前对typecho各种主题是各种不喜欢，其中最主要的原因就是博主不喜欢在样式上“撞衫”了，对于同一款样式，采用之的博主千千万，即便文章美美的，也是没多大阅读兴趣的，即便是查阅文章，停留时间也不会长，这就好比在外面天天吃同样的饭菜，回到家还是那几个菜式，实在是食之无味，弃之毫不可惜。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>之前对typecho各种主题是各种不喜欢，其中最主要的原因就是博主不喜欢在样式上“撞衫”了，对于同一款样式，采用之的博主千千万，即便文章美美的，也是没多大阅读兴趣的，即便是查阅文章，停留时间也不会长，这就好比在外面天天吃同样的饭菜，回到家还是那几个菜式，实在是食之无味，弃之毫不可惜。</p>

<p>博主是一个文字控，喜欢美美的博文。即便没有美美的博文，起码也是要有独一无二的个性主题或是个性的域名。遗憾的是，博主已经有个性的域名，博文倒是写的一塌糊涂，只能在主题上修修补补出一个较为好辨识的样式出来。</p>

<p>之前的博客主题是看到qifu博客的界面还不错，也是我一直心中想设计的那个格局，仔细找了一下并没有Typecho的版本，不多加思考的问了qifu并仿照他的主题。</p>

<p>本以为用上这主题以后后顾无忧了，后面访问我博客的好几个博友问了这个主题，感觉“撞衫”比较厉害，今天就重新修改了这个主题。</p>

<p>之前的主题采用的导航是横条，还是感觉横条的导航个人比较偏爱，也都简洁明了，无可替代，也就继续采用横条导航。</p>

<p>把之前的鲜艳式的黄色底部和顶部横条给取消了，重新用分隔符分出上横条、文章、下横条三个部分，整体格局的版式还是采用原来的方案，因为感觉设计太精美了。</p>

<p>不要感觉上述文字高大上，其实我是想了好久，反复斟酌许久，并做了长时间的修改，因为是代码小白啦.</p>]]></content>
		</item>
		
		<item>
			<title>没更新博客的各种理由</title>
			<link>https://fffou.com/post/17791/</link>
			<pubDate>Sun, 09 Jul 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/17791/</guid>
			<description>&lt;p&gt;今日在更新一篇文章，博主都忘记了写上一篇具体是哪个时候，这段时间文章难产，心中总会找一些无关痛痒的借口，事后想想有这样的想法实在有点可笑，其中遵从自己的本心即可。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>今日在更新一篇文章，博主都忘记了写上一篇具体是哪个时候，这段时间文章难产，心中总会找一些无关痛痒的借口，事后想想有这样的想法实在有点可笑，其中遵从自己的本心即可。</p>

<h3 id="没更新博客的各种理由">没更新博客的各种理由</h3>

<p>说是忙吧，也不见得，但是我看了许多博主拿着接近年中，暑假来临工作较忙，来作为不更新博客的理由。而我心中斟酌许久，其实许多想写的东西，都不知不觉的重新吞入自己的腹中，其中多半已经想不起来了，不过都是生活唠叨的闲碎事情，技术文目前也是写不起来的，毕竟折腾这东西也是有到底的，人也会疲倦和心烦的。</p>

<p>说说天气吧，还真的有一些博友吧原因归于这种/这一段时间总是停停落落的下着阵雨，有时候想出去走走却在半路给突然的强雨给逼得原路返回，有时候待在家里仔细观察了外面雨势，觉得会下好长一段时间的雨，却又阴著天久久不下，浪费了博主大好出行时间，心中难免对这天气憎恨异常。</p>

<p>说是肚子没墨水和懒吧，我觉得只对了一半。我们不像生活中的传奇人物，每一天做着轰天动地的事情；我们不像那些名人，也说不出传遍网络，争相效仿的名言和经验；我们不像那些技术牛人，每每总结并分享着每一个技术要点，大家竞相学习。</p>

<p>现在回头想想，博客是表达的工具，而工具亦是生活的一部分。让我们专注于工具，让我们的生活为工具负责，让我们的生活为了维护工具而运转。当我们肚子没有墨水了，想想有几天没维护这个工具，言之为懒惰，就得为这工具强行表达？想想都有点好笑，这种畸形的强迫式习惯，不要也罢；即便不改变这种想法，这工具能维护的好？</p>]]></content>
		</item>
		
		<item>
			<title>为纸小墨静态博客适配instantclick</title>
			<link>https://fffou.com/post/176131/</link>
			<pubDate>Tue, 13 Jun 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/176131/</guid>
			<description></description>
			<content type="html"><![CDATA[<h3 id="为什么是不是其他静态博客-却选择纸小墨">为什么是不是其他静态博客，却选择纸小墨</h3>

<p>1.纸小墨博客比其他的博客，配置简单，不需要搭建繁琐的环境。</p>

<p>2.静态页面启用instantclick访问速度更是快上加快，简洁高效。在页面加载方面更具速度与体验性，访问者只需静静的看着我的博文</p>

<p>3.纸小墨没有自带评论功能，管理文章方便许多。我觉得既然是笔记，不是博文，仅仅是用于查阅也就没有必要拥有评论功能，即便如此，让笔记占据我大量的博文版面，博客渐渐就不能算是博客，我看叫转载平台还差不多。</p>

<p>4.之前我也跟别的博友说过，我不喜欢在我的博客转载他人的博文，但是最近发现有一些博文确实不错的，我觉得可以放到我的静态页面方便随时查阅。</p>

<p>4.打算用它实现基于谷歌的AMP版面，起码目前看起来实现简单，从零开始负担较小</p>]]></content>
		</item>
		
		<item>
			<title>正式把系统迁移到linux</title>
			<link>https://fffou.com/post/176101/</link>
			<pubDate>Sat, 10 Jun 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/176101/</guid>
			<description>&lt;p&gt;可能很多人无法理解我现在为什么会把系统切换到linux，可其中有许多原因&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>可能很多人无法理解我现在为什么会把系统切换到linux，可其中有许多原因</p>

<h3 id="其中有以下原因">其中有以下原因：</h3>

<p>1.首先是新出现的安全法，表示其对于隐私的保护的不确定性，在我认为并不能较为完善的保护隐私，相反的只是得到了反效果，甚至导致隐私泄露变本加厉的可能性<!--more--></p>

<p>2.在win10的良好运行下，我们知道前一阵子出现了所谓的勒索病毒，这让一些杀毒软件逍遥了一阵子，然而我觉得win10首先就收集隐私在先，其中更主要的是我发现对微软的系统没那么依赖，也许我用电脑只是用来写博客的原因吧。有时候我甚至觉得写博客其实只需要一个蓝牙键盘加上一个能显示的终端就够了，哪怕是给我一个普通的电脑、智能手机、甚至智能盒子我都能写下去，也确实有一些文章我是通过前面购买的智能盒子——remix mini写的，当然好文的产生的前提是我想写并且肚子里的墨水最够才行。</p>

<p>3.随着年龄的增长我发现，我们变得越来越成熟和稳重，安全与便捷成为我首先考虑的因素，或者是倾向于一次折腾永久受益的情况。就像我的博客一样，很多访问过我的博客的博友都知道我的界面稳定后都不怎么更改的了。系统从win切换到linux，至少我觉的安全性上面就得到了很好的增强，软件也没有了一些花哨的可能。至于有时候需要使用win的情况下我会准备一个虚拟机，并不打算回去了。</p>

<p>4.这次我linux从国内的deepin切换到德国的openSUSE再切换到最近比较火的发行版manjaro，也日渐说明了我对于大环境下的信任感渐渐降低。其实刚开始切换到deepin是因为想脱离win以及以上的因素在里面，后面想了很多，国内的东西还是不是很放心的使用，所以就转向了网上传言最适合桌面使用的openSUSE，但是据说德国的版权意识很是注重，导致了这个优秀的linux发行版本变得有点怪异，国内也有点冷门起来，逼格也是较高的。无奈回头逛逛deepin的论坛是看到了别人介绍的一个最近很火的linux发行版manjaro，据说是基于archlinux的一个linux发行版，具备了以上的特性并变得简单起来，想想就使用了下，只能说用了这么久的linux，终于被这一个发行版给吸引了，给圈粉了。</p>]]></content>
		</item>
		
		<item>
			<title>透界</title>
			<link>https://fffou.com/post/175141/</link>
			<pubDate>Sun, 14 May 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/175141/</guid>
			<description>&lt;p&gt;说真的博主在周末放假的时候闲来无事，喜欢到老乡开的盲人按摩店去放松一下工作了一个星期的躯体，做人就要&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>说真的博主在周末放假的时候闲来无事，喜欢到老乡开的盲人按摩店去放松一下工作了一个星期的躯体，做人就要</p>

<p>懂得享受哈！</p>

<h3 id="按摩店全盲的师傅">按摩店全盲的师傅</h3>

<p>博主所去的盲人按摩技师基本上都是全盲的师傅，轻松过程中就喜欢跟这些师傅扯一些有兴趣的话题，相谈甚欢。</p>

<h3 id="12号的离开">12号的离开</h3>

<p>12号师傅是这个店唯一不是全盲的师傅，但是对于手机屏幕之类的可视距离大概只有2～3cm。这次去到这家店像往常一样叫着熟悉的12号师傅，却被店老板告知这个师傅已经离职了，之前跟这个师傅聊天的时候就大概知道了他可能会离开这个店回湖南老家开自己的按摩店，当我问师傅何故，又是如何解决身体上的不便时，他解释，之前这个店铺离职的一对男女师傅，虽然双方都是全盲，他们却走到了一起，并开了一家属于他们的盲人按摩店 ，其中这个女师傅更是开了一家属于她自己的淘宝店铺，在美团之类的平台上线了按摩店的团购清单，佩服！</p>

<p>据店老板的意思，这个师傅是不甘于这个状态，认为在视力进入全盲前要去开自己的店铺，原来是有理想的师傅啊。</p>

<h3 id="6号的观察">6号的观察</h3>

<p>后面无奈就叫了6号的师傅，这个师傅真的知识渊博，更是懂得观察，这让我很是吃惊。最让我佩服的是这个来自湖北的师傅，每年通过自己的努力回家。通过与客人交流，留心来自各地方的人的生活习性，当这师傅准确说出本省人的生活态度与生活方式的时候，我深深的震惊到了，可能来自外省的朋友即便在这个地方待遍几年也未必有如此详细透彻的见解，可这个师傅刚到本省却是不到一个月，就有如此见解，总有种被别人看穿的感觉。仔细想想，当一个人失去了视力的时候，只能通过听力去认知周围的世界，或许不是一般人能做到如此执着的求知态度的。</p>

<p>仔细询问了6号对于12号离开的看法，6号表示他追求的是稳定，并不想像12号那样那般“冲动”，双眼已是不便，比起12号少了这个优势，决定平静的生活，感受生活气息&hellip;.</p>

<p>似乎想到了什么，拿起了手机的便签记下了今天的事情，仔细记录与分享其中的真与理。</p>]]></content>
		</item>
		
		<item>
			<title>证书从赛门铁克换成Comodo</title>
			<link>https://fffou.com/post/17572/</link>
			<pubDate>Sun, 07 May 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/17572/</guid>
			<description>&lt;p&gt;网站的证书一开始用着的是免费的Let&amp;rsquo;s Encrypt证书，前一阵子想着免费的证书每三个月要手动续期一次实在麻烦，虽然通过vps可以配置成自动续期，但是博主现在用着的是虚拟主机。因为腾讯提供了免费一年的证书，&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>网站的证书一开始用着的是免费的Let&rsquo;s Encrypt证书，前一阵子想着免费的证书每三个月要手动续期一次实在麻烦，虽然通过vps可以配置成自动续期，但是博主现在用着的是虚拟主机。因为腾讯提供了免费一年的证书，</p>

<p>觉得方便就换成了赛门铁克的证书。却没想着因为之前赛门铁克的证书问题，谷歌要慢慢降低证书的信任度，这就头疼了。</p>

<p>后面看到了黑暗游侠的文章知道了Comodo第一时间与Namecheap推出了证书替换方案，只需验证域名是否使用了赛门铁克证书，验证成功后后登陆Namecheap账号申请Comodo证书，静静等待邮箱下发成功通知。</p>]]></content>
		</item>
		
		<item>
			<title>win10纯净之路</title>
			<link>https://fffou.com/post/17511/</link>
			<pubDate>Mon, 01 May 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/17511/</guid>
			<description>&lt;p&gt;本来这是一个老生常谈的话题，但是最近电脑出了故障。索性就重新安装了最新版本的win10。&lt;/p&gt;

&lt;p&gt;很多人装了系统以后就使劲的下载所谓的卫士，优化大师之类的工具给自己的电脑进行打分。做着盲目的负优化，把所谓的全家桶带到了自己的电脑，让电脑越来越卡。然而博主本人的电脑用着稳定和速度，足足坚持到系统坏掉不含全家桶。这里写本篇文章的目的就是分享我的装机经验，告诉他们怎样让自己的电脑更加纯净。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>本来这是一个老生常谈的话题，但是最近电脑出了故障。索性就重新安装了最新版本的win10。</p>

<p>很多人装了系统以后就使劲的下载所谓的卫士，优化大师之类的工具给自己的电脑进行打分。做着盲目的负优化，把所谓的全家桶带到了自己的电脑，让电脑越来越卡。然而博主本人的电脑用着稳定和速度，足足坚持到系统坏掉不含全家桶。这里写本篇文章的目的就是分享我的装机经验，告诉他们怎样让自己的电脑更加纯净。</p>

<h3 id="开启自带输入法的云输入并精简小娜助手">开启自带输入法的云输入并精简小娜助手</h3>

<p>目的：不用装第三方输入法</p>

<p>很多人不解，为何把精简小娜助手和开启自带拼音输入法的云输入放在一起，因为博主以前精简小娜助手后发现无法开启云输入，后面才发现这是巨硬公司的强硬措施，就是把小娜助手跟别的服务捆绑在一起，小娜助手会记录用户的隐私，也无法正常卸载。虽然可以通过别的途径把这个助手清除，但是卸载之前需要开启输入法的云输入，这就符合了本文的主旨”纯净“了，既阻止了小娜助手收藏隐私，因为开启了云输入让自带输入法变得好用起来，又可以不用装第三方输入法。</p>

<p>1.装上原版win10的系统，进入电脑的&rdquo;设置&rdquo;&gt;&ldquo;时间和语言&rdquo;&gt;&ldquo;区域和语言&rdquo;&gt;点击&rdquo;中文(中华人民共和国)windows显示语言&rdquo;的&rdquo;选项&rdquo;按钮&gt;选择&rdquo;微软拼音输入法&rdquo;的&rdquo;选项&rdquo;&gt;把&rdquo;云计算&rdquo;开启。
2.打开”小娜助手“并不要做任何动作，因为在用户同意之前，这个软件是不会运作并收集隐私的，这个时候调出”任务管理器“查询到”小娜助手“的准确文件位置并记录下来。准备一个linux pe或是具备linux live功能的印象文件，通过其中的启动方式，进入之前记录的准确位置进行删除或是打包备份处理。</p>

<h3 id="保护隐私">保护隐私</h3>

<p>目的：自win10开始，微软在大量的收集个人数据，保护隐私显得迫在眉睫</p>

<p>通过DWS lite屏蔽对用户的数据收集，注意保留“windows defender”以及系统更新，比较奇怪的是使用本工具后读写硬盘正常了，之前win10读取硬盘一直100%。</p>

<h3 id="精简与优化">精简与优化</h3>

<p>使用dism++工具对系统进行一些调整，精简自带UMP程序。</p>

<h3 id="尽量装应用商店的应用软件">尽量装应用商店的应用软件</h3>

<p>目的：保持在一般生活应用软件的纯净，避免全家桶趁虚而入</p>

<p>就像上面小标题说的，尽量装应用商店的应用软件。因为微软或是苹果的应用商店都有进行一些行为上的规范，所以在这里能下载到较安全和可靠的运用软件。企鹅软件、音乐软件建议在这下载，特别是视频类软件在这下载更能享受免广告的待遇。</p>

<h3 id="利用火绒杀毒配合自带defender搭建纯净与安全环境">利用火绒杀毒配合自带defender搭建纯净与安全环境</h3>

<p>目的：火绒充当单机维护工具，不具备流氓行为，阻止加载驱动和钩子注入，特别是充当联网控制工具，配合自带杀毒，再也不用卫士啦！！！</p>

<p>1.选好版本，配置好火绒杀毒</p>

<p>现在国产某些软件越来越不老实，会强制更新或是后台进行数据收集等未经用户允许的网络操作，或是没有道德的加驱和注入钩子的行为。这时候我们就需要一款良心的软件——火绒杀毒去充当网络防火墙或是防止系统被全家桶加驱或是注入钩子，我们要找的是火绒杀毒的2.x的版本，因为3.0版本以上的火绒参加了微软的杀毒认证，所以我们一旦装了3.0以上的火绒杀毒版本系统就会认为我们已经拥有杀毒软件进而关闭自带的defender。但是火绒的杀毒能力真的不是太好，这个时候我们只能退而求其次的选择2.x的版本，因为这个版本没有被微软杀毒认证，就能保证保证火绒和自带杀毒同时运行，而互不干扰。因为火绒的update.exe会在联网的情况下自动更新到最新的版本，这就需要我们在关闭网络的条件下安装2.x的火绒，并进入linux pe或是live环境删除安装文件夹的update.exe,让火绒失去更新功能永远停留在2.x的版本，使火绒充当单机维护工具，同时我们开启写入驱动的拦截，并阻止注入钩子，开启网络联网控制，任意的控制任何一个程序的联网行为，特别是update.exe之类的更新行为。再配合自带杀毒的强劲杀毒能力，再也不用装所谓的卫士了，纯净又安全。</p>

<h3 id="尽量用开源软件代替一般常用软件">尽量用开源软件代替一般常用软件</h3>

<p>目的：一般全家桶就在一般应用行列，特殊的专业软件没有它们的踪影，比如ps</p>

<p>尽量用开源软件代替一般常用软件，这样就能避免全家桶进入我们的电脑</p>

<h3 id="用好7-zip解压工具">用好7-ZIP解压工具</h3>

<p>但我们不得不用一些具有全家桶血缘关系的软件时，用好7-ZIP解压工具把安装文件解压，去除其中的update.exe之类的程序以及.sys之类的文件避免加载驱动行为，我想配合好火绒工具，这个软件也基本上失去了流氓行为，当然具备联网功能的浏览器之类的并不能阻止手机个人数据，这个我们要注意。</p>

<h3 id="浏览器尽量用信得过的">浏览器尽量用信得过的</h3>

<p>比如chrome、firefox以及国外的一些比较放心的浏览器，锅内的浏览器在你pa楼梯的时候可能会记录你的信息，阻止访问一些不存在的网站，甚至刻意阻止一些插件&hellip;</p>]]></content>
		</item>
		
		<item>
			<title>Hashover-PHP开源评论系统</title>
			<link>https://fffou.com/post/173192/</link>
			<pubDate>Sun, 19 Mar 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/173192/</guid>
			<description>&lt;p&gt;之前一直想搭建静态博客配合着自己搭建的评论系统，思路是好的，然而问题确实困难重重。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>之前一直想搭建静态博客配合着自己搭建的评论系统，思路是好的，然而问题确实困难重重。</p>

<p>找到好用的静态博客难，找到并搭建评论系统却更难，网络上的可供我们搭建的开源评论系统几乎没有，幸亏内容才是网站的中心。上文<a href="/post/173191/">静态博客——纸小墨</a>中提到过评论系统是有多么的少，少的一个手掌都数的清楚，适合博主的评论系统更是几乎了无所有。</p>

<p>正好看到博友的博客换成了静态博客，切换了很多第三方评论系统都出了许多问题，比如：多说无法评论及不稳定，wordpress的评论系统IntenseDebate加载时异常的缓慢，搜狐畅言因为某些原因。。。因为之前在折腾Hashover开源评论系统（下面简称Hashover），碍于时间问题不能深入折腾，起了一点点的小私心让他人折腾透好让我更方便的采用，于是就推荐了hashover这款开源评论系统给博友。</p>

<h3 id="hashover开源评论系统">Hashover开源评论系统</h3>

<p>首先要说Hashover是博主在谷歌尝试用英文“comments system”找寻良久，翻遍大量网页才找到的。看到作者的github提到的介绍，心里很是激动。</p>

<pre><code>    Hashover是一个采用php环境，支持多种存储格式(SQL/Json/Xml)储存评论数据的开源评论系统。
</code></pre>

<p>最重要的是这就意味着我们搭建这个系统的门槛进一步降低，不需要vps这种东西了。之前看到了“唯一一个”开源评论系统就是需要搭建python环境的，入手就难了许多。先不多说，说说Hashover的优点和特点。</p>

<h3 id="特点及优点">特点及优点</h3>

<ol>
<li>采用php，方便简单</li>
<li>数据在自己手上，备份迁移方便，定制性更强</li>
<li>支持垃圾评论过滤</li>
<li>支持五种智能排序方式</li>
<li>IP地址阻止</li>
<li>电子邮件通知</li>
<li>采用线程回复，更高效更稳定</li>
<li>支持显示gravar图像</li>
<li>评论Rss</li>
<li>支持点赞功能</li>
<li>支持设置热评</li>
<li>支持定制CSS</li>
<li>支持定制HTML</li>
<li>支持固定链接</li>
<li>持管理员账号</li>
<li>支持多语言(暂无中文，可手动翻译)</li>
<li>支持显示外部图像</li>
<li>可限制HTML标记，保证评论安全</li>
<li>支持模板布局修改</li>
<li>支持网址补全</li>
<li>推荐人检查</li>
<li>支持AJax异步加载</li>
</ol>

<h3 id="安装方法摘抄">安装方法摘抄</h3>

<p>以下就少许的摘抄并翻译原作者的安装文档：</p>

<p>1.JavaScript方法（推荐）</p>

<pre><code>    &lt;script type=&quot;text/javascript&quot; src=&quot;/hashover.php&quot;&gt;&lt;/script&gt;
    &lt;noscript&gt;You must have JavaScript enabled to use the comments.&lt;/noscript&gt;  
</code></pre>

<p>2.PHP方法</p>

<pre><code>    &lt;?php $mode = 'php'; include('hashover.php'); ?&gt;  
</code></pre>

<p>3.推迟加载评论的JavaScript与代码：</p>

<pre><code>    &lt;div id=&quot;hashover&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;/hashover.php&quot; defer=&quot;defer&quot;&gt;&lt;/script&gt;
</code></pre>

<p>4.异步加载评论的JavaScript：</p>

<pre><code>    &lt;div id=&quot;hashover&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;(function() { var s = document.createElement('script'), t = document.getElementsByTagName('script')[0]; s.type = 'text/javascript'; s.async = true; s.src = &quot;/hashover.php&quot;; t.parentNode.insertBefore(s, t); })();&lt;/script&gt;
</code></pre>

<h3 id="更多帮助访问">更多帮助访问：</h3>

<p><a href="https://link.fffou.com/go/tildehash/">Hashover作者地址</a></p>

<p><a href="https://link.fffou.com/go/hashover_github/">Hashover github地址</a></p>

<p>因为工作比较忙，几乎没怎么去折腾，指导和交流更是指不上。发布此文目的纯属觉得这么好的评论系统不应该被埋没，好东西应该分享，更多的是希望博友在博客的迁移中不要丢失了珍贵的评论数据。</p>

<p>附上一张评论系统的截图：</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgy1fds7so754aj210j1cr409.jpg" alt="Hashover" /></p>

<h3 id="hashover注意的问题">HashOver注意的问题</h3>

<p>博主也在跟作者认真沟通一些来自评论系统的问题，比如说增加中文，自己评论完无法跳转回原评论页面等问题，惊喜的收到作者的回复邮件，粗浅的翻译了一下，大致意思是:</p>

<pre><code>    “中文环境现在已经包含在HashOver-next最新文件之中中，要使用它，请在“settings.php”中设置“$ language”为“zh-cn”。作者已经做了一些小的风格/语法的变化，并希望他们有意义。如果有异议，欢迎大家指出问题。重定向问题现在也修复了。发表评论用户将会发布后重定向到正确的页面.”
</code></pre>

<p>博主目前正积极跟作者沟通邮件回复提醒功能，如果完善，就几近完美了&hellip;</p>

<p>最新状态是邮件回复问题也已经解决，作者给出的解决方式：</p>

<p>在设置文件中找到下列设置，并填写自己的邮箱并保持一致，否则会容易出错.</p>

<pre><code> public $notificationEmail = 'example@example.com';
</code></pre>

<h3 id="关于第三方评论导入hashover的问题">关于第三方评论导入Hashover的问题</h3>

<p>前几天来自博友fooleap的推荐,发现有开发者开发出来了把Disqus评论导入Hashover的第三方
转换程序disqus-to-hashover,有兴趣的博友可以尝尝鲜。</p>

<h3 id="hashover的wordpress插件">Hashover的Wordpress插件</h3>

<p>感谢博友liaronce的告知，知道了作者推出了wordpress的插件版本，有兴趣的博友可以尝试一下。</p>

<p><a href="https://link.fffou.com/go/hashover-wp-plugin/">WordPress plugin for HashOver Comments</a></p>

<h3 id="多说问题">多说问题</h3>

<p>我知道很多站长在采用多说，然而让我不明白的是，相当一部分站长明明知道多说已经无人维护的之后还在采用多说，甚至推荐身边的人使用多说。更有甚者，在有自带博客评论的情况下，放弃自带评论去采用多说这种费力不讨好的做法，表示费解。</p>

<p>更让我无语的是，有那么一群站长，在多说倒下后继续寻找所谓的第三方评论，就没想过搭建自己的评论，也许静态博客说的过去，可动态博客就…</p>

<p>这几天也跟作者在邮件上沟通了许多，也都学会了许多，感谢作者辛苦的付出。在我们这些博主的建议下，作者在短期内除了wordpress插件，修复了一些问题。</p>

<p>也在多说问题倒下的问题上跟作者说了一下，希望作者能继续完善这个作品以至于完美替代多说，作者表示同意了，欢迎大家的提交问题，并修复所有遇到的问题，特别是他所不熟悉的中文环境，也希望大家指出软件的不足之处或是需要补充的功能，最成实现替代多说。</p>

<p>再次感谢作者能花费精力做出如此精美的不为盈利的开源项目。</p>]]></content>
		</item>
		
		<item>
			<title>静态博客——纸小墨</title>
			<link>https://fffou.com/post/173191/</link>
			<pubDate>Sun, 19 Mar 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/173191/</guid>
			<description>&lt;p&gt;说真的，追求极致的我一直以来最喜欢的博客程序就是所谓的静态博客，然而却由于静态博客的一些毛病让我一直没有采用静态博客作为我的主博客，其中就有以下的缺陷&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>说真的，追求极致的我一直以来最喜欢的博客程序就是所谓的静态博客，然而却由于静态博客的一些毛病让我一直没有采用静态博客作为我的主博客，其中就有以下的缺陷</p>

<h3 id="主要缺点">主要缺点</h3>

<p>1.静态博客发布文章麻烦，不能随时在pc和移动端发表文章，对于电脑经常不带在身边的博友来说这是不能忍受的</p>

<p>2.静态博客的文章检索功能，对于那些回头翻阅你历史博文的访客来说非常重要，博客建立初期，博文数量少，博文可通过分类归档进行查看，然而当文章数量达到一定的数量级别时候，没有搜索功能会让查看历史文章显得头痛和无奈。</p>

<p>3.静态博客的生成速度问题，显然初期的静态博文因为数量少生成速度还是挺快的，随着文章数量的增加，博文生成速度越来越让人烦恼。</p>

<p>4.文章和评论的迁移问题，相当一部分博友从动态博客迁移到静态时，文章不能全部成功转移到静态，并面临着前期辛苦积攒的评论丢失或是转移困难问题，又或者说第三方提供的评论系统在难以盈利问题下出现加载稳定问题，在政策问题上对博客和评论严加限制或是面临不能访问评论系统的问题，在评论数据上更是不能因为一个小小的故障，对用户的数据备份和转移去打包票。</p>

<p>5.静态博客往往和vps才能得到较完美的发挥良好的优点，虽说静态空间提供了可供静态页面的存储，然而一般博友可无法承受繁琐的页面生成及页面上传的步骤，更何况静态博客全靠pc/vps生成。</p>

<p>可惜问题终究是问题，直到我遇到了静态博客&ndash;<a href="https://link.fffou.com/go/imeoer_github/">纸小墨</a>  ，怎么说呢？纯粹的说这是一个非常简单的采用go语言开发的静态博客，支持mac/win/linux。</p>

<h3 id="说说我喜欢这个静态博客的原因吧">说说我喜欢这个静态博客的原因吧</h3>

<p>1.支持搜索功能，你当然没有看错，光是这一点在静态博客不采用任何第三方插件的情况下就足以傲视所谓的hexo之类的博客系统</p>

<p>2.采用Go语言开发，简小轻便</p>

<p>3.生成速度快，虽然没怎么用，但是目测文章生成速度应该是比肩或是超越hexo的</p>

<p>4.这个博客系统最重要的是在win下我无需搭建所谓麻烦的环境以运行生成环境。</p>

<p>5.一直想自己搭建一个评论系统，翻遍开源中国之类的开源社区，也都参看了度娘的所有页面，都只看到了一个开源评论系统Isso，然而却需要搭建python环境让我这个没有vps的人来说头痛。直到爬着梯子上了谷歌翻遍所有英文页面，终于找到一个适合的评论系统Hashover,关于这个评论系统请查看<a href="/post/173192/">Hashover-采用php+sql/json/xml的开源评论系统</a>一文。</p>

<p>6.修改theme简单和高效</p>]]></content>
		</item>
		
		<item>
			<title>闲杂碎事</title>
			<link>https://fffou.com/post/167171/</link>
			<pubDate>Fri, 17 Mar 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/167171/</guid>
			<description>&lt;p&gt;夏季到来了，烦躁闷热难免，打开窗看看外面金灿灿的阳光，；吐了一口热气，屋外的世界真的跟烤箱没有多大区别。今天基本没出过房门，我知道&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>夏季到来了，烦躁闷热难免，打开窗看看外面金灿灿的阳光，；吐了一口热气，屋外的世界真的跟烤箱没有多大区别。今天基本没出过房门，我知道</p>

<p>出了房门就会送来“温暖”。
飞速的打开电脑，查看了今天的天气，这高温从没降过多少。</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/1671701.jpg" alt="weather" /></p>

<h3 id="快递服务">快递服务</h3>

<p>下午收到了快递短信，TMD，这就是圆通快递的服务质量，一个电话没有直接就丢保安室，果断差评。</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/1671702.jpg" alt="kuaidi" /></p>

<h3 id="风扇救急">风扇救急</h3>

<p>昨天买的美的落地扇终于到了，这次买的还是以前款式，我相信美的的质量。</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/1671703.jpg" alt="fengshan1" /></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/1671704.jpg" alt="fengshan2" /></p>]]></content>
		</item>
		
		<item>
			<title>巧用写轮眼破解QQ手势密码</title>
			<link>https://fffou.com/post/17371/</link>
			<pubDate>Tue, 07 Mar 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/17371/</guid>
			<description>&lt;p&gt;&lt;font color=&#34;green&#34;&gt;My Android Tool&lt;/font&gt;，俗称《&lt;font color=&#34;green&#34;&gt;写轮眼&lt;/font&gt;》，也是名叫《&lt;font color=&#34;green&#34;&gt;禁用服务&lt;/font&gt;》的应用升级版。这款安卓神器能极大的优化你的手机，甚至让你的手机接近、达到甚至超越同期的iOS设备。写轮眼现在既可禁用服务又能禁用自启。它的工作原理是从根源上对系统设置进行的修改，就算你弄好之后卸载它，也依然是有效的，直到刷固件或者清除数据，当然需要root权限。”&amp;mdash;&amp;ndash;以上介绍字段引用     &lt;font color=&#34;green&#34;&gt;ZD423&lt;/font&gt;&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p><font color="green">My Android Tool</font>，俗称《<font color="green">写轮眼</font>》，也是名叫《<font color="green">禁用服务</font>》的应用升级版。这款安卓神器能极大的优化你的手机，甚至让你的手机接近、达到甚至超越同期的iOS设备。写轮眼现在既可禁用服务又能禁用自启。它的工作原理是从根源上对系统设置进行的修改，就算你弄好之后卸载它，也依然是有效的，直到刷固件或者清除数据，当然需要root权限。”&mdash;&ndash;以上介绍字段引用     <font color="green">ZD423</font></p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;我们知道现在人越来越注重自己的隐私安全，软件也开始朝着这个方向发展，安卓QQ支持登录时设置图形密码，这是好的现象。今天我们就研究QQ软件图案解锁(<font color="green">这个理由有点牵强，其实说是偷看女票里面的内容还合理点</font>)是怎样的一种安全体验。</p>

<p>首先得确保你的安卓设备已经获得完整的权限管理(Root),接着我们要去下一个软件&ndash;写轮眼，安装并同意写轮眼获得权限。</p>

<h3 id="下面进入破解步骤">下面进入破解步骤:</h3>

<p>1.确保手机QQ设置有手势密码，没有就手动设置一个.
<img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bjw1fd20qow1ubj20u01hctbh.jpg" alt="手势" />
2.打开写轮眼并同意获得权限
3.点击&rdquo;<font color="red">左上角三条横线的图形菜单</font>&rdquo;,在弹出的白色菜单栏中的&rdquo;<font color="red">组件信息</font>&ldquo;栏中选择&rdquo;<font color="red">活动</font>&ldquo;进入活动界面
<img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bjw1fd20qo4xkmj20u01hc0xv.jpg" alt="三横线" />
&gt;
<img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bjw1fd20qoit0rj20u01hcn11.jpg" alt="活动栏目" />
4.在活动界面的&rdquo;<font color="red">第三方</font>&ldquo;栏目中滑动屏幕直至看到&rdquo;<font color="green">QQ</font>&ldquo;并点击进入QQ的活动管理界面，点击右上角的&rdquo;<font color="red">放大镜</font>&rdquo;,输入&rdquo;<font color="red">GesturePWDUnlockActivity</font>&rdquo;,出现的结果中禁用这个服务。
<img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bjw1fd20xjiaeij20u01hcgrn.jpg" alt="放大镜" />
&gt;
###
<img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bjw1fd20qpfl7bj20u01hcte7.jpg" alt="Unlock" />
5.打开QQ手势密码是不是没有了！！！恢复手势密码只需重启&rdquo;<font color="red">GesturePWDUnlockActivity</font>&ldquo;这个活动就行了</p>

<h3 id="优缺点以及声明">优缺点以及声明</h3>

<p><font color="green">优点</font>:环保高效，事后不留痕迹，不会破坏原来的密码，实可谓偷窥良药</p>

<p><font color="green">缺点</font>:需要获得Root权限</p>

<p><font color="green">适用版本</font>:QQ谷歌版、QQ日本谷歌版测试通过，其他版本未测试，估计是可以的</p>

<p><font color="red">声明:这个方法是无意之中发现的，除了研究需要，请勿用于非法用途。为了分享更美好的文章，也为了以后版本用上这个科学良方，请不要传播此文,谢谢.</font></p>]]></content>
		</item>
		
		<item>
			<title>MIUI阻止更新hosts</title>
			<link>https://fffou.com/post/17321/</link>
			<pubDate>Thu, 02 Mar 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/17321/</guid>
			<description>&lt;p&gt;新买的小米手机因为广告太多刷了国际版，最近手痒看到支持刷公交，遂刷回国内版本，但却被这几点东西恶心到了：&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>新买的小米手机因为广告太多刷了国际版，最近手痒看到支持刷公交，遂刷回国内版本，但却被这几点东西恶心到了：</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;1.我是刷的较老的MIUI版本，目的很简单，就是方便去广告，没那么多复杂的东西，也支持公交卡。最后打开小米钱包(内置虚拟公交)却发现公交只支持北京和上海，虽然应用商店能更新小米钱包，然而更新到最新版钱包后既然还是这样只支持这两个城市。难道小米做不到更新app来支持更多的城市吗？答案是支持的，目的只是为了变相推广新版本的系统，新版本的MIUI多了一个跟苹果一样负一屏的智能助理，删除会导致无限重启，吐&hellip;
###</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;2.耗电问题不是一般的大，国际版优化后能做到一天待机掉一格电到两格电，然而国内版本即便狠心优化，一个钟即便什么不用，也能掉一两格电</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;3.稳定性也不如国际版，各种闪退。最主要的是安装play商店总是各种问题，无法使用，这是我不能忍受的。</p>

<p>###</p>

<p>果断换回国际版并配置hosts文件阻止更新，至于刷公交我还是用回我的羊城通，不能忍受小米限制nfc-sim，来变相推广小米钱包的行为(内置虚拟公交)。</p>

<h3 id="配置hosts方法">配置hosts方法</h3>

<p>&nbsp;&nbsp;&nbsp;&nbsp;1.首先用抓包软件抓取软件访问服务器对应的hosts，并确保手机已经root</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;2.通过文件管理器把抓取到的hosts添加到/system/etc/hosts文件，至于如何添加hosts数据可通过搜索引擎查找相关的资料，这里不再详细去写。,编辑完hosts文件后记得设置文件的权限为644</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;3.清除“系统更新”的数据，并重新打开验证是否生效</p>]]></content>
		</item>
		
		<item>
			<title>我只是需要备案号而已</title>
			<link>https://fffou.com/post/172281/</link>
			<pubDate>Tue, 28 Feb 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/172281/</guid>
			<description>&lt;p&gt;今天整理域名发现国内的域名还有几个月就过期了，对于续费我是食之无味，弃之可惜。要不是拿这个域名配着阿里云免费主机备案，说不得真把它给扔了，说真的是因为国内备案烦琐和严格要求让我不得不保留这个域名。对我而言，国内的空间与域名并不放在心头的，留着域名和空间都只是为了这个备案号码。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>今天整理域名发现国内的域名还有几个月就过期了，对于续费我是食之无味，弃之可惜。要不是拿这个域名配着阿里云免费主机备案，说不得真把它给扔了，说真的是因为国内备案烦琐和严格要求让我不得不保留这个域名。对我而言，国内的空间与域名并不放在心头的，留着域名和空间都只是为了这个备案号码。</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;我并非需要国内的备案，只需要国内的云存储，因为采用国外主机的缘由，受其中静态资源加载缓慢的影响，所以决定采用国内的云存储解决方案，然而却发现需要备案号，于是问题就出现了。
获得备案号需要的条件:</p>

<ol>
<li><p>我需要购买国内主机</p></li>

<li><p>要备案就意味着要再购买域名，既然本站域名使用了国外主机，就不会拿来备案的</p></li>
</ol>

<p>&nbsp;&nbsp;&nbsp;&nbsp;所以要找一个支持备案的免费主机，对我而言，买了国内的主机却不去使用显得浪费，再说国内的主机真心不便宜。</p>]]></content>
		</item>
		
		<item>
			<title>去年购买的Remix Mini</title>
			<link>https://fffou.com/post/17225/</link>
			<pubDate>Sat, 25 Feb 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/17225/</guid>
			<description>&lt;p&gt;技徳科技是由谷歌离职的三位前员工创立，让安卓转换为类windows的操作方式，窗口化管理，以轻办公为目标的公司。博主于去年双十二购买了该公司的产品Remix Mini&amp;mdash;全球首款安卓电脑&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>技徳科技是由谷歌离职的三位前员工创立，让安卓转换为类windows的操作方式，窗口化管理，以轻办公为目标的公司。博主于去年双十二购买了该公司的产品Remix Mini&mdash;全球首款安卓电脑</p>

<h3 id="购买低配版以及使用目的">购买低配版以及使用目的</h3>

<p>&nbsp;&nbsp;&nbsp;&nbsp;因为双十二原价299软妹的低配版99软妹促销，所以买了1gRam/8gRom的低配版，另外还有2gRam/16gRom的高配版。至于买这款设备的原因是为了轻办公，譬如码码字、写博文、收邮件、听音乐、看视频的需求，最主要看中了其中的低功耗，可以长时间开着设备不心疼电费。</p>

<h3 id="remix-mini-与-remix-os">Remix mini 与  Remix os</h3>

<p>&nbsp;&nbsp;&nbsp;&nbsp;这款产品搭建了Remix os,这是一个集成任务栏、多窗口操作和窗口控件、类开始菜单、支持多任务以及支持键鼠等拓展的安卓定制系统。</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bjw1fd33xjkkicj20e909o0tg.jpg" alt="os" /></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bjw1fd33xjohl6j20qr0fb79g.jpg" alt="os" /></p>

<h3 id="初见印象">初见印象</h3>

<p>Remix mini只有一个黑色盒子般大小，单手就可以托住，足见它的轻便携带的特性。</p>

<h3 id="能耗">能耗</h3>

<p>&nbsp;&nbsp;&nbsp;&nbsp;由于采用了全志 64位ARM处理器,在能耗上相比电脑和笔记本更具优势，官方宣称同样条件下Remix mini仅为10w,达到所谓的5天1度电。</p>

<h3 id="电源按钮">电源按钮</h3>

<p>&nbsp;&nbsp;&nbsp;&nbsp;我们生活中的电子设备电源按钮一般采用按压式的开关，而Remix mini却罕见的采用了电容式触摸电源按钮，轻轻点触 Mini 顶端即可完成开机启动和关机，免去了找电源按钮的麻烦更延长了按钮的寿命。</p>

<h3 id="联网方式">联网方式</h3>

<p>Remix mini支持通过无线连接和以太网的方式连接网络，灵活方便。</p>

<h3 id="拓展">拓展</h3>

<p>Remix mini支持蓝牙和usb,大大方便了设备的拓展，支持连接键鼠更是为码字一族提供了便利。</p>

<h3 id="hdmi端口">HDMI端口</h3>

<p>通过1080P HDMI输出支持连接显示器并输出1920*
1080分辨率</p>]]></content>
		</item>
		
		<item>
			<title>Firefox比chrome更安全？</title>
			<link>https://fffou.com/post/172131/</link>
			<pubDate>Mon, 13 Feb 2017 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/172131/</guid>
			<description>&lt;p&gt;chrome和firefox一直是浏览器的引领者，也都是开源软件的先行者。一直有人讨论两者之间的哪个比较安全问题，然而前段时间遇到的问题似乎让我有了一些眉目。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>chrome和firefox一直是浏览器的引领者，也都是开源软件的先行者。一直有人讨论两者之间的哪个比较安全问题，然而前段时间遇到的问题似乎让我有了一些眉目。</p>

<p>前段时间买了小米手机，以前的miui已经变成Adui，去除广告和获取root成为买手机后的第一任务，这就需要让手机通过电脑代理并借助嗅探软件进行去除。飞快的打开嗅探软件并开启https监听，开始了手机广告的嗅探。中途用chrome浏览了一些网页，一点事都没有；紧接着打开firefox浏览网页却无法打开并显示着不安全的提示，无论是http还是https，最后无奈只好关闭了嗅探软件，firefox才能正常浏览网页。</p>]]></content>
		</item>
		
		<item>
			<title>关于配置HSTS的事情</title>
			<link>https://fffou.com/post/1612161/</link>
			<pubDate>Fri, 16 Dec 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/1612161/</guid>
			<description>&lt;p&gt;之前看到很多博友启用了Https，有些还比较激进的采用了&lt;font color=#FD5E02&gt;HSTS&lt;/font&gt;。今天我也赶一下这股潮流，只是之前在国外的某个网站中看到有设置.
htaccess文件来达到改变文件头的目的。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>之前看到很多博友启用了Https，有些还比较激进的采用了<font color=#FD5E02>HSTS</font>。今天我也赶一下这股潮流，只是之前在国外的某个网站中看到有设置.
htaccess文件来达到改变文件头的目的。</p>

<blockquote>
<p><IfModule mod_headers.c>
Header set Strict-Transport-Security &ldquo;max-age=10886400; includeSubDomains; preload&rdquo; env=HTTPS
</IfModule></p>
</blockquote>

<p>虽说其中有些波折，最后用Chrome的开发者工具查看发现文件头发生变化，只是有没有生效尚不能过早的下结论，方法也都跟<a href="https://link.fffou.com/go/cyhour_466/">#常阳时光</a>  说的大致相同，只是他的方法是改变Header.php的形式，只是能否生效尚待考验。据说申请 <font color=#FD5E02>HSTS Preload List</font>需要全站采用Https,只是网站中存在的友情链接也要采用Https吗？还是说像其他博友那样采用动态跳转处理&hellip;</p>]]></content>
		</item>
		
		<item>
			<title>寻找开源rss替代方案</title>
			<link>https://fffou.com/post/161251/</link>
			<pubDate>Mon, 05 Dec 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/161251/</guid>
			<description>&lt;p&gt;第三方rss工具用了不少，但习惯使用了rss带来的便利时，像greader之类的一个个rss平台一个接一个的倒下了，留下来的又不争气，速度是一个比一个慢，我开始意识到了自己搭建一个rss的重要性，这不，国内的免费虚拟主机正好给我闲置了，开始到万能的度娘寻找开源的rss工具。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>第三方rss工具用了不少，但习惯使用了rss带来的便利时，像greader之类的一个个rss平台一个接一个的倒下了，留下来的又不争气，速度是一个比一个慢，我开始意识到了自己搭建一个rss的重要性，这不，国内的免费虚拟主机正好给我闲置了，开始到万能的度娘寻找开源的rss工具。</p>

<p>很快的就找到了一个叫<font color=#FD5E02>tiny tiny rss</font>的工具，中文名貌似叫微聚来着，据说是greader的代替者，无奈官网被和谐了，伟大的八朝还有什么是你们不能和谐的，闲话不多说，扶着梯子上墙下载了文件。呵呵，还挺小的，只有1.5mb左右。安装 Tiny Tiny RSS需要一个 PHP(&gt;=5.3) 空间和 MySQL 数据库，一般虚拟主机都具备这些。
利用ftp工具很快的上传到了阿里云的虚拟主机，果断访问 我的域名/install.php，设置基本的数据库，默认用户是admin（不可删除）和程序给出的默认密码（可以修改）。很快就安装好了。
有中文但是翻译不完整，官网论坛有人放出了中文语言包，只是版本差距太大，不知道能否用得上</p>

<p>支持标题和内容的搜索（太强大了）、导入导出rss源、文章加星、文章存档、最近阅读、查看已发布文章等，阅读可以选择全文或者列表，标记功能也很实用，最为强大的是Tiny Tiny RSS可以自定义RSS更新时间甚至每一个rss的独立更新时间，也可以手动立即更新，更快地获取信息。更为重要的是全站Ajax，阅读起来非常舒服。</p>

<p>进入设置界面，手工添加rss源，小圆圈开始转动慢慢更新文章，速度是有点慢，况且是国内的虚拟主机，难以想象香港和美国那边主机速度的酸爽。</p>

<h3 id="font-color-fd5e02-界面-font"><font color=#FD5E02>界面</font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7e5kjgkj211v0hwdl3.jpg" alt="jiemian1" /></p>

<h3 id="font-color-fd5e02-rss单独设置更新时间-font"><font color=#FD5E02>Rss单独设置更新时间</font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7e6aeccj211x0i0n0s.jpg" alt="jiemian2" /></p>

<h3 id="font-color-fd5e02-支持文章标记-font"><font color=#FD5E02>支持文章标记</font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7e7b9n3j211p0h6te7.jpg" alt="jiemian3" /></p>

<h3 id="font-color-fd5e02-查看最近阅读文章-font"><font color=#FD5E02>查看最近阅读文章</font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7e7ls84j20hy0bg0uy.jpg" alt="jiemian4" /></p>

<h3 id="font-color-fd5e02-rss列表显示-font"><font color=#FD5E02>Rss列表显示</font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7e7cco5j20q90cg77a.jpg" alt="jiemian5" /></p>

<h3 id="font-color-fd5e02-文章标星-font"><font color=#FD5E02>文章标星</font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7e8vtzfj20c007v3zk.jpg" alt="jiemian6" /></p>

<h3 id="font-color-fd5e02-支持快捷键和ajax-font"><font color=#FD5E02>支持快捷键和Ajax</font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7e9lfnvj20lf0exwha.jpg" alt="jiemian7" /></p>

<h3 id="font-color-fd5e02-强大的搜索功能-font"><font color=#FD5E02>强大的搜索功能</font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7ea3605j20kv06mmy6.jpg" alt="jiemian8" /></p>

<h3 id="font-color-fd5e02-时间日期和启动客户端api支持-font"><font color=#FD5E02>时间日期和启动客户端api支持</font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7eb7kasj20p8077myu.jpg" alt="jiemian9" /></p>

<h3 id="font-color-fd5e02-设置界面-font"><font color=#FD5E02>设置界面</font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7grkm49j20ya0aldiv.jpg" alt="jiemian10" /></p>

<h3 id="font-color-fd5e02-支持多用户-font"><font color=#FD5E02>支持多用户</font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7gsk87bj210z06qdhg.jpg" alt="jiemian11" /></p>

<p>设置自动更新:在config.php中将SIMPLE_UPDATE_MODE设置为true ，这样每次打开Tiny Tiny RSS 就可以开始更新RSS订阅了(需要虚拟主机/vps支持计划任务，垃圾的阿里云不支持只能无爱了)。</p>

<p>关于移动客户端提供了安卓和ios的，只是ios据说是收费软件。</p>

<h3 id="font-color-fd5e02-移动客户端主界面-font"><font color=#FD5E02>移动客户端主界面</font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7gmos7wj20k00zkteu.jpg" alt="" /></p>

<h3 id="font-color-fd5e02-客户端设置选项-font"><font color=#FD5E02>客户端设置选项</font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7gnmkbbj20k00zk76o.jpg" alt="" /></p>

<h3 id="font-color-fd5e02-订阅列表-font-font"><font color=#FD5E02>订阅列表</font></font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7go67zrj20k00zkwgs.jpg" alt="" /></p>

<h3 id="font-color-fd5e02-文章概览-font"><font color=#FD5E02>文章概览</font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7gou9q4j20k00zkgt8.jpg" alt="" /></p>

<h3 id="font-color-fd5e02-界面-font-1"><font color=#FD5E02>界面</font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7gp1q4hj20k00zkwgr.jpg" alt="" /></p>

<h3 id="font-color-fd5e02-文章排序-font"><font color=#FD5E02>文章排序</font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7gq97cwj20k00zkdje.jpg" alt="" /></p>

<h3 id="font-color-fd5e02-功能不强的离线文章-font"><font color=#FD5E02>功能不强的离线文章</font></h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1faf7gr1icaj20k00zkjtf.jpg" alt="" /></p>

<h3 id="font-color-fd5e02-遇到的bug和缺陷-font"><font color=#FD5E02>遇到的bug和缺陷：</font></h3>

<ol>
<li>手机客户端无法显示完整的rss订阅列表，一开始订阅了某狼的博客，手机端却死活不能显示出来，试着手动添加却提示这个博客已经订阅，无语 。。。</li>
<li>因为阿里云的虚拟主机不支持定时任务，所以更新订阅只能手动更新，有时忘了手动更新，手机客户端显示完已经更新的博文，接着显示较旧的博文，有些已经是六月份的博文也tmd显示出来，可见主机能支持定时任务有多重要</li>
<li>VPS及很少一部分虚拟主机可以用 Cron 控制更新</li>
</ol>

<h3 id="font-color-fd5e02-优点-font"><font color=#FD5E02>优点：</font></h3>

<ol>
<li>由于主机限制虽说手动更新麻烦了点，但是却免了一个个博客手动访问的麻烦，聚合在一起阅读确实省了一些力气个时间，有胜于无</li>
<li>支持已阅读选项，避免了重复阅读</li>
<li>类似greader的操作方式，阅读博文更有条理</li>
<li>自己的订阅自己说了算，安全放心</li>
<li>支持导入OPML（必须滴）</li>
</ol>

<p><font color=#FD5E02>开始在度娘找一款开源RSS，接着折腾，后续会跟上本文&hellip;.</font></p>]]></content>
		</item>
		
		<item>
			<title>用otg连着手机发表博文</title>
			<link>https://fffou.com/post/1611211/</link>
			<pubDate>Mon, 21 Nov 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/1611211/</guid>
			<description>&lt;p&gt;最近把家里得宽带升级到百兆，因为是三个人合租的，升级后发现网速慢的打不开，想想可能是那两个家伙看高清视频吧。昨晚到了夜半的时候用测速软件测速也就20来兆左右，现在仔细想想还真可能是路由器和光猫的问题，等有空再升级下这两个装备，提升下体验。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>最近把家里得宽带升级到百兆，因为是三个人合租的，升级后发现网速慢的打不开，想想可能是那两个家伙看高清视频吧。昨晚到了夜半的时候用测速软件测速也就20来兆左右，现在仔细想想还真可能是路由器和光猫的问题，等有空再升级下这两个装备，提升下体验。</p>

<p>因为这两晚网速慢的让人头脑发麻，打开电脑连发表波问的想法都失去耐心了，看到桌上放了许久没用的otg线，突然想到了连接手机发表博文的想法，这篇文章都是用这种方式发表的，键盘码子的快感果然是比点击屏幕上千百倍</p>

<h3 id="关于邮件提醒">关于邮件提醒</h3>

<p>最近启用的typecho的邮件提醒插件commmail，用的是2.0的版本，但是遇到了一些问题，因为之前用的是多说的评论系统，知道前一阵时间才发现数据的重要性，所以启用了博客自带的评论系统。因为多说是自带邮件提醒和垃圾评论过滤的功能的，也就是说启动了自带的评论系统就要想方设法实现邮件提醒和垃圾评论过滤的功能。</p>

<p>### 邮件提醒的需要条件</p>

<p>1.稳定的邮箱：企业邮箱</p>

<p>前段时间看到腾讯的企业邮箱搞活动，貌似对于个人站长是免费的，所以果断是启用的了免费的企业邮箱，并在博客启用了上段中说的邮件提醒插件，这个版本中是提供测试发信的功能，然而我在测试中也都发现了一些问题，就是说用自己的邮箱发信是正确的，也都能收到邮件，唯独发送到别人的邮箱是看不不到是否发送成功的，即便进入邮箱的管理界面也都找不到是否发送成功的提醒。</p>

<p>2.稳定的空间，最好是vps</p>

<p>因为我的博客用的是虚拟主机，因为这次邮件提醒插件除了一些小小的故障，也都不敢确定其中的失败因素，突然想到是不是自己的网站空间采用的环境不一样导致的，当然这值得我的猜想，也许真像我所说的那样缺少其中所需的依赖关系呢。</p>]]></content>
		</item>
		
		<item>
			<title>博客出现大量全英文评论</title>
			<link>https://fffou.com/post/1611181/</link>
			<pubDate>Fri, 18 Nov 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/1611181/</guid>
			<description>&lt;p&gt;前天打开博客突然发现很多未审核的评论，看了一下都是“全英文“的评论，我想莫非我的博客吸引了外国的访客。带着好奇的心仔细看了每一条博客评论，发现并不能看懂，每一条评论的昵称和网址也都不一样，复制到搜索引擎却也无法翻译。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>前天打开博客突然发现很多未审核的评论，看了一下都是“全英文“的评论，我想莫非我的博客吸引了外国的访客。带着好奇的心仔细看了每一条博客评论，发现并不能看懂，每一条评论的昵称和网址也都不一样，复制到搜索引擎却也无法翻译。</p>

<p>回头又仔细的看了每一篇文章，发现每篇文章都带有两三条这样的评论，确定了这可能是爬虫类的程序，想着这个程序光顾我网站一次应该不会回来了，文章也都不多，就手工删除了。</p>

<h3 id="全英文评论出现的原因">全英文评论出现的原因</h3>

<p>昨天再次打开自己的博客，发现又出现不同的评论，还变本加厉了，每篇文章都会留有五六条这样的评论，这次把我惹生气了。去度娘了一下，还真发现了一篇文章说这个的。大概意思就是国外seo做外链的一种方法，比如这样一个英文评论：Ppl like you get all the brains，他读起来是完整的一句话，但是他的外链说法就是，比如利用xx.com的网址就是这样的：xx.com/pll-like-you-get-all-the-brains，这样也等于是在发外链了。再比如中文的拼音”网站建设“，评论的时候就写wangzhanjianshe，这样连起来就是www.xx.com/wang-zhan-jian-she这样子。</p>

<h3 id="robots-txt">Robots.txt</h3>

<p>回到博客看了评论内容和对应的网址还真的是上面描述的那种类型，想想可能真的是这个原因，这个网站从建站开始Robots.txt就默认只被Google、Bing和Yahoo擎引到，也或者是所谓的爬虫借助博客的评论机制，通过获取可以正常访问的博客，然后进行群发的。果断的进入博客后台查看每一个评论的ip，发现都是188.143.234.*和188.143.232.*这两种来自俄罗斯的ip段，邮箱也都是Yahoo的，第一时间的屏蔽了这两个ip段并把这些垃圾评论删除。</p>

<p>今天回来看看这些”全英文“的评论没有再出现，看来自己的抗争已有了一些效果，因为评论是雅虎邮箱，所以需要再观察一段时间会不会再出现这些垃圾评论，若再出现的话，就可能是爬虫通过Google这些国外的搜索进入进来的，就只能把这些搜索给屏蔽了&hellip;.</p>]]></content>
		</item>
		
		<item>
			<title>网盘终结时代，自买硬盘是最保险出路</title>
			<link>https://fffou.com/post/161191/</link>
			<pubDate>Wed, 09 Nov 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/161191/</guid>
			<description>&lt;p&gt;最近有许久没更新博客，看看最近的新闻，所谓的王八朝发生了太多的事情。数字云盘出于所谓的“社会责任”关掉了自己的个人云端存储业务&amp;hellip;&amp;hellip;&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>最近有许久没更新博客，看看最近的新闻，所谓的王八朝发生了太多的事情。数字云盘出于所谓的“社会责任”关掉了自己的个人云端存储业务&hellip;&hellip;</p>

<h3 id="自买硬盘备份网盘数据">自买硬盘备份网盘数据</h3>

<p>这些发生的事情，我的自觉最近硬盘会涨价，更加惊惧毒盘会走数字的老路，虽然中途看到了太多的关于现在的硬盘质量太差的负面信息，怀着忐忑的心首先下手了希捷的2TB台式机械硬盘（469软妹），紧接着买了易驱线（80软妹）并开通了毒盘的超级vip（20多软妹），把家里的电信宽带从20m升级到100m，把硬盘通过易驱线接到笔记本开启了24h不间断全速下载。直到五天后硬盘容量告急后，又心血来潮的入手了3Tb(619软妹)的希捷台式硬盘，才把毒盘的数据搬回家。</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f9mbsq75uoj20go0m8wfo.jpg" alt="disk1" /></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f9mbsqtu66j20m80godh9.jpg" alt="disk2" /></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f9mbsraynmj20m80goq47.jpg" alt="易驱线" /></p>

<h3 id="更换域名">更换域名</h3>

<p>博客从takeman.cn切换到了tttuo.com，其实本人没有切换米的意愿，takeman是我从初中使用到现在的网名，无奈的com米给美国的hugedomains该买下了，hugedomains最喜欢做的事情就是抢快到期或者过期的米并高价售卖，即便是烂米也能给其标出不可思议的价格，1995刀的价格也是不可思议的，从13年一直盼着这个米忘记续费，结果不但在米在快过期前几天自动续费，价格也从未降低分毫，无奈只能在失望下选择了cn米，出于人人可知的原因只能半将半就的用到了现在。</p>

<p>个人喜爱开源自由，所以用了两年国外主机，中途误信过所谓的主机测评之类网站，入手过bluehost之类的主机，最终在速度以及人人可知的因素影响下，试着安慰自己选择了八朝主机并备了案，自从那以后感觉做任何事情开始有了“分寸”，也都成熟了许多，开始学会了“什么该说，什么是只能放心里的”，最终觉得违背了自己的初衷，好吧我承认一开始只是为了用cdn之类的加速服务，却让我对这个米彻底失去了最初的热情，只能沦落到为外围网站进行八朝加速服务。等免费主机结束后（备案掉了后），如果绑定七牛的米掉下来的话，就为cn米找一个八朝最便宜的支持备案的空间，一切是为了cdn之类的服务。
<img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f9mbssdxfaj211y0hx77g.jpg" alt="qiniu" /></p>

<h3 id="https-https的转变">https=&gt;&gt;https的转变</h3>

<p>既然从大局域网回到了世界，也从所谓的红色世界出来，我想我首先会让挂在头顶上的摄像头瞎了眼，也是为了更加良好的浏览体验，为了解决一些运营商会在网页强行安插广告，采用ssl这是必须做的事情。
<img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f9mbxpzgzej211c0jfwht.jpg" alt="httpss" /></p>

<h3 id="以后再不用阿里云dns">以后再不用阿里云Dns</h3>

<p>之前以为阿里云实力雄厚，自从前几天把域名重新切换回阿里云dns解析后，说好的最长48小时解析生效，以为只是提示不足为意，结果等的我以为网站除了问题。所谓的阿里云虚拟主机，通过ftp上传的网页并不能实时生效，总要等过最长几天才能反应过来，即便是cdn缓存也未遇到这种感人的反应速度，这就是所谓阿里系产品稳定可靠的口碑来源？
<img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f9mbsq9donj20gs08974k.jpg" alt="dns" /></p>]]></content>
		</item>
		
		<item>
			<title>miui8 精简应用列表</title>
			<link>https://fffou.com/post/1610171/</link>
			<pubDate>Mon, 17 Oct 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/1610171/</guid>
			<description>&lt;p&gt;国内安卓rom众多，其中最为出色的就是miui和flyme。本人最近把吃尘的小米2s升级到最新的miui8，发现广告众多，果然miui已经成为名副其实的adui，幸亏本人动手能力强，经实践一个早上得以去广告成功，采用的hosts屏蔽广告的方式。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>国内安卓rom众多，其中最为出色的就是miui和flyme。本人最近把吃尘的小米2s升级到最新的miui8，发现广告众多，果然miui已经成为名副其实的adui，幸亏本人动手能力强，经实践一个早上得以去广告成功，采用的hosts屏蔽广告的方式。</p>

<h2 id="精简应用">精简应用</h2>

<h3 id="font-color-fd5e02-步骤-font"><font color=#FD5E02>步骤</font></h3>

<ol>
<li>首先让自己的小米设备刷成miui的开发板<br /></li>
<li>选择一个支持root浏览的文件管理器(如x-porer),并开启超级用户模式<br /></li>
<li>在miui的安全中心，进入授权管理，并允许文件管理器的root权限<br /></li>
<li>精简系统应用：</li>
</ol>

<p><font color=#FD5E02>system/app</font></p>

<p>AnalyticsCore.apk 未知，可删<br />
AntHalService.apk 天线有关，可删<br />
AntiSpam.apk 骚扰拦截，不建议删；删后安全中心的骚扰拦截功能无法使用<br />
ApplicationsProvider.apk 搜索应用提供程序，可删<br />
BaiduNetworkLocation.apk 百度网络定位，可删，基本不影响定位<br />
BasicDreams.apk 基本互动屏保，可删<br />
Bluetooth.apk 蓝牙，不用的人可删除<br />
BrowserProviderProxy.apk 系统自带浏览器插件，可删除<br />
BugReport.apk 用户反馈，可删除<br />
Calculator.apk 计算器，可删除<br />
CellBroadcastReceiver.apk 小区广播，可删除<br />
CertInstaller.apk 证书安装器，可删除，国内很少用到<br />
Cit.apk 硬件检测器，可删，删除后工程模式不可用<br />
CloudService.apk 小米云服务，可删（耗电耗内存，不用云服务，强烈建议删）<br />
DeskClock.apk 时钟，可删，很好用的时钟，没有人会删除的吧<br />
DMService.apk 未知<br />
DocumentsUI.apk 文档，可删，删除后没有影响<br />
DownloadProviderUi.apk 下载管理，可删，删除之后下载管理器没有了，本人从来不用过<br />
Email.apk 邮件，可删<br />
fastdormancy.apk 快速休眠，可删<br />
FileExplorer.apk 文件管理器，可删，删除之后不能在桌面通过选择安装包重装系统，我都是通过Recovery刷官方包升级的。<br />
FM.apk 收音机，可删除<br />
Galaxy4.apk 黑洞（动态壁纸），没有啥子用的，删除<br />
GameCenter.apk 游戏中心，删除<br />
GPStestSvc.apk GPS卫星服务，不建议删除，删除后不能导航<br />
GuardProvider.apk 病毒扫描，可删（耗电耗内存，强烈建议删，对于还要用360的，只能呵呵）<br />
HoloSpiralWallpaper.apk 动态光环壁纸，删除吧<br />
HTMLViewer.apk 删除吧<br />
ims.apk 未知<br />
InCallUI.apk 来电界面，不能删除<br />
InterfacePermissions.apk 未知，对于强迫症的人来，删除了也没有什么影响<br />
KeyChain.apk 密码链，不可删除<br />
KingSoftCleaner.apk 金山清理器，可删（耗电耗内存，强烈建议删，没事不要老清理缓存）
LiveWallpapers.apk 动态壁纸，删，删<br />
LiveWallpapersPicker.apk 动态壁纸，删，删<br />
MagicSmokeWallpapers.apk 烟雾壁纸，删，删<br />
matcli.apk 未知<br />
MiAssistant.apk 小米助手，删，删<br />
MiLinkService.apk 联播服务，删，删<br />
Mipay.apk 钱包，删，删<br />
miui.apk MIUI SDK，不能删，会卡米（可冻结）<br />
MiuiCompass.apk 指南针，可删<br />
MiuiSuperMarket.apk 商店，不能删，卡米（耗电耗内存，必须得冻结）<br />
miuisystem.apk 系统程序，不能删<br />
MiuiVideo.apk 视频，可删<br />
MiWallpaper.apk 小米壁纸，未知<br />
NetworkAssistant2.apk 网络助手，可删（想要省电，这个不能删，还要靠它来禁止程序后台联网）<br />
Nfc.apk NFC，删除<br />
NoiseField.apk 泡泡壁纸，删，删<br />
Notes.apk 便签，删除<br />
NVItem.apk 未知<br />
PackageInstaller.apk 软件安装器，不能删<br />
PacProcessor.apk 未知<br />
PaymentService.apk 米币支付，删除<br />
PhaseBeam.apk 镭光壁纸，删，删<br />
PhotoTable.apk 照片管理，可删除<br />
PicoTts.apk TTS语音，可删除<br />
PowerKeeper.apk MIUI7新的神隐模式，可删除（实测没有什么效果，当然未精简的人有用）<br />
PrintSpooler.apk 打印服务，删除<br />
Provision.apk 不建议删除，删除后双清之后会导致按键异常<br />
QComQMIPermissions.apk 未知，对于强迫症的人来，删除了也没有什么影响<br />
qcrilmsgtunnel.apk 未知<br />
QuickSearchBox.apk 搜索引擎，删，删<br />
shutdownlistener.apk 未知<br />
SoundRecorder.apk 录音机，可删<br />
Stk.apk SIM工具包，可删除<br />
SVIService.apk 未知<br />
SystemAdSolution.apk 系统广告服务，删，删<br />
TelephonyProvider.apk 系统程序，不能删<br />
ThemeManager.apk 主题（耗电耗内存，不用主题的人强烈建议删除，我通过桌面更换壁纸）<br />
TimeService.apk 时间服务有关，强迫症的人可删<br />
TrafficControl.apk 流量节省（耗电耗内存，强烈建议删除，实测没有什么卵用）<br />
TSMClient.apk 删除吧<br />
Updater.apk 系统升级，不能删，会卡米（耗电耗内存，必须冻结），我都是通过Recovery刷官方包升级的，把官方完整包改名为update.zip，放到根目录即可，安全可靠。<br />
UserDictionaryProvider.apk 用户词典，可删除<br />
VirtualSim.apk 虚拟SIM卡，可删除<br />
VisualizationWallpapers.apk 可视化壁纸，删除<br />
VoiceAssist.apk 语音助手，删除<br />
WAPPushManager.apk 信息推送，删除<br />
WfdService.apk 未知<br />
Whetstone.apk 未知，占进程，删除没有影响<br />
XiaomiAccount.apk 小米帐号，删除<br />
XiaomiServiceFramework.apk 小米服务框架（耗电耗内存，删除之，不用小米服务）<br />
XiaomiVip.apk 小米VIP,删除吧<br />
XMPass.apk 小米卡包，删除吧</p>

<p><font color=#FD5E02>system/priv-app:</font></p>

<p>AuthManager.apk 授权管理，不能删除<br />
Backup.apk 系统备份，可删除<br />
BackupRestoreConfirmation.apk 备份服务，可删除<br />
BarcodeScanner.apk 二维码，可删除<br />
Browser.apk 系统自带浏览器，删除<br />
Calendar.apk 日历，可删除<br />
CalendarProvider.apk 日历支持服务，可删除<br />
CleanMaster.apk 垃圾清理器，可删（耗电耗内存，强烈建议删，没事不要老清理缓存）<br />
CloudBackup.apk 云恢复，删除<br />
com.qualcomm.location.apk 高通服务，不建议删除<br />
com.qualcomm.msapm.apk 高能服务，不建议删除<br />
Contacts.apk 系统拨号器，你不会也想删除吧，用第三方的真的可以删除<br />
ContactsProvider.apk 系统自带程序，不能删除<br />
DefaultContainerService.apk 系统自带程序，不能删除<br />
DownloadProvider.apk 下载管理服务，可删除<br />
ExternalStorageProvider.apk 外部存储管理，不建议删除<br />
FusedLocation.apk 一体化位置信息，不建议删除<br />
GooglePinyinIME.apk 谷歌拼音，删除<br />
InputDevices.apk 输入设备，不建议删除<br />
MediaProvider.apk 系统自带程序，不能删除<br />
MiGameCenterSDKService.apk 游戏插件，删除<br />
Mipub.apk 信息管理，删除，没有什么用的东西<br />
MiuiCamera.apk 照相机，你自己看着办<br />
MiuiGallery.apk 图库，删除，快图最好用<br />
MiuiHome.apk 小米桌面，你不会想删吧，不喜欢MIUI用第三方的还真可以删除了<br />
MiuiKeyguard.apk 系统自带程序，不能删除<br />
MiuiRadio.apk 电台，要网络的，删除<br />
MiuiSystemUI.apk 系统自带程序，不能删除<br />
MiuiVoip.apk 网络电话，删除<br />
Mms.apk 短信，第三方的可砍掉<br />
Music.apk 音乐，删除，天天动听的飘过<br />
MusicFX.apk 音效，删除<br />
OneTimeInitializer.apk 一次性设置，强迫症的童鞋可删除<br />
ProxyHandler.apk 未知<br />
SecurityCenter.apk 安全中心，不可删除<br />
Settings.apk 系统自带程序，不能删除<br />
SettingsProvider.apk 系统自带程序，不能删除<br />
SharedStorageBackup.apk 存储共享，可删除<br />
Shell.apk 未知<br />
SmartcardService.apk 未知，不建议删除<br />
Tag.apk 删除吧<br />
TeleService.apk 系统自带程序，不能删除<br />
VpnDialogs.apk VPN，可删除<br />
WallpaperCropper.apk 壁纸设置，不建议删除<br />
Weather.apk 天气（耗电耗内存，强烈建议删除，你要看天气，不会打开浏览器啊）<br />
WeatherProvider.apk 天气服务，删除<br />
YellowPage.apk 黄页，拨号切换到黄页会FC（耗电耗内存，建议删除，影响不大）</p>

<h3 id="通过hosts屏蔽广告">通过hosts屏蔽广告</h3>

<ol>
<li><p>通过抓包软件抓取广告对应的hosts</p></li>

<li><p>复制抓取的hosts，并编辑添加到/system/etc/hosts文件，并更改该文件的权限为644</p></li>

<li><p>重启手机，你的手机即刻清静了。如有未过滤的广告，请到系统设置清除该软件的缓存和数据</p></li>

<li><p>通过hosts方式还可以屏蔽系统更新，有动手能力的，可以试一下这个方法</p></li>
</ol>]]></content>
		</item>
		
		<item>
			<title>是的，我要学会拒绝</title>
			<link>https://fffou.com/post/261031/</link>
			<pubDate>Mon, 03 Oct 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/261031/</guid>
			<description>&lt;p&gt;从小我们就像鸭子一样填输大量垃圾而无用的想法，我想我们并没有从中学会什么有用的东西，相反的是我们开始从长大中学会了抱怨，也许是我们从一开始没学会拒绝，这让我们的境地处于被动的状态。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>从小我们就像鸭子一样填输大量垃圾而无用的想法，我想我们并没有从中学会什么有用的东西，相反的是我们开始从长大中学会了抱怨，也许是我们从一开始没学会拒绝，这让我们的境地处于被动的状态。</p>

<h3 id="琐碎">琐碎</h3>

<p>然而从两天前发生的事情我明白，我要学会拒绝一些东西，观念，以及来自外在的想法。道德绑架不应该成为放弃拒绝的理由，拒绝不想要的，这才是我自己，才是我该要的生活&hellip;</p>]]></content>
		</item>
		
		<item>
			<title>莫名的生气</title>
			<link>https://fffou.com/post/161021/</link>
			<pubDate>Sun, 02 Oct 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/161021/</guid>
			<description>&lt;p&gt;国庆只是放一天假本是嫉妒郁闷的事情了，今天下午回来的我看到床就忍不住爬上去，在不知不觉中慢慢中睡着了。也不知过了多久，老妹拿起手机叫我接听电话，只听老妈几句话，就怒火从心中发出&amp;hellip;&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>国庆只是放一天假本是嫉妒郁闷的事情了，今天下午回来的我看到床就忍不住爬上去，在不知不觉中慢慢中睡着了。也不知过了多久，老妹拿起手机叫我接听电话，只听老妈几句话，就怒火从心中发出&hellip;</p>

<h3 id="事情前">事情前</h3>

<p>几天前，父母给我相了一个女孩，把我联系方式透露给对方，当然这是未经过和我商量的，听到事情的我愤怒的跟他们争执起来，没多久我还是败下阵来。于是对方的联系方式（微信，扣扣之类的）也都发了过来，而我只是把这些东西晾在我的聊天列表里，一直不想去理会&hellip;</p>

<h3 id="事情中">事情中</h3>

<p>今晚还在熟睡中的我，突然接到父母的电话，说是已经为我准备好了双方见面，本就心情郁闷的我在也压抑不住心中的怒火再次跟他们争执起来，首先我就觉得他们审美的眼光出了问题，具体的也不想多说。身为父母从小到大几乎没有事情经我同意，也不愿意倾听我的意见，虽说很生气，最后在其威逼利诱和好说歹说下，勉强同意明天请个假回家相&rdquo;亲&rdquo;&hellip;</p>

<h3 id="事情">事情&hellip;</h3>

<p>此刻，只希望这件事情平静的过去；也都不想再发生这样的事情，这是我今晚对他们说的话&hellip;明天的事情谁又会知道什么结果呢&hellip;</p>]]></content>
		</item>
		
		<item>
			<title>爱尔兰哨笛</title>
			<link>https://fffou.com/post/169221/</link>
			<pubDate>Thu, 22 Sep 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/169221/</guid>
			<description>&lt;p&gt;最近很忙，也很懒。我告诉自己要好好提高自己的情操了，让自己内涵一点，所以对乐器产生了一点兴趣。本人是乐器盲，虽说对乐理知识一无所知，但还是想选个个性且的乐器，这样才能更好的装B&amp;hellip;&amp;hellip;&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>最近很忙，也很懒。我告诉自己要好好提高自己的情操了，让自己内涵一点，所以对乐器产生了一点兴趣。本人是乐器盲，虽说对乐理知识一无所知，但还是想选个个性且的乐器，这样才能更好的装B&hellip;&hellip;</p>

<h3 id="选乐器">选乐器</h3>

<p>我对乐器并不高的要求，一是简单，而是个性，三是冷门，这样才能才众人当人引人侧目。经过一个晚上的仔细查找，看上了国内的埙和来自爱尔兰的哨笛。</p>

<h3 id="埙">埙</h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f82qgskplaj20af0dwt8y.jpg" alt="埙1" /></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f82qgsy5hmj20dw0afjs6.jpg" alt="埙2" /></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f82qgrgta3j20nu0frgmf.jpg" alt="埙3" /></p>

<p>据说埙最早来自于商周时期，几十软妹币也都不算太贵，也都足够古老，由于一下原因我最终还是选择了爱尔兰哨笛。
###
<img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f82qgpjkhsj20fa0famxe.jpg" alt="哨笛1" /></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f82qgq8xwvj20g40aqaal.jpg" alt="哨笛2" /></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f82qgr46u1j20g40aqwfd.jpg" alt="哨笛3" /></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f82qgpbmj0j21kw16on9a.jpg" alt="哨笛4" /></p>

<h3 id="选爱尔兰哨笛原因">选爱尔兰哨笛原因</h3>

<ol>
<li>爱尔兰哨笛不会像埙那样容易打碎.</li>
<li>它源自国内的萧笛，更短小，但更方便携带.</li>
<li>比起国内的笛子，爱尔兰哨笛对气息的要求更低.</li>
<li>国内这个乐器比较小众.</li>
<li><font color=#FD5E02>泰坦尼克号的伴奏</font>就是这个吹的,表演一定特有逼格.</li>
</ol>]]></content>
		</item>
		
		<item>
			<title>乌龙事件</title>
			<link>https://fffou.com/post/16971/</link>
			<pubDate>Wed, 07 Sep 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/16971/</guid>
			<description>&lt;p&gt;今天公司徐总来部门视察，我知道这个人喜欢鸡蛋里挑骨头，脾气火爆，发起怒来方圆100m听到不成问题。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>今天公司徐总来部门视察，我知道这个人喜欢鸡蛋里挑骨头，脾气火爆，发起怒来方圆100m听到不成问题。</p>

<h3 id="过程">过程</h3>

<p>而我在早上就已经早早的把自己的事情处理好，我只能一个人无聊的打发时间。然而看到这个人过来，手中偷闲的我只能借机离开我所在的部门，“躲到”了楼上厕所玩起了手机。不多久，门外响起了声音，因为当时外面很吵，听不清楚说话内容，大概是“老X,徐总找你”,我在想“完蛋了”，所以急忙回应“好的，我马上下去”的，没多久就下去了。却看到我那同事被骂的魂飞天外,甚至老总指着他的鼻子说：“连我都敢骗，你完蛋了$#^$&amp;&amp;@^”(大约骂了半个小时有余)</p>

<h3 id="解密">解密</h3>

<p>然而事情真相是,老总要找我部门的组长，久等不见人影下发怒了。我那同事见事情不妙，慌忙中借口：“组长可能去楼上洗手间了，我叫他下来”，因为组长和我名字有个音是相同的，因为我在嘈杂的环境下听觉错误，so答应了，结果后面&hellip;.</p>]]></content>
		</item>
		
		<item>
			<title>关于博客音乐播放器</title>
			<link>https://fffou.com/post/16941/</link>
			<pubDate>Sun, 04 Sep 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/16941/</guid>
			<description>&lt;p&gt;今天有来访的博友进入主页，询问博客的播放器，其实这是我无意间来到了原作者32MB的博客看到的音乐插件，喜不胜喜之下添加到了本博客。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>今天有来访的博友进入主页，询问博客的播放器，其实这是我无意间来到了原作者32MB的博客看到的音乐插件，喜不胜喜之下添加到了本博客。</p>

<h3 id="typecho音乐插件qplayer">typecho音乐插件QPlayer</h3>

<p>QPlayer是一款简洁小巧的Typecho底部悬浮音乐播放器插件. 支持网易云音乐解析。</p>

<p>界面；</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f7i0l7994rj208a0a33yr.jpg" alt="QPlayer" /></p>

<h3 id="使用方法">使用方法</h3>

<p><a href="https://link.fffou.com/go/QPlayer-Typecho-Plugin/">下载插件</a>, 解压，将 QPlayer-Typecho-Plugin-master 重命名为 QPlayer ，之后上传到你博客中的 /usr/plugins 目录，在后台启用即可</p>

<p>插件后台配置歌曲格式:</p>

<p>{title:&ldquo;xxx&rdquo;, artist:&ldquo;xxx&rdquo;, cover:&ldquo;http:xxxx&rdquo;, mp3:&ldquo;http:xxxx&rdquo;} ，每个歌曲之间用英文,隔开。 请保证歌曲列表里至少有一首歌！
<img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f7i0l8dev0j20n704tmxn.jpg" alt="settings" /></p>

<h3 id="博客如何进入网易云音乐解析页面">博客如何进入网易云音乐解析页面</h3>

<p>安装插件后，然后到复制网易云音乐的音乐ID，进入http://你的域名/usr/plugins/TPlayer/IDExplain.php，再解析页面进行解析即可。</p>

<p>更多详细说明请参见插件后台。</p>

<h3 id="添加网易云音乐-需主机支持curl扩展">添加网易云音乐(需主机支持curl扩展)</h3>

<p>去网易云音乐官网找到音乐id,支持单曲|艺人|专辑|歌单类型的id解析，billboard等排行榜也支持(实质就是歌单)。</p>

<h3 id="关于音乐断停问题">关于音乐断停问题</h3>

<p>一些用此插件的博主发现进入别的页面，音乐就要重新播放，我建议这些博主换一款支持PJAX的博客主题(需要将插件设置界面开启jQuery加载)或自行在博客加入PJAX来实现跨页面播放音乐PJAX(需要将插件设置界面开启jQuery加载)，实现无刷新加载网页</p>

<h3 id="qplayer插件wordpress版本">QPlayer插件wordpress版本</h3>

<p>WordPress 版:
<a href="https://link.fffou.com/go/QPlayer-WordPress-Plugin/">QPlayer-WordPress-Plugin</a></p>

<p>Typecho 版：
<a href="https://link.fffou.com/go/QPlayer-Typecho-Plugin/">QPlayer-Typecho-Plugin</a></p>]]></content>
		</item>
		
		<item>
			<title>世界好小，巧事多遇</title>
			<link>https://fffou.com/post/168212/</link>
			<pubDate>Sun, 21 Aug 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/168212/</guid>
			<description>&lt;p&gt;又到了一个星期的周末，和我的亲房勇哥约好的时间又到了，今天我照常给勇哥通了一个电话就赶往他的家里准备学点东西。嘀嘀打车直到火车站并转51路公交路线，在车上的我玩着手机以消磨路上的无聊时间。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>又到了一个星期的周末，和我的亲房勇哥约好的时间又到了，今天我照常给勇哥通了一个电话就赶往他的家里准备学点东西。嘀嘀打车直到火车站并转51路公交路线，在车上的我玩着手机以消磨路上的无聊时间。</p>

<h3 id="就是那么巧">就是那么巧</h3>

<p>因为是起始站上的车，所以跟我一起上车的人我记得清清楚楚。一个阿伯和两个大婶及一个中年妇女，记得行驶到一个站点，那个阿婶就开始询问中年妇女来自哪里，我听到了属于我的那个县城，耳朵不由得升直起来并开始测听。没多久那个大叔也开始感兴趣起来，并说了他所在的小镇，没想到竟然跟我是一样来自那个小镇，我来了兴趣：“阿伯，你是那个镇的哪里的？”&hellip;原来是同村的，一下子我跟阿伯就亲近起来，阿伯也没闲着，就开始询问我的长辈，我竟一下子就确认了他是我村里的英伯，毕竟小的时候爷爷和爸爸没少在我面前提起这个人。
我跟阿伯交代了我去找一个亲房，在他接连追问之下，我说出了勇哥的名字，阿伯惊呼：“那是我的儿子”。我蒙了，仔细一看还真跟勇哥有几分相似，这种丢人的事情当然不能表现出来，我赶紧拍了一下自己的脑门，做出惊讶的样子，表示怪不得长相竟如此的相近得以圆场。原来阿伯是刚从深圳回来，竟给我碰上了，后面紧接着（省略N个子）&hellip;&hellip;</p>]]></content>
		</item>
		
		<item>
			<title>吐槽阿里云虚机</title>
			<link>https://fffou.com/post/168211/</link>
			<pubDate>Sun, 21 Aug 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/168211/</guid>
			<description>&lt;p&gt;前段时间接到其他博友的留言，反应我的博客加载的时候会出现延迟现象（暂时性空白页面），因为静态博客我深知它的加载速度不会慢，所以我就没怎么在意。后面看到了阿里云的虚机空着，就想着搭建一个typecho玩玩，之前这个博客的速度我是知道的，即使是用着美国低端的虚机，依然跑的挺溜，搭建好后，却发现一些严重的问题&amp;hellip;&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>前段时间接到其他博友的留言，反应我的博客加载的时候会出现延迟现象（暂时性空白页面），因为静态博客我深知它的加载速度不会慢，所以我就没怎么在意。后面看到了阿里云的虚机空着，就想着搭建一个typecho玩玩，之前这个博客的速度我是知道的，即使是用着美国低端的虚机，依然跑的挺溜，搭建好后，却发现一些严重的问题&hellip;</p>

<h3 id="虚机更换系统后-数据切换慢">虚机更换系统后，数据切换慢</h3>

<p>因为之前虚机选择的是win的系统，而我现在要搭建的博客程序是php的，现在的系统环境并不支持的，无奈只好选择切换到linux下，系统并重新分发了：FTP、数据库等一些账号信息 ，等我把程序上传并用备用的域名测试好，发现博客依然是上一个主机的页面，一直保留了三天，中间提交几次问题也不见客服回应&hellip;看来阿里云的产品是除了稳定就剩稳定了&hellip;</p>

<h3 id="解析速度慢">解析速度慢</h3>

<p>重新更换系统后，我及时的到Dnspod去更改解析，并不久后生效，然而一直几天博客的主站都是空白页面，到”命令提示符“下ping了一下数据，显示的ip是正确的，这回我彻底怒了，后面冷静下来并仔细检查，依然发现是虚机的问题，这生效时间也太长了吧（三天甚至更久&hellip;.）</p>]]></content>
		</item>
		
		<item>
			<title>淘了一个双飞燕的键盘</title>
			<link>https://fffou.com/post/168201/</link>
			<pubDate>Sat, 20 Aug 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/168201/</guid>
			<description>&lt;p&gt;说真的笔记本的薄膜键盘，手感反馈真的不行，可能是厂商为了成本和携带方便性的考虑吧！就说我这个惠普，所说买的是办公用的商务本，然而，连基本的码字回馈和反弹的感觉都没有，显然有失“商务办公”的贤称。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>说真的笔记本的薄膜键盘，手感反馈真的不行，可能是厂商为了成本和携带方便性的考虑吧！就说我这个惠普，所说买的是办公用的商务本，然而，连基本的码字回馈和反弹的感觉都没有，显然有失“商务办公”的贤称。</p>

<h3 id="笔记本键盘">笔记本键盘</h3>

<p>这款笔记本也算属于类超极本的行列了，虽说方便携带了，但键盘手感连山寨货都不如，并且一直不习惯笔记本键盘没有数字键盘的布局（当然是我多想了），看来是时候下一个台式键盘耍耍了，不然糟糕的手感让我无法静心的码字了。</p>

<h3 id="双飞燕">双飞燕</h3>

<p>最后，在天猫看键盘看了好久，果然看评论是让人越看越迷茫的，让我不知如何选择。最后选了罗技，双飞燕，富勒这三个牌子，又觉得网吧多是用双飞燕的键盘，遂选择了双飞燕最经典的一款台式键盘，有点丑，也差不多是最便宜的，对于我这种只是打打字的玩家，希望不要让我失望了&hellip;</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6zj30syapj20by0byt8u.jpg" alt="201608201" /></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6zj308bsij20by0by759.jpg" alt="201608202" /></p>]]></content>
		</item>
		
		<item>
			<title>优秀的linux发行版-xubuntu</title>
			<link>https://fffou.com/post/168141/</link>
			<pubDate>Sun, 14 Aug 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/168141/</guid>
			<description>&lt;p&gt;大家在用win的时候，想必一部分朋友在国产软件的烦扰下，选择了开源阵营linux下，然而众多的linux发行版本，往往叫一些新手无从选择，今天我就把我最喜欢的一个发行版xubuntu推荐给大家。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>大家在用win的时候，想必一部分朋友在国产软件的烦扰下，选择了开源阵营linux下，然而众多的linux发行版本，往往叫一些新手无从选择，今天我就把我最喜欢的一个发行版xubuntu推荐给大家。</p>

<h3 id="os特点">Os特点</h3>

<p>xubuntu是基于ubuntu的一个linux发行版，搭载的桌面是xfce桌面环境，具有轻巧，灵活，操作习惯接近win的特点，适应了win系统新手也能较快的适应下来，占用资源比较低，在一些老机器面前也能较流畅的运行。</p>

<h3 id="os的困局与解决之道">Os的困局与解决之道</h3>

<p>自linux开源系统发布以来，一直在硬件以及软件支持上较win存在较大差距，随着硬件驱动的改善，使得其可以运行在越来越多的机器上，然而因为linux的开源导致碎片化严重，软件统一标准一直缺少一个标准，在应用数量和体验上与win更是相差不是一个级别，所以除了在服务器领域小有成就，其他领域还有较大的发展空间。在国内，linux在一般用户体验上缺少用户量，导致国内软件厂商并不能趋之若鹜，明者来说，linux在国内的发展压根到底就是确实本土化的服务与应用支持，直到今天随着国内爱好者和程序猿的努力，一部分软件厂商已经为linux适配了一些基本的应用，是的linux重新焕发了一线生机。</p>

<h3 id="os界面">Os界面</h3>

<p>既然前话已经开在前头，那么话不多说，就展示一下我的桌面，Os已经能达到基本的影音及轻办公要求&hellip;</p>

<h3 id="xfce桌面环境">xfce桌面环境</h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6slgcre1dj211y0lcadv.jpg" alt="desktop1" /></p>

<h3 id="网易云音乐-for-linux">网易云音乐 For linux</h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6slgi5oepj211y0lc7ak.jpg" alt="neteasy-music" /></p>

<h3 id="搜狗拼音-for-linux">搜狗拼音 For linux</h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6slgl741yj211y0lcwnb.jpg" alt="sogou-pinyin" /></p>

<h3 id="文件管理器">文件管理器</h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6sliedsogj211y0lc43u.jpg" alt="explorer" /></p>

<h3 id="图片查看器">图片查看器</h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6slgdwnc6j211y0lcahr.jpg" alt="pic-explorer" /></p>

<h3 id="chromium浏览器">chromium浏览器</h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6slg8x6dpj211y0lcn1n.jpg" alt="chromium" /></p>

<h3 id="火狐浏览器">火狐浏览器</h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6sliej2fgj211y0lc0xr.jpg" alt="firefox" /></p>

<h3 id="系统设置界面">系统设置界面</h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6slg9pumqj20gn0h70va.jpg" alt="setings" /></p>

<h3 id="终端">终端</h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6slniyhmdj211y0lcn1c.jpg" alt="Terminal" /></p>

<h3 id="邮件客户端">邮件客户端</h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6slnifzl9j211y0lc0vz.jpg" alt="thunderbird" /></p>

<h3 id="月亮播放器">月亮播放器</h3>

<p>视频播放利器-月亮播放器:可播放国内主流视频网站视频，并可下载</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6slghr8hmj20og0do0xu.jpg" alt="moonplayer" /></p>]]></content>
		</item>
		
		<item>
			<title>关于博客加载慢的问题</title>
			<link>https://fffou.com/post/168111/</link>
			<pubDate>Thu, 11 Aug 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/168111/</guid>
			<description>&lt;p&gt;最近有博友有反应本博客加载慢的问题，比如类似于框架已经加载完成，但文章却没显示出来&amp;hellip;.&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>最近有博友有反应本博客加载慢的问题，比如类似于框架已经加载完成，但文章却没显示出来&hellip;.</p>

<h3 id="原因分析">原因分析</h3>

<p>经过今晚的仔细测试，发现在本地测试是零延迟的，在线测试基本流畅，因为本博客是搭载在七牛上的(毕竟免费的)，在白天会出现延迟问题，是因为七牛的用户量太大导致并发数多，占满宽带，本博客速度由于要加载一些细小的资源文件就出现了类似出现框架的空白现象，即便是类似多说这样服务器设在海外的服务加载也略微比本站快点，而到了晚上凌晨，发现博客访问速度是飙上去了的。</p>

<h3 id="七牛-or-vps">七牛 Or VPS</h3>

<p>对于七牛导致的速度问题，目前尚无良策。换vps，又觉得用在博客上有点浪费，毕竟七牛是免费的，也就将就着用用对于七牛导致的速度问题，目前尚无良策。换vps，又觉得用在博客上有点浪费，毕竟七牛是免费的，也就将就着用用。</p>]]></content>
		</item>
		
		<item>
			<title>当你失去目标时</title>
			<link>https://fffou.com/post/168101/</link>
			<pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/168101/</guid>
			<description>&lt;p&gt;这三年，我辗转于不同的城市之间，也学会了情仇爱恋，经历了分离和重聚，然而我的状态一直处于人生的低谷之中，至少在情绪上我已经处于劣势的地步。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>这三年，我辗转于不同的城市之间，也学会了情仇爱恋，经历了分离和重聚，然而我的状态一直处于人生的低谷之中，至少在情绪上我已经处于劣势的地步。</p>

<h3 id="奔赴广州">奔赴广州</h3>

<p>自从三年前毕业以来，开始奔赴广州，在羊城生活的第一年，我学会了接触身边形形色色的任务，才知道我眼角视线的狭窄经验随着时间呈正指数增长，后来因为一些变故，不得不离开这个看似熟悉的城市，离别时回眸发现，突然眼前的一切的都好陌生，原来我只是不够稳重和成熟。</p>

<h3 id="赴往中山">赴往中山</h3>

<p>不得不说，这个因为国父闻名的城市，刚到这的我是给震惊了的。环境和素质真不是所谓的一线城市和所谓的文明城市能比的，也许我去的地方并不全面，但是我被街角一尘不染，一粒树叶不见得干净画面给震撼到了，好吧，也许是我寡闻少见，我竟然在这个城市迷茫了整整一年&hellip;</p>

<h3 id="回家">回家</h3>

<p>直到今天的我，回到家，依然为目标迷茫者&hellip;我是不是该思考人生的意义&hellip;</p>]]></content>
		</item>
		
		<item>
			<title>你愿意在一天中花去多少的时间用来学习</title>
			<link>https://fffou.com/post/16891/</link>
			<pubDate>Tue, 09 Aug 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/16891/</guid>
			<description>&lt;p&gt;最近老爸给我来了一通电话，具体是说：我不能这样过下去，必须放弃现在的工作，去学习ps，然后往老乡那里一起经营所谓的照相馆。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>最近老爸给我来了一通电话，具体是说：我不能这样过下去，必须放弃现在的工作，去学习ps，然后往老乡那里一起经营所谓的照相馆。</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6mqye1lazj21b60vfgvz.jpg" alt="time1" /></p>

<h3 id="半桶水">半桶水</h3>

<p>其实我本想拒绝，看着老爸花白的头发竟然没有忍心开口，毕竟每一个句话可能在别人耳中是重拳一击，我竟变得沉默寡言，我知道我以前太过松散，至今只是半桶水而已，又怎么能担当重任呢？当然我只能硬着头皮去狠狠补习这些知识&hellip;.</p>

<h3 id="细思">细思</h3>

<p>想想以前在学校的时候，在宿舍打着游戏，看着电影，一直处于Pc行业的娱乐业，并乐此不彼。时间如逝，那些荒废的时光不再回来，我知道那时没在学习上多支配自己的时间，然而现在的自己又愿意挤出多少的时间用在学习上呢？也许时间就像从前到现在，从支配变成抽挤的过程，我只想说时间宝贵，请确保你的每一段时间都过得充实和珍贵&hellip;.</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6mqy42rrkj20p00p0gp7.jpg" alt="time3" /></p>]]></content>
		</item>
		
		<item>
			<title>所谓人心难测</title>
			<link>https://fffou.com/post/16881/</link>
			<pubDate>Mon, 08 Aug 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/16881/</guid>
			<description>&lt;p&gt;旧时代的社会虽说封建和传统并存，然而在与新时代的交融中发生着激烈的冲突和争斗，然而各执所见的人往往带着自己所谓“正确的立场”。人们往往忽略了在就有产物上的优点，并在无限放大缺陷的行为感到津津乐道，这种畸形的形态和意识在现在的时代处于极盛时期，人们往往在畸形的社会中迷失了自我。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>旧时代的社会虽说封建和传统并存，然而在与新时代的交融中发生着激烈的冲突和争斗，然而各执所见的人往往带着自己所谓“正确的立场”。人们往往忽略了在就有产物上的优点，并在无限放大缺陷的行为感到津津乐道，这种畸形的形态和意识在现在的时代处于极盛时期，人们往往在畸形的社会中迷失了自我。</p>

<p>渐渐的许多人开始抱怨，“以前的世道不是这样的”，“现在的人都怎么了”，&hellip;然而我们并无法忽视其中的错误，但我们可以利弊当中去选择自己所需要的，但我们往往无法预测的是人的那颗心&hellip;.
<img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6louv27qsj20dw06yglo.jpg" alt="nance" /></p>

<h3 id="人心难测">人心难测</h3>

<p>最近遇到了甲（我们称之为甲，避免你们问我是所谓的职业之类的信息，后面以此类推），看到他和两个朋友乙和丙在喝着小酒。我是在回来的路上遇到他们的，处于常理的和他们打了一声招呼，当然甲的朋友我是不认识的。于是甲客气的招呼我一起喝酒，在百般推辞不下的时候和他们喝了一下小酒，甲热心的问了我的一些情况，我一一应酬着。没多久甲开始有这有那的抱怨起来，我渐入佳境，开始结合自己的情况开始安慰和开导甲，甲做出一副认真的样子询问我的情况是否属实，接着又进一步&rdquo;询问&rdquo;了我的一些生活的问题和现状。我跟着他们再喝了一会就回去了。过了几天，我看到甲&hellip;.(此处省略)，我这恍然大悟，所谓的朋友在人心面前也不过如此&hellip;&hellip;
<img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6lov0pc7fj20k90sggu7.jpg" alt="renxin" /></p>

<h3 id="攻防平衡">攻防平衡</h3>

<p>这才明白，这个是人心攻防的时代，我们不要抱怨其中的种种缘由。没有受过伤的人永远无法知道所谓的疼痛，没有抵抗过的人永远不知道这背后的心酸，在这个畸形的形态了，试着从不同的角度和方式，让自己处于平衡的生活状态，也许才能活出更好的人生&hellip;</p>]]></content>
		</item>
		
		<item>
			<title>七牛更新博客很方便</title>
			<link>https://fffou.com/post/16841/</link>
			<pubDate>Thu, 04 Aug 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/16841/</guid>
			<description>&lt;p&gt;因为本博客是采用静态博客Hexo生成页面的，并且个人也对于博客的静态化，安全和速度是追求极致的。之前用过wordpress（简称Wp）和国内的typecho（简称TY），虽说TY既有wp的优点且不失速度，但是一场服务器的失误导致数据全失，而个人有没有时常备份数据的习惯，渐渐的想找一个专注于博客平台且安全的程序，且不用在折腾博客上花去太多时间的东西。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>因为本博客是采用静态博客Hexo生成页面的，并且个人也对于博客的静态化，安全和速度是追求极致的。之前用过wordpress（简称Wp）和国内的typecho（简称TY），虽说TY既有wp的优点且不失速度，但是一场服务器的失误导致数据全失，而个人有没有时常备份数据的习惯，渐渐的想找一个专注于博客平台且安全的程序，且不用在折腾博客上花去太多时间的东西。</p>

<h3 id="静态博客hexo">静态博客Hexo</h3>

<p>经过网上的一番查找，知道了静态博客这这种东西，静态博客既有访问速度快，安全和对存储空间要求低的优点（生成静态页面可部署在任何支持静态页面的存储空间）。而最终我又选择了Hexo作为我的博客平台。
<img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6i4ygpz6pj211y0ifwgq.jpg" alt="Hexo" /></p>

<h3 id="七牛的便利">七牛的便利</h3>

<p>一般码农喜欢将静态博客生成的页面部署到github，但是国内访问速度确实是有点慢的。最终想到了搭载在国内的空间上，遂申请了阿里云的免费主机并做了备案，每次把生成的页面通过Ftp上传到虚拟主机，虽说访问速度挺快的，但随着文件数目的增多，越来越麻烦和困扰，甚至想到了重拾wp的冲动。之前一直有用七牛，现在发现备案以后是可以自定义域名的，且在无意中发现七牛的同步工具，所以尝试把博客部署到七牛。下载回来的七牛同步工具设置到两个Key值并选择生成静态博客的文件夹作为同步目录，让同步工具开机自启。果然的，每当我在电脑书写博客并生成静态页面的时候，七牛已经在后台默默的帮我同步至云存储，网站就在后台默默地更新了数据，实现了博客的全自动化更新。
<img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6i500xoqkj211y0ifth5.jpg" alt="qiniu" />
<img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6i50kumwyj20ls0gfjz7.jpg" alt="QRSbox" /></p>

<h3 id="一些缺失">一些缺失</h3>

<p>之前有博友反应我的博客访问慢，但是我觉得已经很满意的，因为我只需要在电脑静静的书写博客，专注于写作，不用管周围嘈杂的环境，做到了本地生成静态文件网站即时更新的效果，为了这个便利，我甚至荒废了我几个还能使用的主机，当然七牛的缓存有时候挺慢的，有时候更新文章，第二天才缓存过来，不得不说这个缺点有点难以忍受。</p>]]></content>
		</item>
		
		<item>
			<title>广东台风</title>
			<link>https://fffou.com/post/16821/</link>
			<pubDate>Tue, 02 Aug 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/16821/</guid>
			<description>&lt;p&gt;回来的路上，给飘起的沙粒冲进了眼里，刚一睁眼又一粒沙粒进了眼睛，这次我不在睁眼，心里默想:&amp;ldquo;已经来了&amp;rdquo;&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>回来的路上，给飘起的沙粒冲进了眼里，刚一睁眼又一粒沙粒进了眼睛，这次我不在睁眼，心里默想:&ldquo;已经来了&rdquo;</p>

<h3 id="台风">台风</h3>

<p>这是今年比较大的台风了，窗门给我锁的死死地，我听着窗外咻咻的呼叫声，一个从小听着长大的声音，一个可以把直径三十几厘米的大树折断，一个可以把悬挂在几层楼高的广告刮下来并当场把公交砸得报废的台风。</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6er8i9rjvj20go0cqaba.jpg" alt="nitan1" /></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6er8iuvxnj20go0cqjsm.jpg" alt="nitan2" /></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f6er8jdc5ej20go0d7ab8.jpg" alt="nitan3" /></p>

<h3 id="无法宁静">无法宁静</h3>

<p>此刻的我实在无法平静，想起昨天我在楼顶把一些容易砸碎和吹倒的东西一一放倒，在需要帮手的时候看到妹妹依旧玩着她的手机，不知如何我就发怒了，叫来帮忙并训了一顿，其心不在焉的说着反话“表示认同”我的观点，让我心里顿时一阵发寒，这不是我一个人的家好吗？？？难道做人的责任都没有？为什么大多数人做起了低头族，对身边的人变得异常冷漠？</p>

<h3 id="异象问候">异象问候</h3>

<p>没多久台风呼啸而来，忙完事情的我赶紧给广州的哥哥通了电话，问候了一下，知道那边情况也还算好。至于老家因为山岳纵多，风力减弱，一时也是没什么伤害的，以及身边的一些朋友&hellip;&hellip;</p>

<h3 id="渐入沉思">渐入沉思</h3>

<p>听着外面的风声，台风带走了白天的炎热，今晚我无法安眠，不知道这场台风会带来多大的伤害？也许明天天亮以后才会知晓，我只是依稀糊涂的想着事情&hellip;&hellip;</p>]]></content>
		</item>
		
		<item>
			<title>最喜欢的柳州螺蛳粉</title>
			<link>https://fffou.com/post/1672291/</link>
			<pubDate>Fri, 29 Jul 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/1672291/</guid>
			<description>&lt;p&gt;之前在广东中山待过一年，因为那边接近广西，所以外地的以广西人为多&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>之前在广东中山待过一年，因为那边接近广西，所以外地的以广西人为多</p>

<p>。在我待的那个街巷，广西的桂林米粉、老友粉、螺蛳粉满满遍布。本人喜爱酸辣口味，去到那螺蛳粉成了我的最爱，之前喜欢吃四川的酸辣粉，吃了螺蛳粉以后才知道那些都不能及，螺蛳粉：酸、辣、鲜，特别是“鲜”是四川酸辣粉所不具有的，四川的酸辣粉醋味和其他调料味太过明显，而螺蛳粉是通过螺丝肉熬出来的汤料，是别的汤粉所不能及的，可惜拥有的店铺不多</p>]]></content>
		</item>
		
		<item>
			<title>打消卖掉笔记本的想法</title>
			<link>https://fffou.com/post/167281/</link>
			<pubDate>Thu, 28 Jul 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/167281/</guid>
			<description>&lt;p&gt;前天在老家的老爸突然回到家里，我知道，平时一般需要钱的时候只是叫我打钱回家，我想肯定是有什么事情需要交代一下的了。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>前天在老家的老爸突然回到家里，我知道，平时一般需要钱的时候只是叫我打钱回家，我想肯定是有什么事情需要交代一下的了。</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f68xg3b0eij20xc0m8wma.jpg" alt="HJ" /></p>

<h3 id="转行">转行</h3>

<p>果不其然，在家受苦的父亲告诉我，叫我转行做相馆，特别是父亲一句：我老了，别人对我的做事能力持疑问，赚钱能力不及以前了（一部分人觉得老年人记性不好之类），现在是你们赚钱的时候了。</p>

<h3 id="打消念头">打消念头</h3>

<p>此刻的我只是觉得鼻子是酸酸的，想起前阵子的颓废，更是惨到把笔记本拿去闲鱼拍卖的情况，今晚果断打消了卖笔记本的念头，重新下载了ps，我知道我的人生必须像图像那般五颜六色，否则，没有目标的日子跟行尸走肉没有任何区别。
<img src="https://src.fffou.com/file/ffcode/oldimg/c5ed9d8bgw1f68xc4tm2cj211h2u44er.jpg" alt="hp430g1" /></p>]]></content>
		</item>
		
		<item>
			<title>轻便的博客平台farbox</title>
			<link>https://fffou.com/post/167172/</link>
			<pubDate>Sun, 17 Jul 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/167172/</guid>
			<description>&lt;p&gt;不得不说随着网络的普及和发展，越来越多的人不再满足于在一些博客托管平台上分享和记录事情，然而事与愿违的是我们在选择独立博客程序的时候，不得不面对程序优化和数据整理以及做博客托管平台之前多余的“份外事”。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>不得不说随着网络的普及和发展，越来越多的人不再满足于在一些博客托管平台上分享和记录事情，然而事与愿违的是我们在选择独立博客程序的时候，不得不面对程序优化和数据整理以及做博客托管平台之前多余的“份外事”。</p>

<p>知道今天遇到farbox之后，我才大声惊呼，这特么才是该有的写作平台，之前忙于折腾而不能专注写作带来的时间浪费往往得不偿失。</p>

<h2 id="特点">特点</h2>

<h3 id="简便的记录方式">简便的记录方式</h3>

<p>我们只需简单的敲打手中的键盘，不用担心服务和建构的任何问题，专注于分享每天所发生的快乐心情。</p>

<h3 id="无需担心数据备份的麻烦">无需担心数据备份的麻烦</h3>

<p>farbox采用微信和dropbox的方式发布文章，当你把markdown文章保存到dropbox的时候，服务器会自动读取并转化为网页文件，十分精彩。同样我们可以绑定微信，关注微信farbox官方公众号，直接发送消息的方式发布文章，这种所见即所得的方式，便于记录每一刻的心情。</p>

<h3 id="无须担心网站安全">无须担心网站安全</h3>

<p>我们只需要关注内容，背后的框架就交给farbox背后的维护成员解决，让我们更关注于内容本身。</p>]]></content>
		</item>
		
		<item>
			<title>关于七牛云</title>
			<link>https://fffou.com/post/167161/</link>
			<pubDate>Sat, 16 Jul 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/167161/</guid>
			<description>&lt;p&gt;在现在的大数据时代，我们搭建网站和大型的数据程序，渐渐的我们发现，存储容量慢慢变成了瓶颈，然而我们&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>在现在的大数据时代，我们搭建网站和大型的数据程序，渐渐的我们发现，存储容量慢慢变成了瓶颈，然而我们</p>

<p>需要找更大的空间或是升级自己的套餐，往往在存储容量和成本上形成越来越大的正比例，在存储上的利用上也不能得到合理的利用。
随着互联网的发展，形成了一批提供对象云存储的服务商，今天我推荐本博主使用的七牛云。其灵活易用，对注册用户赠送永久免费额度，一般应用足够了。</p>

<h3 id="图示">图示</h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/1671601.jpg" alt="1" />
<img src="https://src.fffou.com/file/ffcode/oldimg/1671602.jpg" alt="2" /></p>

<p><a href="https://link.fffou.com/go/qiniu/">访问七牛云</a></p>]]></content>
		</item>
		
		<item>
			<title>网易云音乐 For Linux</title>
			<link>https://fffou.com/post/167151/</link>
			<pubDate>Fri, 15 Jul 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/167151/</guid>
			<description>&lt;p&gt;网易云音乐（以下简称云音乐）是国内新兴的音乐软件，其由网易公司开发。众所周知，国内的音乐市场已被阿里系，腾讯系及酷狗和酷我所占领&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>网易云音乐（以下简称云音乐）是国内新兴的音乐软件，其由网易公司开发。众所周知，国内的音乐市场已被阿里系，腾讯系及酷狗和酷我所占领</p>

<p>；云音乐深知内容上的缺失，通过不断地提升体验和功能创新，终于占据自己的一小部分立足之地。网易公司在开源世界是拥有远见的，并和国内Linux开发商Deepin推出的云音乐的linux客户端。<!--more--></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/1671501.jpg" alt="1" /></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/1671502.jpg" alt="2" /></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/1671503.jpg" alt="3" /></p>

<h3 id="功能与优点">功能与优点</h3>

<h4 id="音乐交流">音乐交流</h4>

<p>国内的软件往往柳树插花，甚至添置一些毫不相关的其他功能。虽说提供如此人性化的“功能”，在国内音乐APP日益同质化严重的今天，我们渐渐产生了视觉疲劳，音乐成为我们心情状况交响的节奏，我们喜欢在不同的心情下听不同类型的音乐，然而拥有同样心情的我们却不能彼此沟通和宣泄，直到云音乐的出现，我才破口而出，这tm才是音乐APP。每天我告诉自己打开云音乐静静的听歌，却忍不住点开评论，跟评友交流一番，从没试过一个音乐软件一打开就是一晚，这在以前难以想象。</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/1671504.jpg" alt="4" /></p>

<h4 id="私人fm">私人FM</h4>

<p>在云音乐APP里，每个人可以根据自己的心情和爱好创建私人FM，那么跟你拥有一样爱好的其他云音乐用户就可以收听并收藏你的歌曲，评友们可以在你的音乐列表进行评论，聊聊此刻的心情和过往的趣事。</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/1671505.jpg" alt="5" /></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/1671506.jpg" alt="6" /></p>

<h4 id="云空间">云空间</h4>

<p>云音乐提供多达40G的存储空间用于存储每一个云音乐用户的歌曲，让喜爱收藏音乐的发烧友不再受存储空间的困扰。</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/1671507.jpg" alt="7" /></p>

<h4 id="高品质音乐">高品质音乐</h4>

<p>之前国内一些音乐APP宣称音乐达到无损级别，经过本博主测试效果与宣称的有较大的出入，而云音乐拥有千万首320Kbps超品质音乐，值得推荐</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/1671508.jpg" alt="8" /></p>]]></content>
		</item>
		
		<item>
			<title>开源Os--Deepin Os</title>
			<link>https://fffou.com/post/167141/</link>
			<pubDate>Thu, 14 Jul 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/167141/</guid>
			<description>&lt;p&gt;Deepin是一个开源的国产os，经过几年的发展已经有一些实用的价值，值得我们这些爱折腾的玩家入手了。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>Deepin是一个开源的国产os，经过几年的发展已经有一些实用的价值，值得我们这些爱折腾的玩家入手了。</p>

<h3 id="下载地址">下载地址</h3>

<p><a href="https://link.fffou.com/go/deepin/">Deepin</a></p>

<h3 id="图示">图示</h3>

<p>下面是图片：</p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/1671401.jpg" alt="界面" /></p>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/1671402.jpg" alt="网易" /></p>]]></content>
		</item>
		
		<item>
			<title>深度文件管理器</title>
			<link>https://fffou.com/post/167142/</link>
			<pubDate>Thu, 14 Jul 2016 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/167142/</guid>
			<description>&lt;p&gt;大家知道linux的文件结构和windows下是完全不同的，然而我们自接触电脑就深深被win的资源管理器所影响，往往大多数新手都不能很好的适应linux文件管理的操作方式。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>大家知道linux的文件结构和windows下是完全不同的，然而我们自接触电脑就深深被win的资源管理器所影响，往往大多数新手都不能很好的适应linux文件管理的操作方式。</p>

<p>今天，作为国内的linux开发商Deepin在他们的“造轮子”中，深度文件管理器出世了，深度文件管理器旨在改善linux下糟糕的数据管理方式，让整理文件更加简单化。</p>

<h3 id="以往文件管理缺点">以往文件管理缺点</h3>

<p>1.不能像win下一样拥有地址栏显示文件地址，即便有也是显示不一样的文件结构，比如</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash"> linux下：
 /home
 /var
 ...</code></pre></div>
<p>2.linux下除了用户文件夹用户操作需要提权，权限管理复杂而完备；win下就相对简单些，但相对安全缺失</p>

<p>### 深度文件管理器优点</p>

<p>因目前深度文件管理器尚属内测，而本人也不是内测人员，尚不做点评。</p>

<h3 id="内测爆图">内测爆图</h3>

<p><img src="https://src.fffou.com/file/ffcode/oldimg/1671403.jpg" alt="1" />
<img src="https://src.fffou.com/file/ffcode/oldimg/1671404.jpg" alt="2" />
<img src="https://src.fffou.com/file/ffcode/oldimg/1671405.jpg" alt="3" />
<img src="https://src.fffou.com/file/ffcode/oldimg/1671406.jpg" alt="4" /></p>]]></content>
		</item>
		
		<item>
			<title>An Elegant Static Blog Generator —— InkPaper</title>
			<link>https://fffou.com/post/ink-blog-tool-en/</link>
			<pubDate>Sun, 01 Mar 2015 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/ink-blog-tool-en/</guid>
			<description>&lt;p&gt;InkPaper is an static blog generator developed by Golang, No dependencies, Cross platform, Easy use, Fast build, Elegant theme.&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>InkPaper is an static blog generator developed by Golang, No dependencies, Cross platform, Easy use, Fast build, Elegant theme.</p>

<h3 id="quick-start">Quick Start</h3>

<ul>
<li>Download &amp; Extract <a href="https://link.fffou.com/go/imeoer_github/">Ink</a>，Run <code>ink preview</code></li>
</ul>

<blockquote>
<p>Tips：Linux/macOS, use <code>./ink preview</code></p>
</blockquote>

<ul>
<li>Open <code>http://localhost:8000</code> in browser to preview</li>
</ul>

<h3 id="website-configuration">Website Configuration</h3>

<p>Edit <code>config.yml</code>, use format:</p>
<div class="highlight"><pre class="chroma"><code class="language-yaml" data-lang="yaml">site<span class="p">:</span><span class="w">
</span><span class="w">    </span>title<span class="p">:</span><span class="w"> </span>Website<span class="w"> </span>Title<span class="w">
</span><span class="w">    </span>subtitle<span class="p">:</span><span class="w"> </span>Website<span class="w"> </span>Subtitle<span class="w">
</span><span class="w">    </span>limit<span class="p">:</span><span class="w"> </span>Max<span class="w"> </span>Article<span class="w"> </span>Count<span class="w"> </span>Per<span class="w"> </span>Page<span class="w">
</span><span class="w">    </span>theme<span class="p">:</span><span class="w"> </span>Website<span class="w"> </span>Theme<span class="w"> </span>Directory<span class="w">
</span><span class="w">    </span>comment<span class="p">:</span><span class="w"> </span>Comment<span class="w"> </span>Plugin<span class="w"> </span>Variable<span class="w"> </span>(Default<span class="w"> </span>is<span class="w"> </span>disqus<span class="w"> </span>username)<span class="w">
</span><span class="w">    </span>root<span class="p">:</span><span class="w"> </span>Website<span class="w"> </span>Root<span class="w"> </span>Path<span class="w"> </span><span class="c">#Optional</span><span class="w">
</span><span class="w">    </span>lang<span class="p">:</span><span class="w"> </span>Website<span class="w"> </span>Language<span class="w"> </span><span class="c">#Support en, zh, ru, ja, Configurable in theme/lang.yml</span><span class="w">
</span><span class="w">    </span>url<span class="p">:</span><span class="w"> </span>Website<span class="w"> </span>URL<span class="w"> </span><span class="c">#For RSS Generating</span><span class="w">
</span><span class="w">    </span>link<span class="p">:</span><span class="w"> </span>Article<span class="w"> </span>Link<span class="w"> </span>Scheme<span class="w"> </span><span class="c">#Default Is {title}.html，Support {year},{month},{day},{title} Variables</span><span class="w">
</span><span class="w">
</span><span class="w"></span>authors<span class="p">:</span><span class="w">
</span><span class="w">    </span>AuthorID<span class="p">:</span><span class="w">
</span><span class="w">        </span>name<span class="p">:</span><span class="w"> </span>Author<span class="w"> </span>Name<span class="w">
</span><span class="w">        </span>intro<span class="p">:</span><span class="w"> </span>Author<span class="w"> </span>Motto<span class="w">
</span><span class="w">        </span>avatar<span class="p">:</span><span class="w"> </span>Author<span class="w"> </span>Avatar<span class="w"> </span>Path<span class="w">
</span><span class="w">
</span><span class="w"></span>build<span class="p">:</span><span class="w">
</span><span class="w">    </span>output<span class="p">:</span><span class="w"> </span>Build<span class="w"> </span>Output<span class="w"> </span>Directory<span class="w"> </span><span class="c">#Optional, Default is &#34;public&#34;</span><span class="w">
</span><span class="w">    </span>port<span class="p">:</span><span class="w"> </span>Preview<span class="w"> </span>Port<span class="w">
</span><span class="w">    </span>copy<span class="p">:</span><span class="w">
</span><span class="w">        </span>-<span class="w"> </span>Copied<span class="w"> </span>Files<span class="w"> </span>When<span class="w"> </span>Build<span class="w">
</span><span class="w">    </span>publish<span class="p">:</span><span class="w"> </span><span class="sd">|
</span><span class="sd">        Excuted command when use &#39;ink publish&#39;</span></code></pre></div>
<h3 id="writing">Writing</h3>

<p>Create any <code>.md</code> file in <code>source</code> directory (Support subdirectory), use format:</p>
<div class="highlight"><pre class="chroma"><code class="language-yaml" data-lang="yaml">title<span class="p">:</span><span class="w"> </span>Article<span class="w"> </span>Title<span class="w">
</span><span class="w"></span>date<span class="p">:</span><span class="w"> </span>Year-Month-Day<span class="w"> </span>Hour<span class="p">:</span>Minute<span class="p">:</span>Second<span class="w"> </span><span class="c">#Created Time，Support TimeZone, such as &#34; +0800&#34;</span><span class="w">
</span><span class="w"></span>update<span class="p">:</span><span class="w"> </span>Year-Month-Day<span class="w"> </span>Hour<span class="p">:</span>Minute<span class="p">:</span>Second<span class="w"> </span><span class="c">#Updated Time，Optional，Support TimeZone, such as &#34; +0800&#34;</span><span class="w">
</span><span class="w"></span>author<span class="p">:</span><span class="w"> </span>AuthorID<span class="w">
</span><span class="w"></span>cover<span class="p">:</span><span class="w"> </span>Article<span class="w"> </span>Cover<span class="w"> </span>Path<span class="w"> </span><span class="c">#Optional</span><span class="w">
</span><span class="w"></span>draft<span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w"> </span><span class="c">#If Draft，Optional</span><span class="w">
</span><span class="w"></span>top<span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w"> </span><span class="c">#Place article to top, Optional</span><span class="w">
</span><span class="w"></span>preview<span class="p">:</span><span class="w"> </span>Article<span class="w"> </span>Preview，Also<span class="w"> </span>use<span class="w"> </span>&lt;!--more--&gt;<span class="w"> </span>to<span class="w"> </span>split<span class="w"> </span>in<span class="w"> </span>body<span class="w"> </span><span class="c">#Optional</span><span class="w">
</span><span class="w"></span>tags<span class="p">:</span><span class="w"> </span><span class="c">#Optional</span><span class="w">
</span><span class="w">    </span>-<span class="w"> </span>Tag1<span class="w">
</span><span class="w">    </span>-<span class="w"> </span>Tag2<span class="w">
</span><span class="w"></span>type<span class="p">:</span><span class="w"> </span>post<span class="w"> </span><span class="c">#Specify type is post or page, Optional</span><span class="w">
</span><span class="w"></span>hide<span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w"> </span><span class="c">#Hide article，can be accessed via URL, Optional</span><span class="w">
</span><span class="w">
</span><span class="w"></span>--<span class="sd">-
</span><span class="sd">
</span><span class="sd">Markdown Format&#39;s Body</span></code></pre></div>
<h3 id="publish">Publish</h3>

<ul>
<li>Run <code>ink publish</code> in blog directory to automatically build and publish</li>
<li>Or run <code>ink build</code> to manually deploy generated <code>public</code> directory</li>
</ul>

<blockquote>
<p><strong>Tips</strong>: When files changed，<code>ink preview</code> will automatically rebuild blog，refresh browser to update.</p>
</blockquote>

<h2 id="customization">Customization</h2>

<h3 id="modify-theme">Modify Theme</h3>

<p>Default theme placed in <code>theme</code> folder, run <code>npm install</code> and <code>npm run build</code> to rebuild in this folder.</p>

<p>page <code>page.html</code> (article list) and <code>article.html</code> (article), use variable with <a href="https://link.fffou.com/go/golang-pkg-html-template/">Golang Template</a> syntax.</p>

<h3 id="new-page">New Page</h3>

<p>Created any <code>.html</code> file will be copied to <code>source</code> directory, could use all variables on <code>site</code> field in <code>config.yml</code>.</p>

<h3 id="blog-migrate-beta">Blog Migrate (Beta)</h3>

<p>Support simple Jeklly/Hexo post convert, use:</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">ink convert /path/_posts</code></pre></div>
<h3 id="build-from-source">Build from source</h3>

<p>Local Build</p>

<ol>
<li>Install <a href="https://link.fffou.com/go/golang_doc_install/">Golang</a> environment</li>
<li>Run <code>go get github.com/InkProject/ink</code>, compile and get ink</li>
<li>Run <code>ink preview $GOPATH/src/github.com/InkProject/ink/template</code>, preview blog</li>
</ol>

<p>Docker Build (Example)</p>

<ol>
<li>Clone code <code>git clone git@github.com:InkProject/ink.git</code></li>
<li>Build image <code>docker build -t ink .</code> in source directory</li>
<li>Run container <code>docker run -p 8888:80 ink</code></li>
</ol>

<h2 id="theme">Theme</h2>

<ul>
<li>Dark(Official Theme): <a href="https://link.fffou.com/go/InkProject-ink-theme-dark/">https://github.com/InkProject/ink-theme-dark</a></li>
<li>simple: <a href="https://link.fffou.com/go/myiq-ink-simple/">https://github.com/myiq/ink-simple</a></li>
</ul>

<h2 id="related-toturials">Related Toturials</h2>

<p>Automatically deploy your Ink blog to GitHub pages wiht Travis CI</p>

<h2 id="issue-report">Issue Report</h2>

<p><a href="https://link.fffou.com/go/creativecommons-licenses-by-nc-4.0/">CC Attribution-NonCommercial License 4.0</a></p>

<p><a href="https://link.fffou.com/go/InkProject-ink-issues/">https://github.com/InkProject/ink/issues</a></p>

<h2 id="change-log">Change Log</h2>

<ul>
<li>[2016-07-11] Fix bugs and merge many PRs</li>
<li>[2015-08-15] Bug fix, support RSS feed, improve theme</li>
<li>[2015-07-04] Bug fix, improve theme, support top, i18n, subtemplate</li>
<li>[2015-06-04] Build more platform, add archive and tag page</li>
<li>[2015-03-01] Release first beta version</li>
</ul>

<h2 id="develop-plan">Develop Plan</h2>

<ul>
<li>Improve Theme</li>
<li>InkPaper Editor</li>
</ul>]]></content>
		</item>
		
		<item>
			<title>简洁的静态博客构建工具 —— 纸小墨（InkPaper）</title>
			<link>https://fffou.com/post/ink-blog-tool/</link>
			<pubDate>Sun, 01 Mar 2015 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/ink-blog-tool/</guid>
			<description>&lt;p&gt;纸小墨（InkPaper）是一个GO语言编写的开源静态博客构建工具，可以快速搭建博客网站。它无依赖跨平台，配置简单构建快速，注重简洁易用与更优雅的排版。&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>纸小墨（InkPaper）是一个GO语言编写的开源静态博客构建工具，可以快速搭建博客网站。它无依赖跨平台，配置简单构建快速，注重简洁易用与更优雅的排版。</p>

<h3 id="开始上手">开始上手</h3>

<ul>
<li>下载并解压 <a href="https://link.fffou.com/go/imeoer_github/">Ink</a>，运行命令 <code>ink preview</code></li>
</ul>

<blockquote>
<p>注意：Linux/macOS下，使用 <code>./ink preview</code></p>
</blockquote>

<ul>
<li>使用浏览器访问 <code>http://localhost:8000</code> 预览。</li>
</ul>

<h3 id="特性介绍">特性介绍</h3>

<ul>
<li>YAML格式的配置</li>
<li>Markdown格式的文章</li>
<li>无依赖跨平台</li>
<li>超快的构建速度</li>
<li>不断改善的主题与排版</li>
<li>多文章作者支持</li>
<li>归档与标签自动生成</li>
<li>保存时实时预览页面</li>
<li>离线的全文关键字搜索</li>
</ul>

<h3 id="配置网站">配置网站</h3>

<p>编辑<code>config.yml</code>，使用如下格式：</p>
<div class="highlight"><pre class="chroma"><code class="language-yaml" data-lang="yaml">site<span class="p">:</span><span class="w">
</span><span class="w">    </span>title<span class="p">:</span><span class="w"> </span>网站标题<span class="w">
</span><span class="w">    </span>subtitle<span class="p">:</span><span class="w"> </span>网站子标题<span class="w">
</span><span class="w">    </span>limit<span class="p">:</span><span class="w"> </span>每页可显示的文章数目<span class="w">
</span><span class="w">    </span>theme<span class="p">:</span><span class="w"> </span>网站主题目录<span class="w">
</span><span class="w">    </span>comment<span class="p">:</span><span class="w"> </span>评论插件变量(默认为Disqus账户名)<span class="w">
</span><span class="w">    </span>root<span class="p">:</span><span class="w"> </span>网站根路径<span class="w"> </span><span class="c">#可选</span><span class="w">
</span><span class="w">    </span>lang<span class="p">:</span><span class="w"> </span>网站语言<span class="w"> </span><span class="c">#支持en, zh, ru, ja，可在theme/config.yml配置</span><span class="w">
</span><span class="w">    </span>url<span class="p">:</span><span class="w"> </span>网站链接<span class="w"> </span><span class="c">#用于RSS生成</span><span class="w">
</span><span class="w">    </span>link<span class="p">:</span><span class="w"> </span>文章链接形式<span class="w"> </span><span class="c">#默认为{title}.html，支持{year},{month},{day},{title}变量</span><span class="w">
</span><span class="w">
</span><span class="w"></span>authors<span class="p">:</span><span class="w">
</span><span class="w">    </span>作者ID<span class="p">:</span><span class="w">
</span><span class="w">        </span>name<span class="p">:</span><span class="w"> </span>作者名称<span class="w">
</span><span class="w">        </span>intro<span class="p">:</span><span class="w"> </span>作者简介<span class="w">
</span><span class="w">        </span>avatar<span class="p">:</span><span class="w"> </span>作者头像路径<span class="w">
</span><span class="w">
</span><span class="w"></span>build<span class="p">:</span><span class="w">
</span><span class="w">    </span>output<span class="p">:</span><span class="w"> </span>构建输出目录<span class="w"> </span><span class="c">#可选, 默认为 &#34;public&#34;</span><span class="w">
</span><span class="w">    </span>port<span class="p">:</span><span class="w"> </span>预览端口<span class="w">
</span><span class="w">    </span>copy<span class="p">:</span><span class="w">
</span><span class="w">        </span>-<span class="w"> </span>构建时将会复制的目录/文件<span class="w">
</span><span class="w">    </span>publish<span class="p">:</span><span class="w"> </span><span class="sd">|
</span><span class="sd">        ink publish 命令将会执行的脚本</span></code></pre></div>
<h3 id="创建文章">创建文章</h3>

<p>在<code>source</code>目录中建立任意<code>.md</code>文件（可置于子文件夹），使用如下格式：</p>
<div class="highlight"><pre class="chroma"><code class="language-yaml" data-lang="yaml">title<span class="p">:</span><span class="w"> </span>文章标题<span class="w">
</span><span class="w"></span>date<span class="p">:</span><span class="w"> </span>年-月-日<span class="w"> </span>时<span class="p">:</span>分<span class="p">:</span>秒<span class="w"> </span><span class="c">#创建时间，可加时区如&#34; +0800&#34;</span><span class="w">
</span><span class="w"></span>update<span class="p">:</span><span class="w"> </span>年-月-日<span class="w"> </span>时<span class="p">:</span>分<span class="p">:</span>秒<span class="w"> </span><span class="c">#更新时间，可选，可加时区如&#34; +0800&#34;</span><span class="w">
</span><span class="w"></span>author<span class="p">:</span><span class="w"> </span>作者ID<span class="w">
</span><span class="w"></span>cover<span class="p">:</span><span class="w"> </span>题图链接<span class="w"> </span><span class="c">#可选</span><span class="w">
</span><span class="w"></span>draft<span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w"> </span><span class="c">#草稿，可选</span><span class="w">
</span><span class="w"></span>top<span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w"> </span><span class="c">#置顶文章，可选</span><span class="w">
</span><span class="w"></span>preview<span class="p">:</span><span class="w"> </span>文章预览，也可在正文中使用&lt;!--more--&gt;分割<span class="w"> </span><span class="c">#可选</span><span class="w">
</span><span class="w"></span>tags<span class="p">:</span><span class="w"> </span><span class="c">#可选</span><span class="w">
</span><span class="w">    </span>-<span class="w"> </span>标签1<span class="w">
</span><span class="w">    </span>-<span class="w"> </span>标签2<span class="w">
</span><span class="w"></span>type<span class="p">:</span><span class="w"> </span>post<span class="w"> </span><span class="c">#指定类型为文章(post)或页面(page)，可选</span><span class="w">
</span><span class="w"></span>hide<span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w"> </span><span class="c">#隐藏文章，只可通过链接访问，可选</span><span class="w">
</span><span class="w">
</span><span class="w"></span>--<span class="sd">-
</span><span class="sd">
</span><span class="sd">Markdown格式的正文</span></code></pre></div>
<h3 id="发布博客">发布博客</h3>

<ul>
<li>在博客目录下运行<code>ink publish</code>命令自动构建博客并发布。</li>
<li>或运行<code>ink build</code>命令将生成的<code>public</code>目录下的内容手动部署。</li>
</ul>

<blockquote>
<p>Tips: 在使用<code>ink preview</code>命令时，编辑保存文件后，博客会自动重新构建并刷新浏览器页面。</p>
</blockquote>

<h2 id="定制支持">定制支持</h2>

<h3 id="修改主题">修改主题</h3>

<p>默认主题在<code>theme</code>目录下，修改源代码后在该目录下运行<code>npm install</code>与<code>npm run build</code>重新构建。</p>

<p>页面包含<code>page.html</code>（文章列表）及<code>article.html</code>（文章）等，所有页面均支持<a href="https://link.fffou.com/go/golang-pkg-html-template/">GO语言HTML模板</a>语法，可引用变量。</p>

<h3 id="添加页面">添加页面</h3>

<p>在<code>source</code>目录下创建的任意<code>.html</code>文件将被复制，这些文件中可引用<code>config.yml</code>中site字段下的所有变量。</p>

<h3 id="博客迁移-beta">博客迁移(Beta)</h3>

<p>纸小墨提供简单的Jeklly/Hexo博客文章格式转换，使用命令：</p>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">ink convert /path/_posts</code></pre></div>
<h3 id="源码编译">源码编译</h3>

<p>本地运行</p>

<ol>
<li>配置<a href="https://link.fffou.com/go/golang_doc_install/">GO</a>语言环境。</li>
<li>运行命令<code>go get github.com/InkProject/ink</code>，编译并获取ink。</li>
<li>运行命令<code>ink preview $GOPATH/src/github.com/InkProject/ink/template</code>，预览博客。</li>
</ol>

<p>Docker构建（示例）</p>

<ol>
<li>Clone源码 <code>git clone git@github.com:InkProject/ink.git</code>。</li>
<li>源码目录下构建镜像<code>docker build -t ink .</code>。</li>
<li>运行容器<code>docker run -p 8000:80 ink</code>。</li>
</ol>

<h2 id="主题">主题</h2>

<ul>
<li>Dark(Official Theme): <a href="https://link.fffou.com/go/InkProject-ink-theme-dark/">https://github.com/InkProject/ink-theme-dark</a></li>
<li>simple: <a href="https://link.fffou.com/go/myiq-ink-simple/">https://github.com/myiq/ink-simple</a></li>
</ul>

<h2 id="相关链接">相关链接</h2>

<ul>
<li><a href="https://link.fffou.com/go/segmentfault-a-1190000009084954/">InkPaper 最佳实践</a></li>
</ul>

<h2 id="反馈贡献">反馈贡献</h2>

<p>纸小墨基于 <a href="https://link.fffou.com/go/creativecommons-licenses-by-nc-4.0/">CC Attribution-NonCommercial License 4.0</a> 协议，目前为止它仍然是个非成熟的开源项目，非常欢迎任何人的任何贡献。如有问题可报告至 <a href="https://link.fffou.com/go/InkProject-ink-issues/">https://github.com/InkProject/ink/issues</a>。</p>

<h2 id="更新历史">更新历史</h2>

<ul>
<li>[2016-07-11] 修复诸多Issue与合并一些PR。</li>
<li>[2015-08-15] 一些Bug修复，新增RSS订阅支持，主题改善。</li>
<li>[2015-07-04] 数项Bug修复与主题改善，支持置顶，多语言，子模板。</li>
<li>[2015-06-04] 编译更多平台版本，增加标签与存档页。</li>
<li>[2015-03-01] Beta版本，基础功能完成。</li>
</ul>

<h2 id="更新计划">更新计划</h2>

<ul>
<li>排版深度优化</li>
<li>纸小墨编辑器</li>
</ul>]]></content>
		</item>
		
		<item>
			<title>Creating a New Theme</title>
			<link>https://fffou.com/post/creating-a-new-theme/</link>
			<pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/creating-a-new-theme/</guid>
			<description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
			<content type="html"><![CDATA[

<h2 id="introduction">Introduction</h2>

<p>This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&rsquo;t cover using CSS to style your theme.</p>

<p>We&rsquo;ll start with creating a new site with a very basic template. Then we&rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.</p>

<p>In this tutorial, commands that you enter will start with the &ldquo;$&rdquo; prompt. The output will follow. Lines that start with &ldquo;#&rdquo; are comments that I&rsquo;ve added to explain a point. When I show updates to a file, the &ldquo;:wq&rdquo; on the last line means to save the file.</p>

<p>Here&rsquo;s an example:</p>

<pre><code>## this is a comment
$ echo this is a command
this is a command

## edit the file
$ vi foo.md
+++
date = &quot;2014-09-28&quot;
title = &quot;creating a new theme&quot;
+++

bah and humbug
:wq

## show it
$ cat foo.md
+++
date = &quot;2014-09-28&quot;
title = &quot;creating a new theme&quot;
+++

bah and humbug
$
</code></pre>

<h2 id="some-definitions">Some Definitions</h2>

<p>There are a few concepts that you need to understand before creating a theme.</p>

<h3 id="skins">Skins</h3>

<p>Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.</p>

<p>You have two ways to create a skin. The simplest way is to create it in the <code>layouts/</code> directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the <code>layouts/</code> directory so it will always find the skin.</p>

<p>Your second choice is to create it in a sub-directory of the <code>themes/</code> directory. If you do, then you must always tell Hugo where to search for the skin. It’s extra work, though, so why bother with it?</p>

<p>The difference between creating a skin in <code>layouts/</code> and creating it in <code>themes/</code> is very subtle. A skin in <code>layouts/</code> can’t be customized without updating the templates and static files that it is built from. A skin created in <code>themes/</code>, on the other hand, can be and that makes it easier for other people to use it.</p>

<p>The rest of this tutorial will call a skin created in the <code>themes/</code> directory a theme.</p>

<p>Note that you can use this tutorial to create a skin in the <code>layouts/</code> directory if you wish to. The main difference will be that you won’t need to update the site’s configuration file to use a theme.</p>

<h3 id="the-home-page">The Home Page</h3>

<p>The home page, or landing page, is the first page that many visitors to a site see. It is the index.html file in the root directory of the web site. Since Hugo writes files to the public/ directory, our home page is public/index.html.</p>

<h3 id="site-configuration-file">Site Configuration File</h3>

<p>When Hugo runs, it looks for a configuration file that contains settings that override default values for the entire site. The file can use TOML, YAML, or JSON. I prefer to use TOML for my configuration files. If you prefer to use JSON or YAML, you’ll need to translate my examples. You’ll also need to change the name of the file since Hugo uses the extension to determine how to process it.</p>

<p>Hugo translates Markdown files into HTML. By default, Hugo expects to find Markdown files in your <code>content/</code> directory and template files in your <code>themes/</code> directory. It will create HTML files in your <code>public/</code> directory. You can change this by specifying alternate locations in the configuration file.</p>

<h3 id="content">Content</h3>

<p>Content is stored in text files that contain two sections. The first section is the “front matter,” which is the meta-information on the content. The second section contains Markdown that will be converted to HTML.</p>

<h4 id="front-matter">Front Matter</h4>

<p>The front matter is information about the content. Like the configuration file, it can be written in TOML, YAML, or JSON. Unlike the configuration file, Hugo doesn’t use the file’s extension to know the format. It looks for markers to signal the type. TOML is surrounded by “<code>+++</code>”, YAML by “<code>---</code>”, and JSON is enclosed in curly braces. I prefer to use TOML, so you’ll need to translate my examples if you prefer YAML or JSON.</p>

<p>The information in the front matter is passed into the template before the content is rendered into HTML.</p>

<h4 id="markdown">Markdown</h4>

<p>Content is written in Markdown which makes it easier to create the content. Hugo runs the content through a Markdown engine to create the HTML which will be written to the output file.</p>

<h3 id="template-files">Template Files</h3>

<p>Hugo uses template files to render content into HTML. Template files are a bridge between the content and presentation. Rules in the template define what content is published, where it&rsquo;s published to, and how it will rendered to the HTML file. The template guides the presentation by specifying the style to use.</p>

<p>There are three types of templates: single, list, and partial. Each type takes a bit of content as input and transforms it based on the commands in the template.</p>

<p>Hugo uses its knowledge of the content to find the template file used to render the content. If it can’t find a template that is an exact match for the content, it will shift up a level and search from there. It will continue to do so until it finds a matching template or runs out of templates to try. If it can’t find a template, it will use the default template for the site.</p>

<p>Please note that you can use the front matter to influence Hugo’s choice of templates.</p>

<h4 id="single-template">Single Template</h4>

<p>A single template is used to render a single piece of content. For example, an article or post would be a single piece of content and use a single template.</p>

<h4 id="list-template">List Template</h4>

<p>A list template renders a group of related content. That could be a summary of recent postings or all articles in a category. List templates can contain multiple groups.</p>

<p>The homepage template is a special type of list template. Hugo assumes that the home page of your site will act as the portal for the rest of the content in the site.</p>

<h4 id="partial-template">Partial Template</h4>

<p>A partial template is a template that can be included in other templates. Partial templates must be called using the “partial” template command. They are very handy for rolling up common behavior. For example, your site may have a banner that all pages use. Instead of copying the text of the banner into every single and list template, you could create a partial with the banner in it. That way if you decide to change the banner, you only have to change the partial template.</p>

<h2 id="create-a-new-site">Create a New Site</h2>

<p>Let&rsquo;s use Hugo to create a new web site. I&rsquo;m a Mac user, so I&rsquo;ll create mine in my home directory, in the Sites folder. If you&rsquo;re using Linux, you might have to create the folder first.</p>

<p>The &ldquo;new site&rdquo; command will create a skeleton of a site. It will give you the basic directory structure and a useable configuration file.</p>

<pre><code>$ hugo new site ~/Sites/zafta
$ cd ~/Sites/zafta
$ ls -l
total 8
drwxr-xr-x  7 quoha  staff  238 Sep 29 16:49 .
drwxr-xr-x  3 quoha  staff  102 Sep 29 16:49 ..
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
$
</code></pre>

<p>Take a look in the content/ directory to confirm that it is empty.</p>

<p>The other directories (archetypes/, layouts/, and static/) are used when customizing a theme. That&rsquo;s a topic for a different tutorial, so please ignore them for now.</p>

<h3 id="generate-the-html-for-the-new-site">Generate the HTML For the New Site</h3>

<p>Running the <code>hugo</code> command with no options will read all the available content and generate the HTML files. It will also copy all static files (that&rsquo;s everything that&rsquo;s not content). Since we have an empty site, it won&rsquo;t do much, but it will do it very quickly.</p>

<pre><code>$ hugo --verbose
INFO: 2014/09/29 Using config file: config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
0 draft content
0 future content
0 pages created
0 tags created
0 categories created
in 2 ms
$
</code></pre>

<p>The &ldquo;<code>--verbose</code>&rdquo; flag gives extra information that will be helpful when we build the template. Every line of the output that starts with &ldquo;INFO:&rdquo; or &ldquo;WARN:&rdquo; is present because we used that flag. The lines that start with &ldquo;WARN:&rdquo; are warning messages. We&rsquo;ll go over them later.</p>

<p>We can verify that the command worked by looking at the directory again.</p>

<pre><code>$ ls -l
total 8
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:02 public
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
$
</code></pre>

<p>See that new public/ directory? Hugo placed all generated content there. When you&rsquo;re ready to publish your web site, that&rsquo;s the place to start. For now, though, let&rsquo;s just confirm that we have what we&rsquo;d expect from a site with no content.</p>

<pre><code>$ ls -l public
total 16
-rw-r--r--  1 quoha  staff  416 Sep 29 17:02 index.xml
-rw-r--r--  1 quoha  staff  262 Sep 29 17:02 sitemap.xml
$
</code></pre>

<p>Hugo created two XML files, which is standard, but there are no HTML files.</p>

<h3 id="test-the-new-site">Test the New Site</h3>

<p>Verify that you can run the built-in web server. It will dramatically shorten your development cycle if you do. Start it by running the &ldquo;server&rdquo; command. If it is successful, you will see output similar to the following:</p>

<pre><code>$ hugo server --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
0 draft content
0 future content
0 pages created
0 tags created
0 categories created
in 2 ms
Serving pages from /Users/quoha/Sites/zafta/public
Web Server is available at http://localhost:1313
Press Ctrl+C to stop
</code></pre>

<p>Connect to the listed URL (it&rsquo;s on the line that starts with &ldquo;Web Server&rdquo;). If everything is working correctly, you should get a page that shows the following:</p>

<pre><code>index.xml
sitemap.xml
</code></pre>

<p>That&rsquo;s a listing of your public/ directory. Hugo didn&rsquo;t create a home page because our site has no content. When there&rsquo;s no index.html file in a directory, the server lists the files in the directory, which is what you should see in your browser.</p>

<p>Let’s go back and look at those warnings again.</p>

<pre><code>WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
</code></pre>

<p>That second warning is easier to explain. We haven’t created a template to be used to generate “page not found errors.” The 404 message is a topic for a separate tutorial.</p>

<p>Now for the first warning. It is for the home page. You can tell because the first layout that it looked for was “index.html.” That’s only used by the home page.</p>

<p>I like that the verbose flag causes Hugo to list the files that it&rsquo;s searching for. For the home page, they are index.html, _default/list.html, and _default/single.html. There are some rules that we&rsquo;ll cover later that explain the names and paths. For now, just remember that Hugo couldn&rsquo;t find a template for the home page and it told you so.</p>

<p>At this point, you&rsquo;ve got a working installation and site that we can build upon. All that’s left is to add some content and a theme to display it.</p>

<h2 id="create-a-new-theme">Create a New Theme</h2>

<p>Hugo doesn&rsquo;t ship with a default theme. There are a few available (I counted a dozen when I first installed Hugo) and Hugo comes with a command to create new themes.</p>

<p>We&rsquo;re going to create a new theme called &ldquo;zafta.&rdquo; Since the goal of this tutorial is to show you how to fill out the files to pull in your content, the theme will not contain any CSS. In other words, ugly but functional.</p>

<p>All themes have opinions on content and layout. For example, Zafta uses &ldquo;post&rdquo; over &ldquo;blog&rdquo;. Strong opinions make for simpler templates but differing opinions make it tougher to use themes. When you build a theme, consider using the terms that other themes do.</p>

<h3 id="create-a-skeleton">Create a Skeleton</h3>

<p>Use the hugo &ldquo;new&rdquo; command to create the skeleton of a theme. This creates the directory structure and places empty files for you to fill out.</p>

<pre><code>$ hugo new theme zafta

$ ls -l
total 8
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:02 public
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
drwxr-xr-x  3 quoha  staff  102 Sep 29 17:31 themes

$ find themes -type f | xargs ls -l
-rw-r--r--  1 quoha  staff  1081 Sep 29 17:31 themes/zafta/LICENSE.md
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/archetypes/default.md
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/_default/list.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/_default/single.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/index.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/partials/header.html
-rw-r--r--  1 quoha  staff    93 Sep 29 17:31 themes/zafta/theme.toml
$
</code></pre>

<p>The skeleton includes templates (the files ending in .html), license file, a description of your theme (the theme.toml file), and an empty archetype.</p>

<p>Please take a minute to fill out the theme.toml and LICENSE.md files. They&rsquo;re optional, but if you&rsquo;re going to be distributing your theme, it tells the world who to praise (or blame). It&rsquo;s also nice to declare the license so that people will know how they can use the theme.</p>

<pre><code>$ vi themes/zafta/theme.toml
author = &quot;michael d henderson&quot;
description = &quot;a minimal working template&quot;
license = &quot;MIT&quot;
name = &quot;zafta&quot;
source_repo = &quot;&quot;
tags = [&quot;tags&quot;, &quot;categories&quot;]
:wq

## also edit themes/zafta/LICENSE.md and change
## the bit that says &quot;YOUR_NAME_HERE&quot;
</code></pre>

<p>Note that the the skeleton&rsquo;s template files are empty. Don&rsquo;t worry, we&rsquo;ll be changing that shortly.</p>

<pre><code>$ find themes/zafta -name '*.html' | xargs ls -l
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/_default/list.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/_default/single.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/index.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/partials/header.html
$
</code></pre>

<h3 id="update-the-configuration-file-to-use-the-theme">Update the Configuration File to Use the Theme</h3>

<p>Now that we&rsquo;ve got a theme to work with, it&rsquo;s a good idea to add the theme name to the configuration file. This is optional, because you can always add &ldquo;-t zafta&rdquo; on all your commands. I like to put it the configuration file because I like shorter command lines. If you don&rsquo;t put it in the configuration file or specify it on the command line, you won&rsquo;t use the template that you&rsquo;re expecting to.</p>

<p>Edit the file to add the theme, add a title for the site, and specify that all of our content will use the TOML format.</p>

<pre><code>$ vi config.toml
theme = &quot;zafta&quot;
baseurl = &quot;&quot;
languageCode = &quot;en-us&quot;
title = &quot;zafta - totally refreshing&quot;
MetaDataFormat = &quot;toml&quot;
:wq

$
</code></pre>

<h3 id="generate-the-site">Generate the Site</h3>

<p>Now that we have an empty theme, let&rsquo;s generate the site again.</p>

<pre><code>$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content
0 future content
0 pages created
0 tags created
0 categories created
in 2 ms
$
</code></pre>

<p>Did you notice that the output is different? The warning message for the home page has disappeared and we have an additional information line saying that Hugo is syncing from the theme&rsquo;s directory.</p>

<p>Let&rsquo;s check the public/ directory to see what Hugo&rsquo;s created.</p>

<pre><code>$ ls -l public
total 16
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:56 css
-rw-r--r--  1 quoha  staff    0 Sep 29 17:56 index.html
-rw-r--r--  1 quoha  staff  407 Sep 29 17:56 index.xml
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:56 js
-rw-r--r--  1 quoha  staff  243 Sep 29 17:56 sitemap.xml
$
</code></pre>

<p>Notice four things:</p>

<ol>
<li>Hugo created a home page. This is the file public/index.html.</li>
<li>Hugo created a css/ directory.</li>
<li>Hugo created a js/ directory.</li>
<li>Hugo claimed that it created 0 pages. It created a file and copied over static files, but didn&rsquo;t create any pages. That&rsquo;s because it considers a &ldquo;page&rdquo; to be a file created directly from a content file. It doesn&rsquo;t count things like the index.html files that it creates automatically.</li>
</ol>

<h4 id="the-home-page-1">The Home Page</h4>

<p>Hugo supports many different types of templates. The home page is special because it gets its own type of template and its own template file. The file, layouts/index.html, is used to generate the HTML for the home page. The Hugo documentation says that this is the only required template, but that depends. Hugo&rsquo;s warning message shows that it looks for three different templates:</p>

<pre><code>WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
</code></pre>

<p>If it can&rsquo;t find any of these, it completely skips creating the home page. We noticed that when we built the site without having a theme installed.</p>

<p>When Hugo created our theme, it created an empty home page template. Now, when we build the site, Hugo finds the template and uses it to generate the HTML for the home page. Since the template file is empty, the HTML file is empty, too. If the template had any rules in it, then Hugo would have used them to generate the home page.</p>

<pre><code>$ find . -name index.html | xargs ls -l
-rw-r--r--  1 quoha  staff  0 Sep 29 20:21 ./public/index.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 ./themes/zafta/layouts/index.html
$
</code></pre>

<h4 id="the-magic-of-static">The Magic of Static</h4>

<p>Hugo does two things when generating the site. It uses templates to transform content into HTML and it copies static files into the site. Unlike content, static files are not transformed. They are copied exactly as they are.</p>

<p>Hugo assumes that your site will use both CSS and JavaScript, so it creates directories in your theme to hold them. Remember opinions? Well, Hugo&rsquo;s opinion is that you&rsquo;ll store your CSS in a directory named css/ and your JavaScript in a directory named js/. If you don&rsquo;t like that, you can change the directory names in your theme directory or even delete them completely. Hugo&rsquo;s nice enough to offer its opinion, then behave nicely if you disagree.</p>

<pre><code>$ find themes/zafta -type d | xargs ls -ld
drwxr-xr-x  7 quoha  staff  238 Sep 29 17:38 themes/zafta
drwxr-xr-x  3 quoha  staff  102 Sep 29 17:31 themes/zafta/archetypes
drwxr-xr-x  5 quoha  staff  170 Sep 29 17:31 themes/zafta/layouts
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:31 themes/zafta/layouts/_default
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:31 themes/zafta/layouts/partials
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:31 themes/zafta/static
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:31 themes/zafta/static/css
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:31 themes/zafta/static/js
$
</code></pre>

<h2 id="the-theme-development-cycle">The Theme Development Cycle</h2>

<p>When you&rsquo;re working on a theme, you will make changes in the theme&rsquo;s directory, rebuild the site, and check your changes in the browser. Hugo makes this very easy:</p>

<ol>
<li>Purge the public/ directory.</li>
<li>Run the built in web server in watch mode.</li>
<li>Open your site in a browser.</li>
<li>Update the theme.</li>
<li>Glance at your browser window to see changes.</li>
<li>Return to step 4.</li>
</ol>

<p>I’ll throw in one more opinion: never work on a theme on a live site. Always work on a copy of your site. Make changes to your theme, test them, then copy them up to your site. For added safety, use a tool like Git to keep a revision history of your content and your theme. Believe me when I say that it is too easy to lose both your mind and your changes.</p>

<p>Check the main Hugo site for information on using Git with Hugo.</p>

<h3 id="purge-the-public-directory">Purge the public/ Directory</h3>

<p>When generating the site, Hugo will create new files and update existing ones in the <code>public/</code> directory. It will not delete files that are no longer used. For example, files that were created in the wrong directory or with the wrong title will remain. If you leave them, you might get confused by them later. I recommend cleaning out your site prior to generating it.</p>

<p>Note: If you&rsquo;re building on an SSD, you should ignore this. Churning on a SSD can be costly.</p>

<h3 id="hugo-s-watch-option">Hugo&rsquo;s Watch Option</h3>

<p>Hugo&rsquo;s &ldquo;<code>--watch</code>&rdquo; option will monitor the content/ and your theme directories for changes and rebuild the site automatically.</p>

<h3 id="live-reload">Live Reload</h3>

<p>Hugo&rsquo;s built in web server supports live reload. As pages are saved on the server, the browser is told to refresh the page. Usually, this happens faster than you can say, &ldquo;Wow, that&rsquo;s totally amazing.&rdquo;</p>

<h3 id="development-commands">Development Commands</h3>

<p>Use the following commands as the basis for your workflow.</p>

<pre><code>## purge old files. hugo will recreate the public directory.
##
$ rm -rf public
##
## run hugo in watch mode
##
$ hugo server --watch --verbose
</code></pre>

<p>Here&rsquo;s sample output showing Hugo detecting a change to the template for the home page. Once generated, the web browser automatically reloaded the page. I&rsquo;ve said this before, it&rsquo;s amazing.</p>

<pre><code>$ rm -rf public
$ hugo server --watch --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content
0 future content
0 pages created
0 tags created
0 categories created
in 2 ms
Watching for changes in /Users/quoha/Sites/zafta/content
Serving pages from /Users/quoha/Sites/zafta/public
Web Server is available at http://localhost:1313
Press Ctrl+C to stop
INFO: 2014/09/29 File System Event: [&quot;/Users/quoha/Sites/zafta/themes/zafta/layouts/index.html&quot;: MODIFY|ATTRIB]
Change detected, rebuilding site

WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content
0 future content
0 pages created
0 tags created
0 categories created
in 1 ms
</code></pre>

<h2 id="update-the-home-page-template">Update the Home Page Template</h2>

<p>The home page is one of a few special pages that Hugo creates automatically. As mentioned earlier, it looks for one of three files in the theme&rsquo;s layout/ directory:</p>

<ol>
<li>index.html</li>
<li>_default/list.html</li>
<li>_default/single.html</li>
</ol>

<p>We could update one of the default templates, but a good design decision is to update the most specific template available. That&rsquo;s not a hard and fast rule (in fact, we&rsquo;ll break it a few times in this tutorial), but it is a good generalization.</p>

<h3 id="make-a-static-home-page">Make a Static Home Page</h3>

<p>Right now, that page is empty because we don&rsquo;t have any content and we don&rsquo;t have any logic in the template. Let&rsquo;s change that by adding some text to the template.</p>

<pre><code>$ vi themes/zafta/layouts/index.html
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;
  &lt;p&gt;hugo says hello!&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
:wq

$
</code></pre>

<p>Build the web site and then verify the results.</p>

<pre><code>$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content
0 future content
0 pages created
0 tags created
0 categories created
in 2 ms

$ find public -type f -name '*.html' | xargs ls -l
-rw-r--r--  1 quoha  staff  78 Sep 29 21:26 public/index.html

$ cat public/index.html
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;
  &lt;p&gt;hugo says hello!&lt;/p&gt;
&lt;/html&gt;
</code></pre>

<h4 id="live-reload-1">Live Reload</h4>

<p>Note: If you&rsquo;re running the server with the <code>--watch</code> option, you&rsquo;ll see different content in the file:</p>

<pre><code>$ cat public/index.html
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;
  &lt;p&gt;hugo says hello!&lt;/p&gt;
&lt;script&gt;document.write('&lt;script src=&quot;http://'
        + (location.host || 'localhost').split(':')[0]
    + ':1313/livereload.js?mindelay=10&quot;&gt;&lt;/'
        + 'script&gt;')&lt;/script&gt;&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>When you use <code>--watch</code>, the Live Reload script is added by Hugo. Look for live reload in the documentation to see what it does and how to disable it.</p>

<h3 id="build-a-dynamic-home-page">Build a &ldquo;Dynamic&rdquo; Home Page</h3>

<p>&ldquo;Dynamic home page?&rdquo; Hugo&rsquo;s a static web site generator, so this seems an odd thing to say. I mean let&rsquo;s have the home page automatically reflect the content in the site every time Hugo builds it. We&rsquo;ll use iteration in the template to do that.</p>

<h4 id="create-new-posts">Create New Posts</h4>

<p>Now that we have the home page generating static content, let&rsquo;s add some content to the site. We&rsquo;ll display these posts as a list on the home page and on their own page, too.</p>

<p>Hugo has a command to generate a skeleton post, just like it does for sites and themes.</p>

<pre><code>$ hugo --verbose new post/first.md
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 attempting to create  post/first.md of post
INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/default.md
ERROR: 2014/09/29 Unable to Cast &lt;nil&gt; to map[string]interface{}

$
</code></pre>

<p>That wasn&rsquo;t very nice, was it?</p>

<p>The &ldquo;new&rdquo; command uses an archetype to create the post file. Hugo created an empty default archetype file, but that causes an error when there&rsquo;s a theme. For me, the workaround was to create an archetypes file specifically for the post type.</p>

<pre><code>$ vi themes/zafta/archetypes/post.md
+++
Description = &quot;&quot;
Tags = []
Categories = []
+++
:wq

$ find themes/zafta/archetypes -type f | xargs ls -l
-rw-r--r--  1 quoha  staff   0 Sep 29 21:53 themes/zafta/archetypes/default.md
-rw-r--r--  1 quoha  staff  51 Sep 29 21:54 themes/zafta/archetypes/post.md

$ hugo --verbose new post/first.md
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 attempting to create  post/first.md of post
INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md
INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/first.md
/Users/quoha/Sites/zafta/content/post/first.md created

$ hugo --verbose new post/second.md
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 attempting to create  post/second.md of post
INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md
INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/second.md
/Users/quoha/Sites/zafta/content/post/second.md created

$ ls -l content/post
total 16
-rw-r--r--  1 quoha  staff  104 Sep 29 21:54 first.md
-rw-r--r--  1 quoha  staff  105 Sep 29 21:57 second.md

$ cat content/post/first.md
+++
Categories = []
Description = &quot;&quot;
Tags = []
date = &quot;2014-09-29T21:54:53-05:00&quot;
title = &quot;first&quot;

+++
my first post

$ cat content/post/second.md
+++
Categories = []
Description = &quot;&quot;
Tags = []
date = &quot;2014-09-29T21:57:09-05:00&quot;
title = &quot;second&quot;

+++
my second post

$
</code></pre>

<p>Build the web site and then verify the results.</p>

<pre><code>$ rm -rf public
$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 found taxonomies: map[string]string{&quot;category&quot;:&quot;categories&quot;, &quot;tag&quot;:&quot;tags&quot;}
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content
0 future content
2 pages created
0 tags created
0 categories created
in 4 ms
$
</code></pre>

<p>The output says that it created 2 pages. Those are our new posts:</p>

<pre><code>$ find public -type f -name '*.html' | xargs ls -l
-rw-r--r--  1 quoha  staff  78 Sep 29 22:13 public/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:13 public/post/first/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:13 public/post/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:13 public/post/second/index.html
$
</code></pre>

<p>The new files are empty because because the templates used to generate the content are empty. The homepage doesn&rsquo;t show the new content, either. We have to update the templates to add the posts.</p>

<h3 id="list-and-single-templates">List and Single Templates</h3>

<p>In Hugo, we have three major kinds of templates. There&rsquo;s the home page template that we updated previously. It is used only by the home page. We also have &ldquo;single&rdquo; templates which are used to generate output for a single content file. We also have &ldquo;list&rdquo; templates that are used to group multiple pieces of content before generating output.</p>

<p>Generally speaking, list templates are named &ldquo;list.html&rdquo; and single templates are named &ldquo;single.html.&rdquo;</p>

<p>There are three other types of templates: partials, content views, and terms. We will not go into much detail on these.</p>

<h3 id="add-content-to-the-homepage">Add Content to the Homepage</h3>

<p>The home page will contain a list of posts. Let&rsquo;s update its template to add the posts that we just created. The logic in the template will run every time we build the site.</p>

<pre><code>$ vi themes/zafta/layouts/index.html
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;
  {{ range first 10 .Data.Pages }}
    &lt;h1&gt;{{ .Title }}&lt;/h1&gt;
  {{ end }}
&lt;/body&gt;
&lt;/html&gt;
:wq

$
</code></pre>

<p>Hugo uses the Go template engine. That engine scans the template files for commands which are enclosed between &ldquo;{{&rdquo; and &ldquo;}}&rdquo;. In our template, the commands are:</p>

<ol>
<li>range</li>
<li>.Title</li>
<li>end</li>
</ol>

<p>The &ldquo;range&rdquo; command is an iterator. We&rsquo;re going to use it to go through the first ten pages. Every HTML file that Hugo creates is treated as a page, so looping through the list of pages will look at every file that will be created.</p>

<p>The &ldquo;.Title&rdquo; command prints the value of the &ldquo;title&rdquo; variable. Hugo pulls it from the front matter in the Markdown file.</p>

<p>The &ldquo;end&rdquo; command signals the end of the range iterator. The engine loops back to the top of the iteration when it finds &ldquo;end.&rdquo; Everything between the &ldquo;range&rdquo; and &ldquo;end&rdquo; is evaluated every time the engine goes through the iteration. In this file, that would cause the title from the first ten pages to be output as heading level one.</p>

<p>It&rsquo;s helpful to remember that some variables, like .Data, are created before any output files. Hugo loads every content file into the variable and then gives the template a chance to process before creating the HTML files.</p>

<p>Build the web site and then verify the results.</p>

<pre><code>$ rm -rf public
$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 found taxonomies: map[string]string{&quot;tag&quot;:&quot;tags&quot;, &quot;category&quot;:&quot;categories&quot;}
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content
0 future content
2 pages created
0 tags created
0 categories created
in 4 ms
$ find public -type f -name '*.html' | xargs ls -l
-rw-r--r--  1 quoha  staff  94 Sep 29 22:23 public/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:23 public/post/first/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:23 public/post/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:23 public/post/second/index.html
$ cat public/index.html
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;

    &lt;h1&gt;second&lt;/h1&gt;

    &lt;h1&gt;first&lt;/h1&gt;

&lt;/body&gt;
&lt;/html&gt;
$
</code></pre>

<p>Congratulations, the home page shows the title of the two posts. The posts themselves are still empty, but let&rsquo;s take a moment to appreciate what we&rsquo;ve done. Your template now generates output dynamically. Believe it or not, by inserting the range command inside of those curly braces, you&rsquo;ve learned everything you need to know to build a theme. All that&rsquo;s really left is understanding which template will be used to generate each content file and becoming familiar with the commands for the template engine.</p>

<p>And, if that were entirely true, this tutorial would be much shorter. There are a few things to know that will make creating a new template much easier. Don&rsquo;t worry, though, that&rsquo;s all to come.</p>

<h3 id="add-content-to-the-posts">Add Content to the Posts</h3>

<p>We&rsquo;re working with posts, which are in the content/post/ directory. That means that their section is &ldquo;post&rdquo; (and if we don&rsquo;t do something weird, their type is also &ldquo;post&rdquo;).</p>

<p>Hugo uses the section and type to find the template file for every piece of content. Hugo will first look for a template file that matches the section or type name. If it can&rsquo;t find one, then it will look in the _default/ directory. There are some twists that we&rsquo;ll cover when we get to categories and tags, but for now we can assume that Hugo will try post/single.html, then _default/single.html.</p>

<p>Now that we know the search rule, let&rsquo;s see what we actually have available:</p>

<pre><code>$ find themes/zafta -name single.html | xargs ls -l
-rw-r--r--  1 quoha  staff  132 Sep 29 17:31 themes/zafta/layouts/_default/single.html
</code></pre>

<p>We could create a new template, post/single.html, or change the default. Since we don&rsquo;t know of any other content types, let&rsquo;s start with updating the default.</p>

<p>Remember, any content that we haven&rsquo;t created a template for will end up using this template. That can be good or bad. Bad because I know that we&rsquo;re going to be adding different types of content and we&rsquo;re going to end up undoing some of the changes we&rsquo;ve made. It&rsquo;s good because we&rsquo;ll be able to see immediate results. It&rsquo;s also good to start here because we can start to build the basic layout for the site. As we add more content types, we&rsquo;ll refactor this file and move logic around. Hugo makes that fairly painless, so we&rsquo;ll accept the cost and proceed.</p>

<p>Please see the Hugo documentation on template rendering for all the details on determining which template to use. And, as the docs mention, if you&rsquo;re building a single page application (SPA) web site, you can delete all of the other templates and work with just the default single page. That&rsquo;s a refreshing amount of joy right there.</p>

<h4 id="update-the-template-file">Update the Template File</h4>

<pre><code>$ vi themes/zafta/layouts/_default/single.html
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;{{ .Title }}&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;{{ .Title }}&lt;/h1&gt;
  {{ .Content }}
&lt;/body&gt;
&lt;/html&gt;
:wq

$
</code></pre>

<p>Build the web site and verify the results.</p>

<pre><code>$ rm -rf public
$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 found taxonomies: map[string]string{&quot;tag&quot;:&quot;tags&quot;, &quot;category&quot;:&quot;categories&quot;}
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content
0 future content
2 pages created
0 tags created
0 categories created
in 4 ms

$ find public -type f -name '*.html' | xargs ls -l
-rw-r--r--  1 quoha  staff   94 Sep 29 22:40 public/index.html
-rw-r--r--  1 quoha  staff  125 Sep 29 22:40 public/post/first/index.html
-rw-r--r--  1 quoha  staff    0 Sep 29 22:40 public/post/index.html
-rw-r--r--  1 quoha  staff  128 Sep 29 22:40 public/post/second/index.html

$ cat public/post/first/index.html
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;first&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;first&lt;/h1&gt;
  &lt;p&gt;my first post&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;

$ cat public/post/second/index.html
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;second&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;second&lt;/h1&gt;
  &lt;p&gt;my second post&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;
$
</code></pre>

<p>Notice that the posts now have content. You can go to localhost:1313/post/first to verify.</p>

<h3 id="linking-to-content">Linking to Content</h3>

<p>The posts are on the home page. Let&rsquo;s add a link from there to the post. Since this is the home page, we&rsquo;ll update its template.</p>

<pre><code>$ vi themes/zafta/layouts/index.html
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;
  {{ range first 10 .Data.Pages }}
    &lt;h1&gt;&lt;a href=&quot;{{ .Permalink }}&quot;&gt;{{ .Title }}&lt;/a&gt;&lt;/h1&gt;
  {{ end }}
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Build the web site and verify the results.</p>

<pre><code>$ rm -rf public
$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 found taxonomies: map[string]string{&quot;tag&quot;:&quot;tags&quot;, &quot;category&quot;:&quot;categories&quot;}
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content
0 future content
2 pages created
0 tags created
0 categories created
in 4 ms

$ find public -type f -name '*.html' | xargs ls -l
-rw-r--r--  1 quoha  staff  149 Sep 29 22:44 public/index.html
-rw-r--r--  1 quoha  staff  125 Sep 29 22:44 public/post/first/index.html
-rw-r--r--  1 quoha  staff    0 Sep 29 22:44 public/post/index.html
-rw-r--r--  1 quoha  staff  128 Sep 29 22:44 public/post/second/index.html

$ cat public/index.html
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;

    &lt;h1&gt;&lt;a href=&quot;/post/second/&quot;&gt;second&lt;/a&gt;&lt;/h1&gt;

    &lt;h1&gt;&lt;a href=&quot;/post/first/&quot;&gt;first&lt;/a&gt;&lt;/h1&gt;

&lt;/body&gt;
&lt;/html&gt;

$
</code></pre>

<h3 id="create-a-post-listing">Create a Post Listing</h3>

<p>We have the posts displaying on the home page and on their own page. We also have a file public/post/index.html that is empty. Let&rsquo;s make it show a list of all posts (not just the first ten).</p>

<p>We need to decide which template to update. This will be a listing, so it should be a list template. Let&rsquo;s take a quick look and see which list templates are available.</p>

<pre><code>$ find themes/zafta -name list.html | xargs ls -l
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/_default/list.html
</code></pre>

<p>As with the single post, we have to decide to update _default/list.html or create post/list.html. We still don&rsquo;t have multiple content types, so let&rsquo;s stay consistent and update the default list template.</p>

<h2 id="creating-top-level-pages">Creating Top Level Pages</h2>

<p>Let&rsquo;s add an &ldquo;about&rdquo; page and display it at the top level (as opposed to a sub-level like we did with posts).</p>

<p>The default in Hugo is to use the directory structure of the content/ directory to guide the location of the generated html in the public/ directory. Let&rsquo;s verify that by creating an &ldquo;about&rdquo; page at the top level:</p>

<pre><code>$ vi content/about.md
+++
title = &quot;about&quot;
description = &quot;about this site&quot;
date = &quot;2014-09-27&quot;
slug = &quot;about time&quot;
+++

## about us

i'm speechless
:wq
</code></pre>

<p>Generate the web site and verify the results.</p>

<pre><code>$ find public -name '*.html' | xargs ls -l
-rw-rw-r--  1 mdhender  staff   334 Sep 27 15:08 public/about-time/index.html
-rw-rw-r--  1 mdhender  staff   527 Sep 27 15:08 public/index.html
-rw-rw-r--  1 mdhender  staff   358 Sep 27 15:08 public/post/first-post/index.html
-rw-rw-r--  1 mdhender  staff     0 Sep 27 15:08 public/post/index.html
-rw-rw-r--  1 mdhender  staff   342 Sep 27 15:08 public/post/second-post/index.html
</code></pre>

<p>Notice that the page wasn&rsquo;t created at the top level. It was created in a sub-directory named &lsquo;about-time/&rsquo;. That name came from our slug. Hugo will use the slug to name the generated content. It&rsquo;s a reasonable default, by the way, but we can learn a few things by fighting it for this file.</p>

<p>One other thing. Take a look at the home page.</p>

<pre><code>$ cat public/index.html
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;
    &lt;h1&gt;&lt;a href=&quot;http://localhost:1313/post/theme/&quot;&gt;creating a new theme&lt;/a&gt;&lt;/h1&gt;
    &lt;h1&gt;&lt;a href=&quot;http://localhost:1313/about-time/&quot;&gt;about&lt;/a&gt;&lt;/h1&gt;
    &lt;h1&gt;&lt;a href=&quot;http://localhost:1313/post/second-post/&quot;&gt;second&lt;/a&gt;&lt;/h1&gt;
    &lt;h1&gt;&lt;a href=&quot;http://localhost:1313/post/first-post/&quot;&gt;first&lt;/a&gt;&lt;/h1&gt;
&lt;script&gt;document.write('&lt;script src=&quot;http://'
        + (location.host || 'localhost').split(':')[0]
        + ':1313/livereload.js?mindelay=10&quot;&gt;&lt;/'
        + 'script&gt;')&lt;/script&gt;&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Notice that the &ldquo;about&rdquo; link is listed with the posts? That&rsquo;s not desirable, so let&rsquo;s change that first.</p>

<pre><code>$ vi themes/zafta/layouts/index.html
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;
  &lt;h1&gt;posts&lt;/h1&gt;
  {{ range first 10 .Data.Pages }}
    {{ if eq .Type &quot;post&quot;}}
      &lt;h2&gt;&lt;a href=&quot;{{ .Permalink }}&quot;&gt;{{ .Title }}&lt;/a&gt;&lt;/h2&gt;
    {{ end }}
  {{ end }}

  &lt;h1&gt;pages&lt;/h1&gt;
  {{ range .Data.Pages }}
    {{ if eq .Type &quot;page&quot; }}
      &lt;h2&gt;&lt;a href=&quot;{{ .Permalink }}&quot;&gt;{{ .Title }}&lt;/a&gt;&lt;/h2&gt;
    {{ end }}
  {{ end }}
&lt;/body&gt;
&lt;/html&gt;
:wq
</code></pre>

<p>Generate the web site and verify the results. The home page has two sections, posts and pages, and each section has the right set of headings and links in it.</p>

<p>But, that about page still renders to about-time/index.html.</p>

<pre><code>$ find public -name '*.html' | xargs ls -l
-rw-rw-r--  1 mdhender  staff    334 Sep 27 15:33 public/about-time/index.html
-rw-rw-r--  1 mdhender  staff    645 Sep 27 15:33 public/index.html
-rw-rw-r--  1 mdhender  staff    358 Sep 27 15:33 public/post/first-post/index.html
-rw-rw-r--  1 mdhender  staff      0 Sep 27 15:33 public/post/index.html
-rw-rw-r--  1 mdhender  staff    342 Sep 27 15:33 public/post/second-post/index.html
</code></pre>

<p>Knowing that hugo is using the slug to generate the file name, the simplest solution is to change the slug. Let&rsquo;s do it the hard way and change the permalink in the configuration file.</p>

<pre><code>$ vi config.toml
[permalinks]
  page = &quot;/:title/&quot;
  about = &quot;/:filename/&quot;
</code></pre>

<p>Generate the web site and verify that this didn&rsquo;t work. Hugo lets &ldquo;slug&rdquo; or &ldquo;URL&rdquo; override the permalinks setting in the configuration file. Go ahead and comment out the slug in content/about.md, then generate the web site to get it to be created in the right place.</p>

<h2 id="sharing-templates">Sharing Templates</h2>

<p>If you&rsquo;ve been following along, you probably noticed that posts have titles in the browser and the home page doesn&rsquo;t. That&rsquo;s because we didn&rsquo;t put the title in the home page&rsquo;s template (layouts/index.html). That&rsquo;s an easy thing to do, but let&rsquo;s look at a different option.</p>

<p>We can put the common bits into a shared template that&rsquo;s stored in the themes/zafta/layouts/partials/ directory.</p>

<h3 id="create-the-header-and-footer-partials">Create the Header and Footer Partials</h3>

<p>In Hugo, a partial is a sugar-coated template. Normally a template reference has a path specified. Partials are different. Hugo searches for them along a TODO defined search path. This makes it easier for end-users to override the theme&rsquo;s presentation.</p>

<pre><code>$ vi themes/zafta/layouts/partials/header.html
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;{{ .Title }}&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
:wq

$ vi themes/zafta/layouts/partials/footer.html
&lt;/body&gt;
&lt;/html&gt;
:wq
</code></pre>

<h3 id="update-the-home-page-template-to-use-the-partials">Update the Home Page Template to Use the Partials</h3>

<p>The most noticeable difference between a template call and a partials call is the lack of path:</p>

<pre><code>{{ template &quot;theme/partials/header.html&quot; . }}
</code></pre>

<p>versus</p>

<pre><code>{{ partial &quot;header.html&quot; . }}
</code></pre>

<p>Both pass in the context.</p>

<p>Let&rsquo;s change the home page template to use these new partials.</p>

<pre><code>$ vi themes/zafta/layouts/index.html
{{ partial &quot;header.html&quot; . }}

  &lt;h1&gt;posts&lt;/h1&gt;
  {{ range first 10 .Data.Pages }}
    {{ if eq .Type &quot;post&quot;}}
      &lt;h2&gt;&lt;a href=&quot;{{ .Permalink }}&quot;&gt;{{ .Title }}&lt;/a&gt;&lt;/h2&gt;
    {{ end }}
  {{ end }}

  &lt;h1&gt;pages&lt;/h1&gt;
  {{ range .Data.Pages }}
    {{ if or (eq .Type &quot;page&quot;) (eq .Type &quot;about&quot;) }}
      &lt;h2&gt;&lt;a href=&quot;{{ .Permalink }}&quot;&gt;{{ .Type }} - {{ .Title }} - {{ .RelPermalink }}&lt;/a&gt;&lt;/h2&gt;
    {{ end }}
  {{ end }}

{{ partial &quot;footer.html&quot; . }}
:wq
</code></pre>

<p>Generate the web site and verify the results. The title on the home page is now &ldquo;your title here&rdquo;, which comes from the &ldquo;title&rdquo; variable in the config.toml file.</p>

<h3 id="update-the-default-single-template-to-use-the-partials">Update the Default Single Template to Use the Partials</h3>

<pre><code>$ vi themes/zafta/layouts/_default/single.html
{{ partial &quot;header.html&quot; . }}

  &lt;h1&gt;{{ .Title }}&lt;/h1&gt;
  {{ .Content }}

{{ partial &quot;footer.html&quot; . }}
:wq
</code></pre>

<p>Generate the web site and verify the results. The title on the posts and the about page should both reflect the value in the markdown file.</p>

<h2 id="add-date-published-to-posts">Add “Date Published” to Posts</h2>

<p>It&rsquo;s common to have posts display the date that they were written or published, so let&rsquo;s add that. The front matter of our posts has a variable named &ldquo;date.&rdquo; It&rsquo;s usually the date the content was created, but let&rsquo;s pretend that&rsquo;s the value we want to display.</p>

<h3 id="add-date-published-to-the-template">Add “Date Published” to the Template</h3>

<p>We&rsquo;ll start by updating the template used to render the posts. The template code will look like:</p>

<pre><code>{{ .Date.Format &quot;Mon, Jan 2, 2006&quot; }}
</code></pre>

<p>Posts use the default single template, so we&rsquo;ll change that file.</p>

<pre><code>$ vi themes/zafta/layouts/_default/single.html
{{ partial &quot;header.html&quot; . }}

  &lt;h1&gt;{{ .Title }}&lt;/h1&gt;
  &lt;h2&gt;{{ .Date.Format &quot;Mon, Jan 2, 2006&quot; }}&lt;/h2&gt;
  {{ .Content }}

{{ partial &quot;footer.html&quot; . }}
:wq
</code></pre>

<p>Generate the web site and verify the results. The posts now have the date displayed in them. There&rsquo;s a problem, though. The &ldquo;about&rdquo; page also has the date displayed.</p>

<p>As usual, there are a couple of ways to make the date display only on posts. We could do an &ldquo;if&rdquo; statement like we did on the home page. Another way would be to create a separate template for posts.</p>

<p>The &ldquo;if&rdquo; solution works for sites that have just a couple of content types. It aligns with the principle of &ldquo;code for today,&rdquo; too.</p>

<p>Let&rsquo;s assume, though, that we&rsquo;ve made our site so complex that we feel we have to create a new template type. In Hugo-speak, we&rsquo;re going to create a section template.</p>

<p>Let&rsquo;s restore the default single template before we forget.</p>

<pre><code>$ mkdir themes/zafta/layouts/post
$ vi themes/zafta/layouts/_default/single.html
{{ partial &quot;header.html&quot; . }}

  &lt;h1&gt;{{ .Title }}&lt;/h1&gt;
  {{ .Content }}

{{ partial &quot;footer.html&quot; . }}
:wq
</code></pre>

<p>Now we&rsquo;ll update the post&rsquo;s version of the single template. If you remember Hugo&rsquo;s rules, the template engine will use this version over the default.</p>

<pre><code>$ vi themes/zafta/layouts/post/single.html
{{ partial &quot;header.html&quot; . }}

  &lt;h1&gt;{{ .Title }}&lt;/h1&gt;
  &lt;h2&gt;{{ .Date.Format &quot;Mon, Jan 2, 2006&quot; }}&lt;/h2&gt;
  {{ .Content }}

{{ partial &quot;footer.html&quot; . }}
:wq

</code></pre>

<p>Note that we removed the date logic from the default template and put it in the post template. Generate the web site and verify the results. Posts have dates and the about page doesn&rsquo;t.</p>

<h3 id="don-t-repeat-yourself">Don&rsquo;t Repeat Yourself</h3>

<p>DRY is a good design goal and Hugo does a great job supporting it. Part of the art of a good template is knowing when to add a new template and when to update an existing one. While you&rsquo;re figuring that out, accept that you&rsquo;ll be doing some refactoring. Hugo makes that easy and fast, so it&rsquo;s okay to delay splitting up a template.</p>
]]></content>
		</item>
		
		<item>
			<title>(Hu)go Template Primer</title>
			<link>https://fffou.com/post/goisforlovers/</link>
			<pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/goisforlovers/</guid>
			<description>&lt;p&gt;Hugo uses the excellent &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; &lt;a href=&#34;https://golang.org/pkg/html/template/&#34;&gt;html/template&lt;/a&gt; library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in Go templates.&lt;/p&gt;</description>
			<content type="html"><![CDATA[<p>Hugo uses the excellent <a href="https://golang.org/">Go</a> <a href="https://golang.org/pkg/html/template/">html/template</a> library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in Go templates.</p>

<p>This document is a brief primer on using Go templates. The <a href="https://golang.org/pkg/html/template/">Go docs</a>
provide more details.</p>

<h2 id="introduction-to-go-templates">Introduction to Go Templates</h2>

<p>Go templates provide an extremely simple template language. It adheres to the
belief that only the most basic of logic belongs in the template or view layer.
One consequence of this simplicity is that Go templates parse very quickly.</p>

<p>A unique characteristic of Go templates is they are content aware. Variables and
content will be sanitized depending on the context of where they are used. More
details can be found in the <a href="https://golang.org/pkg/html/template/">Go docs</a>.</p>

<h2 id="basic-syntax">Basic Syntax</h2>

<p>Golang templates are HTML files with the addition of variables and
functions.</p>

<p><strong>Go variables and functions are accessible within {{ }}</strong></p>

<p>Accessing a predefined variable &ldquo;foo&rdquo;:</p>

<pre><code>{{ foo }}
</code></pre>

<p><strong>Parameters are separated using spaces</strong></p>

<p>Calling the add function with input of 1, 2:</p>

<pre><code>{{ add 1 2 }}
</code></pre>

<p><strong>Methods and fields are accessed via dot notation</strong></p>

<p>Accessing the Page Parameter &ldquo;bar&rdquo;</p>

<pre><code>{{ .Params.bar }}
</code></pre>

<p><strong>Parentheses can be used to group items together</strong></p>

<pre><code>{{ if or (isset .Params &quot;alt&quot;) (isset .Params &quot;caption&quot;) }} Caption {{ end }}
</code></pre>

<h2 id="variables">Variables</h2>

<p>Each Go template has a struct (object) made available to it. In hugo each
template is passed either a page or a node struct depending on which type of
page you are rendering. More details are available on the
<a href="/layout/variables">variables</a> page.</p>

<p>A variable is accessed by referencing the variable name.</p>

<pre><code>&lt;title&gt;{{ .Title }}&lt;/title&gt;
</code></pre>

<p>Variables can also be defined and referenced.</p>

<pre><code>{{ $address := &quot;123 Main St.&quot;}}
{{ $address }}
</code></pre>

<h2 id="functions">Functions</h2>

<p>Go template ship with a few functions which provide basic functionality. The Go
template system also provides a mechanism for applications to extend the
available functions with their own. <a href="/layout/functions">Hugo template
functions</a> provide some additional functionality we believe
are useful for building websites. Functions are called by using their name
followed by the required parameters separated by spaces. Template
functions cannot be added without recompiling hugo.</p>

<p><strong>Example:</strong></p>

<pre><code>{{ add 1 2 }}
</code></pre>

<h2 id="includes">Includes</h2>

<p>When including another template you will pass to it the data it will be
able to access. To pass along the current context please remember to
include a trailing dot. The templates location will always be starting at
the /layout/ directory within Hugo.</p>

<p><strong>Example:</strong></p>

<pre><code>{{ template &quot;chrome/header.html&quot; . }}
</code></pre>

<h2 id="logic">Logic</h2>

<p>Go templates provide the most basic iteration and conditional logic.</p>

<h3 id="iteration">Iteration</h3>

<p>Just like in Go, the Go templates make heavy use of range to iterate over
a map, array or slice. The following are different examples of how to use
range.</p>

<p><strong>Example 1: Using Context</strong></p>

<pre><code>{{ range array }}
    {{ . }}
{{ end }}
</code></pre>

<p><strong>Example 2: Declaring value variable name</strong></p>

<pre><code>{{range $element := array}}
    {{ $element }}
{{ end }}
</code></pre>

<p><strong>Example 2: Declaring key and value variable name</strong></p>

<pre><code>{{range $index, $element := array}}
    {{ $index }}
    {{ $element }}
{{ end }}
</code></pre>

<h3 id="conditionals">Conditionals</h3>

<p>If, else, with, or, &amp; and provide the framework for handling conditional
logic in Go Templates. Like range, each statement is closed with <code>end</code>.</p>

<p>Go Templates treat the following values as false:</p>

<ul>
<li>false</li>
<li>0</li>
<li>any array, slice, map, or string of length zero</li>
</ul>

<p><strong>Example 1: If</strong></p>

<pre><code>{{ if isset .Params &quot;title&quot; }}&lt;h4&gt;{{ index .Params &quot;title&quot; }}&lt;/h4&gt;{{ end }}
</code></pre>

<p><strong>Example 2: If -&gt; Else</strong></p>

<pre><code>{{ if isset .Params &quot;alt&quot; }}
    {{ index .Params &quot;alt&quot; }}
{{else}}
    {{ index .Params &quot;caption&quot; }}
{{ end }}
</code></pre>

<p><strong>Example 3: And &amp; Or</strong></p>

<pre><code>{{ if and (or (isset .Params &quot;title&quot;) (isset .Params &quot;caption&quot;)) (isset .Params &quot;attr&quot;)}}
</code></pre>

<p><strong>Example 4: With</strong></p>

<p>An alternative way of writing &ldquo;if&rdquo; and then referencing the same value
is to use &ldquo;with&rdquo; instead. With rebinds the context <code>.</code> within its scope,
and skips the block if the variable is absent.</p>

<p>The first example above could be simplified as:</p>

<pre><code>{{ with .Params.title }}&lt;h4&gt;{{ . }}&lt;/h4&gt;{{ end }}
</code></pre>

<p><strong>Example 5: If -&gt; Else If</strong></p>

<pre><code>{{ if isset .Params &quot;alt&quot; }}
    {{ index .Params &quot;alt&quot; }}
{{ else if isset .Params &quot;caption&quot; }}
    {{ index .Params &quot;caption&quot; }}
{{ end }}
</code></pre>

<h2 id="pipes">Pipes</h2>

<p>One of the most powerful components of Go templates is the ability to
stack actions one after another. This is done by using pipes. Borrowed
from unix pipes, the concept is simple, each pipeline&rsquo;s output becomes the
input of the following pipe.</p>

<p>Because of the very simple syntax of Go templates, the pipe is essential
to being able to chain together function calls. One limitation of the
pipes is that they only can work with a single value and that value
becomes the last parameter of the next pipeline.</p>

<p>A few simple examples should help convey how to use the pipe.</p>

<p><strong>Example 1 :</strong></p>

<pre><code>{{ if eq 1 1 }} Same {{ end }}
</code></pre>

<p>is the same as</p>

<pre><code>{{ eq 1 1 | if }} Same {{ end }}
</code></pre>

<p>It does look odd to place the if at the end, but it does provide a good
illustration of how to use the pipes.</p>

<p><strong>Example 2 :</strong></p>

<pre><code>{{ index .Params &quot;disqus_url&quot; | html }}
</code></pre>

<p>Access the page parameter called &ldquo;disqus_url&rdquo; and escape the HTML.</p>

<p><strong>Example 3 :</strong></p>

<pre><code>{{ if or (or (isset .Params &quot;title&quot;) (isset .Params &quot;caption&quot;)) (isset .Params &quot;attr&quot;)}}
Stuff Here
{{ end }}
</code></pre>

<p>Could be rewritten as</p>

<pre><code>{{  isset .Params &quot;caption&quot; | or isset .Params &quot;title&quot; | or isset .Params &quot;attr&quot; | if }}
Stuff Here
{{ end }}
</code></pre>

<h2 id="context-aka-the-dot">Context (aka. the dot)</h2>

<p>The most easily overlooked concept to understand about Go templates is that {{ . }}
always refers to the current context. In the top level of your template this
will be the data set made available to it. Inside of a iteration it will have
the value of the current item. When inside of a loop the context has changed. .
will no longer refer to the data available to the entire page. If you need to
access this from within the loop you will likely want to set it to a variable
instead of depending on the context.</p>

<p><strong>Example:</strong></p>

<pre><code>  {{ $title := .Site.Title }}
  {{ range .Params.tags }}
    &lt;li&gt; &lt;a href=&quot;{{ $baseurl }}/tags/{{ . | urlize }}&quot;&gt;{{ . }}&lt;/a&gt; - {{ $title }} &lt;/li&gt;
  {{ end }}
</code></pre>

<p>Notice how once we have entered the loop the value of {{ . }} has changed. We
have defined a variable outside of the loop so we have access to it from within
the loop.</p>

<h1 id="hugo-parameters">Hugo Parameters</h1>

<p>Hugo provides the option of passing values to the template language
through the site configuration (for sitewide values), or through the meta
data of each specific piece of content. You can define any values of any
type (supported by your front matter/config format) and use them however
you want to inside of your templates.</p>

<h2 id="using-content-page-parameters">Using Content (page) Parameters</h2>

<p>In each piece of content you can provide variables to be used by the
templates. This happens in the <a href="/content/front-matter">front matter</a>.</p>

<p>An example of this is used in this documentation site. Most of the pages
benefit from having the table of contents provided. Sometimes the TOC just
doesn&rsquo;t make a lot of sense. We&rsquo;ve defined a variable in our front matter
of some pages to turn off the TOC from being displayed.</p>

<p>Here is the example front matter:</p>

<pre><code>---
title: &quot;Permalinks&quot;
date: &quot;2013-11-18&quot;
aliases:
  - &quot;/doc/permalinks/&quot;
groups: [&quot;extras&quot;]
groups_weight: 30
notoc: true
---
</code></pre>

<p>Here is the corresponding code inside of the template:</p>

<pre><code>  {{ if not .Params.notoc }}
    &lt;div id=&quot;toc&quot; class=&quot;well col-md-4 col-sm-6&quot;&gt;
    {{ .TableOfContents }}
    &lt;/div&gt;
  {{ end }}
</code></pre>

<h2 id="using-site-config-parameters">Using Site (config) Parameters</h2>

<p>In your top-level configuration file (eg, <code>config.yaml</code>) you can define site
parameters, which are values which will be available to you in chrome.</p>

<p>For instance, you might declare:</p>
<div class="highlight"><pre class="chroma"><code class="language-yaml" data-lang="yaml">params<span class="p">:</span><span class="w">
</span><span class="w">  </span>CopyrightHTML<span class="p">:</span><span class="w"> </span><span class="s2">&#34;Copyright &amp;#xA9; 2013 John Doe. All Rights Reserved.&#34;</span><span class="w">
</span><span class="w">  </span>TwitterUser<span class="p">:</span><span class="w"> </span><span class="s2">&#34;spf13&#34;</span><span class="w">
</span><span class="w">  </span>SidebarRecentLimit<span class="p">:</span><span class="w"> </span><span class="m">5</span></code></pre></div>
<p>Within a footer layout, you might then declare a <code>&lt;footer&gt;</code> which is only
provided if the <code>CopyrightHTML</code> parameter is provided, and if it is given,
you would declare it to be HTML-safe, so that the HTML entity is not escaped
again.  This would let you easily update just your top-level config file each
January 1st, instead of hunting through your templates.</p>

<pre><code>{{if .Site.Params.CopyrightHTML}}&lt;footer&gt;
&lt;div class=&quot;text-center&quot;&gt;{{.Site.Params.CopyrightHTML | safeHtml}}&lt;/div&gt;
&lt;/footer&gt;{{end}}
</code></pre>

<p>An alternative way of writing the &ldquo;if&rdquo; and then referencing the same value
is to use &ldquo;with&rdquo; instead. With rebinds the context <code>.</code> within its scope,
and skips the block if the variable is absent:</p>

<pre><code>{{with .Site.Params.TwitterUser}}&lt;span class=&quot;twitter&quot;&gt;
&lt;a href=&quot;https://twitter.com/{{.}}&quot; rel=&quot;author&quot;&gt;
&lt;img src=&quot;/images/twitter.png&quot; width=&quot;48&quot; height=&quot;48&quot; title=&quot;Twitter: {{.}}&quot;
alt=&quot;Twitter&quot;&gt;&lt;/a&gt;
&lt;/span&gt;{{end}}
</code></pre>

<p>Finally, if you want to pull &ldquo;magic constants&rdquo; out of your layouts, you can do
so, such as in this example:</p>

<pre><code>&lt;nav class=&quot;recent&quot;&gt;
  &lt;h1&gt;Recent Posts&lt;/h1&gt;
  &lt;ul&gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}}
    &lt;li&gt;&lt;a href=&quot;{{.RelPermalink}}&quot;&gt;{{.Title}}&lt;/a&gt;&lt;/li&gt;
  {{end}}&lt;/ul&gt;
&lt;/nav&gt;
</code></pre>]]></content>
		</item>
		
		<item>
			<title>Getting Started with Hugo</title>
			<link>https://fffou.com/post/hugoisforlovers/</link>
			<pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/hugoisforlovers/</guid>
			<description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
			<content type="html"><![CDATA[

<h2 id="step-1-install-hugo">Step 1. Install Hugo</h2>

<p>Go to <a href="https://github.com/spf13/hugo/releases">Hugo releases</a> and download the
appropriate version for your OS and architecture.</p>

<p>Save it somewhere specific as we will be using it in the next step.</p>

<p>More complete instructions are available at <a href="https://gohugo.io/getting-started/installing/">Install Hugo</a></p>

<h2 id="step-2-build-the-docs">Step 2. Build the Docs</h2>

<p>Hugo has its own example site which happens to also be the documentation site
you are reading right now.</p>

<p>Follow the following steps:</p>

<ol>
<li>Clone the <a href="https://github.com/spf13/hugo">Hugo repository</a></li>
<li>Go into the repo</li>
<li>Run hugo in server mode and build the docs</li>
<li>Open your browser to <a href="http://localhost:1313">http://localhost:1313</a></li>
</ol>

<p>Corresponding pseudo commands:</p>

<pre><code>git clone https://github.com/spf13/hugo
cd hugo
/path/to/where/you/installed/hugo server --source=./docs
&gt; 29 pages created
&gt; 0 tags index created
&gt; in 27 ms
&gt; Web Server is available at http://localhost:1313
&gt; Press ctrl+c to stop
</code></pre>

<p>Once you&rsquo;ve gotten here, follow along the rest of this page on your local build.</p>

<h2 id="step-3-change-the-docs-site">Step 3. Change the docs site</h2>

<p>Stop the Hugo process by hitting Ctrl+C.</p>

<p>Now we are going to run hugo again, but this time with hugo in watch mode.</p>

<pre><code>/path/to/hugo/from/step/1/hugo server --source=./docs --watch
&gt; 29 pages created
&gt; 0 tags index created
&gt; in 27 ms
&gt; Web Server is available at http://localhost:1313
&gt; Watching for changes in /Users/spf13/Code/hugo/docs/content
&gt; Press ctrl+c to stop
</code></pre>

<p>Open your <a href="http://vim.spf13.com">favorite editor</a> and change one of the source
content pages. How about changing this very file to <em>fix the typo</em>. How about changing this very file to <em>fix the typo</em>.</p>

<p>Content files are found in <code>docs/content/</code>. Unless otherwise specified, files
are located at the same relative location as the url, in our case
<code>docs/content/overview/quickstart.md</code>.</p>

<p>Change and save this file.. Notice what happened in your terminal.</p>

<pre><code>&gt; Change detected, rebuilding site

&gt; 29 pages created
&gt; 0 tags index created
&gt; in 26 ms
</code></pre>

<p>Refresh the browser and observe that the typo is now fixed.</p>

<p>Notice how quick that was. Try to refresh the site before it&rsquo;s finished building. I double dare you.
Having nearly instant feedback enables you to have your creativity flow without waiting for long builds.</p>

<h2 id="step-4-have-fun">Step 4. Have fun</h2>

<p>The best way to learn something is to play with it.</p>
]]></content>
		</item>
		
		<item>
			<title>Migrate to Hugo from Jekyll</title>
			<link>https://fffou.com/post/migrate-from-jekyll/</link>
			<pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
			
			<guid>https://fffou.com/post/migrate-from-jekyll/</guid>
			<description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
			<content type="html"><![CDATA[

<h2 id="move-static-content-to-static">Move static content to <code>static</code></h2>

<p>Jekyll has a rule that any directory not starting with <code>_</code> will be copied as-is to the <code>_site</code> output. Hugo keeps all static content under <code>static</code>. You should therefore move it all there.
With Jekyll, something that looked like</p>

<pre><code>▾ &lt;root&gt;/
    ▾ images/
        logo.png
</code></pre>

<p>should become</p>

<pre><code>▾ &lt;root&gt;/
    ▾ static/
        ▾ images/
            logo.png
</code></pre>

<p>Additionally, you&rsquo;ll want any files that should reside at the root (such as <code>CNAME</code>) to be moved to <code>static</code>.</p>

<h2 id="create-your-hugo-configuration-file">Create your Hugo configuration file</h2>

<p>Hugo can read your configuration as JSON, YAML or TOML. Hugo supports parameters custom configuration too. Refer to the <a href="/overview/configuration/">Hugo configuration documentation</a> for details.</p>

<h2 id="set-your-configuration-publish-folder-to-site">Set your configuration publish folder to <code>_site</code></h2>

<p>The default is for Jekyll to publish to <code>_site</code> and for Hugo to publish to <code>public</code>. If, like me, you have <a href="http://blog.blindgaenger.net/generate_github_pages_in_a_submodule.html"><code>_site</code> mapped to a git submodule on the <code>gh-pages</code> branch</a>, you&rsquo;ll want to do one of two alternatives:</p>

<ol>
<li><p>Change your submodule to point to map <code>gh-pages</code> to public instead of <code>_site</code> (recommended).</p>

<pre><code>git submodule deinit _site
git rm _site
git submodule add -b gh-pages git@github.com:your-username/your-repo.git public
</code></pre></li>

<li><p>Or, change the Hugo configuration to use <code>_site</code> instead of <code>public</code>.</p>

<pre><code>{
    ..
    &quot;publishdir&quot;: &quot;_site&quot;,
    ..
}
</code></pre></li>
</ol>

<h2 id="convert-jekyll-templates-to-hugo-templates">Convert Jekyll templates to Hugo templates</h2>

<p>That&rsquo;s the bulk of the work right here. The documentation is your friend. You should refer to <a href="http://jekyllrb.com/docs/templates/">Jekyll&rsquo;s template documentation</a> if you need to refresh your memory on how you built your blog and <a href="/layout/templates/">Hugo&rsquo;s template</a> to learn Hugo&rsquo;s way.</p>

<p>As a single reference data point, converting my templates for <a href="http://heyitsalex.net/">heyitsalex.net</a> took me no more than a few hours.</p>

<h2 id="convert-jekyll-plugins-to-hugo-shortcodes">Convert Jekyll plugins to Hugo shortcodes</h2>

<p>Jekyll has <a href="http://jekyllrb.com/docs/plugins/">plugins</a>; Hugo has <a href="/doc/shortcodes/">shortcodes</a>. It&rsquo;s fairly trivial to do a port.</p>

<h3 id="implementation">Implementation</h3>

<p>As an example, I was using a custom <a href="https://github.com/alexandre-normand/alexandre-normand/blob/74bb12036a71334fdb7dba84e073382fc06908ec/_plugins/image_tag.rb"><code>image_tag</code></a> plugin to generate figures with caption when running Jekyll. As I read about shortcodes, I found Hugo had a nice built-in shortcode that does exactly the same thing.</p>

<p>Jekyll&rsquo;s plugin:</p>

<pre><code>module Jekyll
  class ImageTag &lt; Liquid::Tag
    @url = nil
    @caption = nil
    @class = nil
    @link = nil
    // Patterns
    IMAGE_URL_WITH_CLASS_AND_CAPTION =
    IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK = /(\w+)(\s+)((https?:\/\/|\/)(\S+))(\s+)&quot;(.*?)&quot;(\s+)-&gt;((https?:\/\/|\/)(\S+))(\s*)/i
    IMAGE_URL_WITH_CAPTION = /((https?:\/\/|\/)(\S+))(\s+)&quot;(.*?)&quot;/i
    IMAGE_URL_WITH_CLASS = /(\w+)(\s+)((https?:\/\/|\/)(\S+))/i
    IMAGE_URL = /((https?:\/\/|\/)(\S+))/i
    def initialize(tag_name, markup, tokens)
      super
      if markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK
        @class   = $1
        @url     = $3
        @caption = $7
        @link = $9
      elsif markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION
        @class   = $1
        @url     = $3
        @caption = $7
      elsif markup =~ IMAGE_URL_WITH_CAPTION
        @url     = $1
        @caption = $5
      elsif markup =~ IMAGE_URL_WITH_CLASS
        @class = $1
        @url   = $3
      elsif markup =~ IMAGE_URL
        @url = $1
      end
    end
    def render(context)
      if @class
        source = &quot;&lt;figure class='#{@class}'&gt;&quot;
      else
        source = &quot;&lt;figure&gt;&quot;
      end
      if @link
        source += &quot;&lt;a href=\&quot;#{@link}\&quot;&gt;&quot;
      end
      source += &quot;&lt;img src=\&quot;#{@url}\&quot;&gt;&quot;
      if @link
        source += &quot;&lt;/a&gt;&quot;
      end
      source += &quot;&lt;figcaption&gt;#{@caption}&lt;/figcaption&gt;&quot; if @caption
      source += &quot;&lt;/figure&gt;&quot;
      source
    end
  end
end
Liquid::Template.register_tag('image', Jekyll::ImageTag)
</code></pre>

<p>is written as this Hugo shortcode:</p>

<pre><code>&lt;!-- image --&gt;
&lt;figure {{ with .Get &quot;class&quot; }}class=&quot;{{.}}&quot;{{ end }}&gt;
    {{ with .Get &quot;link&quot;}}&lt;a href=&quot;{{.}}&quot;&gt;{{ end }}
        &lt;img src=&quot;{{ .Get &quot;src&quot; }}&quot; {{ if or (.Get &quot;alt&quot;) (.Get &quot;caption&quot;) }}alt=&quot;{{ with .Get &quot;alt&quot;}}{{.}}{{else}}{{ .Get &quot;caption&quot; }}{{ end }}&quot;{{ end }} /&gt;
    {{ if .Get &quot;link&quot;}}&lt;/a&gt;{{ end }}
    {{ if or (or (.Get &quot;title&quot;) (.Get &quot;caption&quot;)) (.Get &quot;attr&quot;)}}
    &lt;figcaption&gt;{{ if isset .Params &quot;title&quot; }}
        {{ .Get &quot;title&quot; }}{{ end }}
        {{ if or (.Get &quot;caption&quot;) (.Get &quot;attr&quot;)}}&lt;p&gt;
        {{ .Get &quot;caption&quot; }}
        {{ with .Get &quot;attrlink&quot;}}&lt;a href=&quot;{{.}}&quot;&gt; {{ end }}
            {{ .Get &quot;attr&quot; }}
        {{ if .Get &quot;attrlink&quot;}}&lt;/a&gt; {{ end }}
        &lt;/p&gt; {{ end }}
    &lt;/figcaption&gt;
    {{ end }}
&lt;/figure&gt;
&lt;!-- image --&gt;
</code></pre>

<h3 id="usage">Usage</h3>

<p>I simply changed:</p>

<pre><code>{% image full http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg &quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were &quot;having fun&quot; and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.&quot; -&gt;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/ %}
</code></pre>

<p>to this (this example uses a slightly extended version named <code>fig</code>, different than the built-in <code>figure</code>):</p>

<pre><code>{{% fig class=&quot;full&quot; src=&quot;http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg&quot; title=&quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were having fun and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.&quot; link=&quot;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/&quot; %}}
</code></pre>

<p>As a bonus, the shortcode named parameters are, arguably, more readable.</p>

<h2 id="finishing-touches">Finishing touches</h2>

<h3 id="fix-content">Fix content</h3>

<p>Depending on the amount of customization that was done with each post with Jekyll, this step will require more or less effort. There are no hard and fast rules here except that <code>hugo server --watch</code> is your friend. Test your changes and fix errors as needed.</p>

<h3 id="clean-up">Clean up</h3>

<p>You&rsquo;ll want to remove the Jekyll configuration at this point. If you have anything else that isn&rsquo;t used, delete it.</p>

<h2 id="a-practical-example-in-a-diff">A practical example in a diff</h2>

<p><a href="http://heyitsalex.net/">Hey, it&rsquo;s Alex</a> was migrated in less than a <em>father-with-kids day</em> from Jekyll to Hugo. You can see all the changes (and screw-ups) by looking at this <a href="https://github.com/alexandre-normand/alexandre-normand/compare/869d69435bd2665c3fbf5b5c78d4c22759d7613a...b7f6605b1265e83b4b81495423294208cc74d610">diff</a>.</p>
]]></content>
		</item>
		
	</channel>
</rss>
